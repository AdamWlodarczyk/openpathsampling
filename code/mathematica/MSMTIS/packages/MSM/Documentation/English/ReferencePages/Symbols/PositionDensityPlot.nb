(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     27569,        736]
NotebookOptionsPosition[     25466,        677]
NotebookOutlinePosition[     27245,        724]
CellTagsIndexPosition[     27202,        721]
WindowTitle->PositionDensityPlot - Wolfram Mathematica
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["M S M PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[Cell[BoxData[
     ActionMenuBox[
      FrameBox["\<\"URL \[RightGuillemet]\"\>",
       StripOnInput->False], {"\<\"MSM/ref/PositionDensityPlot\"\>":>
      None, "\<\"Copy Mathematica url\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell["MSM/ref/PositionDensityPlot"]}, Visible -> False]]; 
       SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; Null], 
      Delimiter, "\<\"Copy web url\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell[
             BoxData[
              MakeBoxes[
               Hyperlink[
               "http://reference.wolfram.com/mathematica/MSM/ref/\
PositionDensityPlot.html"], StandardForm]], "Input", TextClipboardType -> 
             "PlainText"]}, Visible -> False]]; 
       SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; 
       Null], "\<\"Go to web url\"\>":>FrontEndExecute[{
        NotebookLocate[{
          URL[
           StringJoin[
           "http://reference.wolfram.com/mathematica/", 
            "MSM/ref/PositionDensityPlot", ".html"]], None}]}]},
      Appearance->None,
      MenuAppearance->Automatic]],
     LineSpacing->{1.4, 0}]], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell["PositionDensityPlot", "ObjectName",
 CellID->1224892054],

Cell[BoxData[
 GridBox[
  Cell[{"", 
    Cell[
     TextData[""]]}]]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{
      Cell[None]}}, "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[
  FrameBox[
   StyleBox[
    RowBox[{"MORE", " ", "INFORMATION"}], "NotesFrameText"],
   StripOnInput->False],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->34198846],

Cell[CellGroupData[{

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["AlignmentPoint",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/AlignmentPoint"], 
    ButtonBox["Center",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Center"], Cell["\<\
AlignmentPoint is an option which specifies how objects should by default be \
aligned when they appear in Inset.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["AspectRatio",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/AspectRatio"], "1", Cell["\<\
AspectRatio is an option for Graphics and related functions that specifies \
the ratio of height to width for a plot. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Axes",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Axes"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Axes is an option for graphics functions that specifies whether axes should \
be drawn. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["AxesLabel",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/AxesLabel"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
AxesLabel is an option for graphics functions that specifies labels for axes. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["AxesOrigin",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/AxesOrigin"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
AxesOrigin is an option for graphics functions that specifies where any axes \
drawn should cross. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["AxesStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/AxesStyle"], 
    RowBox[{"{", "}"}], Cell["\<\
AxesStyle is an option for graphics functions that specifies how axes should \
be rendered. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Background",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Background"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
Background is an option that specifies what background color to use. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["BaselinePosition",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/BaselinePosition"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
BaselinePosition is an option that specifies where the baseline of an object \
is considered to be for purposes of alignment with surrounding text or other \
expressions. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["BaseStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/BaseStyle"], 
    RowBox[{"{", "}"}], Cell["\<\
BaseStyle is an option for formatting and related constructs that specifies \
the base style to use for them. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["BoundaryStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/BoundaryStyle"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
BoundaryStyle is an option for plotting functions that specifies the style in \
which boundaries of regions should be drawn. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["BoxRatios",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/BoxRatios"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
BoxRatios is an option for Graphics3D that gives the ratios of side lengths \
for the bounding box of the three\[Hyphen]dimensional picture. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ClippingStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ClippingStyle"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
ClippingStyle is an option for plotting functions that specifies the style of \
what should be drawn when curves or surfaces would extend beyond the plot \
range. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ColorFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ColorFunction"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
ColorFunction is an option for graphics functions that specifies a function \
to apply to determine colors of elements. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ColorFunctionScaling",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ColorFunctionScaling"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell["\<\
ColorFunctionScaling is an option for graphics functions that specifies \
whether arguments supplied to a color function should be scaled to lie \
between 0 and 1. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ColorOutput",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ColorOutput"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
ColorOutput is an option for graphics functions that specifies the type of \
color output to produce. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ContentSelectable",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ContentSelectable"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
ContentSelectable is an option to constructs such as Inset, Graphics, and \
GraphicsGroup that specifies whether and how content within them should be \
selectable. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["CoordinatesToolOptions",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/CoordinatesToolOptions"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[TextData[{
     "CoordinatesToolOptions is an option for Graphics that gives values of \
options associated with the ",
     Cell[BoxData[
      StyleBox[
       RowBox[{"Get", " ", "Coordinates"}], "MenuName"]], "InlineFormula"],
     " tool."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["DataRange",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/DataRange"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
DataRange is an option for functions such as ListPlot and ListDensityPlot \
that specifies what range of actual coordinates the data should be assumed to \
occupy. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["DisplayFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/DisplayFunction"], 
    ButtonBox["$DisplayFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/$DisplayFunction"], Cell["\<\
DisplayFunction is an option for graphics and sound functions that specifies \
a function to apply to graphics and sound objects before returning them.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Epilog",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Epilog"], 
    RowBox[{"{", "}"}], Cell["\<\
Epilog is an option for graphics functions that gives a list of graphics \
primitives to be rendered after the main part of the graphics is rendered. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["FormatType",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/FormatType"], 
    ButtonBox["TraditionalForm",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/TraditionalForm"], Cell["\<\
FormatType is an option for output streams, graphics, and functions such as \
Text that specifies the default format type to use when outputting \
expressions. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Frame",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Frame"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell["\<\
Frame is an option for Graphics, Grid, and other constructs that specifies \
whether to include a frame. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["FrameLabel",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/FrameLabel"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
FrameLabel is an option for Graphics, Manipulate, and related functions that \
specifies labels to be placed on the edges of a frame. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["FrameStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/FrameStyle"], 
    RowBox[{"{", "}"}], Cell["\<\
FrameStyle is an option for Graphics, Grid, and other constructs that \
specifies the style in which to draw frames.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["FrameTicks",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/FrameTicks"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
FrameTicks is an option for 2D graphics functions that specifies tick marks \
for the edges of a frame. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["FrameTicksStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/FrameTicksStyle"], 
    RowBox[{"{", "}"}], Cell["\<\
FrameTicksStyle is an option for 2D graphics functions that specifies how \
frame ticks should be rendered.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["GridLines",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GridLines"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
GridLines is an option for two-dimensional graphics functions that specifies \
grid lines. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["GridLinesStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GridLinesStyle"], 
    RowBox[{"{", "}"}], Cell["\<\
GridLinesStyle is an option for 2D graphics functions that specifies how grid \
lines should be rendered.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ImageMargins",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ImageMargins"], "0.", Cell["\<\
ImageMargins is an option that specifies the absolute margins to leave around \
the image displayed for an object. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ImagePadding",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ImagePadding"], 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell["\<\
ImagePadding is an option for graphics functions that specifies what absolute \
extra padding should be left for extended objects such as thick lines and \
annotations such as tick and axis labels.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["ImageSize",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ImageSize"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
ImageSize is an option that specifies the overall size of an image to display \
for an object. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["InterpolationOrder",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/InterpolationOrder"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
InterpolationOrder is an option for Interpolation, as well as ListLinePlot, \
ListPlot3D, ListContourPlot, and related functions, that specifies what order \
of interpolation to use.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["LabelStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/LabelStyle"], 
    RowBox[{"{", "}"}], Cell["\<\
LabelStyle is an option for formatting and related constructs that specifies \
the style to use in displaying their label-like elements. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["LightingAngle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/LightingAngle"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
LightingAngle is an option for ReliefPlot and related functions that \
specifies the angle from which simulated illumination is taken to come.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["MaxPlotPoints",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/MaxPlotPoints"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
MaxPlotPoints is an option for plotting functions like ArrayPlot and \
ListPlot3D that specifies the maximum number of points that will explicitly \
be included in the output. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Mesh",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Mesh"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
Mesh is an option for Plot3D, DensityPlot, and other plotting functions that \
specifies what mesh should be drawn. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["MeshFunctions",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/MeshFunctions"], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#1", " ", "&"}], " ", ",", " ", 
      RowBox[{"#2", " ", "&"}]}], " ", "}"}], Cell["\<\
MeshFunctions is an option for plotting functions that specifies functions to \
use to determine the placement of mesh divisions. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["MeshStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/MeshStyle"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
MeshStyle is an option for Plot3D, DensityPlot, and other plotting functions \
that specifies the style in which to draw a mesh. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Method",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Method"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
Method is an option for various algorithm-intensive functions that specifies \
what internal methods they should use.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PerformanceGoal",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PerformanceGoal"], 
    ButtonBox["$PerformanceGoal",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/$PerformanceGoal"], Cell["\<\
PerformanceGoal is an option for plotting and various other algorithmic \
functions that specifies what aspect of performance to try to optimize with \
Automatic settings for options.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PlotLabel",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PlotLabel"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
PlotLabel is an option for graphics functions that specifies an overall label \
for a plot. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PlotLegends",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PlotLegends"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
PlotLegends is an option for plot functions that specifies what legends to \
use. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PlotRange",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PlotRange"], 
    RowBox[{"{", 
     RowBox[{"Full", ",", " ", "Full", ",", " ", "Automatic"}], "}"}], 
    Cell["\<\
PlotRange is an option for graphics functions that specifies what range of \
coordinates to include in a plot. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PlotRangeClipping",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PlotRangeClipping"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell["\<\
PlotRangeClipping is an option for graphics functions that specifies whether \
graphics objects should be clipped at the edge of the region defined by \
PlotRange, or should be allowed to extend to the actual edge of the image. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PlotRangePadding",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PlotRangePadding"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
PlotRangePadding is an option for graphics functions that specifies how much \
further axes etc. should extend beyond the range of coordinates specified by \
PlotRange. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PlotRegion",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PlotRegion"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
PlotRegion is an option for graphics functions that specifies what region of \
the final display area a plot should fill. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PreserveImageOptions",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/PreserveImageOptions"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
PreserveImageOptions is an option to graphics and related functions that \
specifies whether image size and certain other options should be preserved \
from the previous version of a graphic if the graphic is replaced by a new \
one in output.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Prolog",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Prolog"], 
    RowBox[{"{", "}"}], Cell["\<\
Prolog is an option for graphics functions which gives a list of graphics \
primitives to be rendered before the main part of the graphics is rendered. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["RegionFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/RegionFunction"], 
    RowBox[{
     RowBox[{"True", " ", "&"}], " "}], Cell["\<\
RegionFunction is an option for plotting functions that specifies the region \
to include in the plot drawn. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["RotateLabel",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/RotateLabel"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell["\<\
RotateLabel is an option for graphics and related functions that specifies \
whether labels on vertical frame axes should be rotated to be vertical. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["TargetUnits",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/TargetUnits"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
TargetUnits is an option used to specify the desired output units for \
visualization functions operating on Quantity expressions.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Ticks",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Ticks"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
Ticks is an option for graphics functions that specifies tick marks for axes. \
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["TicksStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/TicksStyle"], 
    RowBox[{"{", "}"}], Cell["\<\
TicksStyle is an option for graphics functions which specifies how ticks \
should be rendered.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["VertexColors",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/VertexColors"], 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell["\<\
VertexColors is an option for graphics primitives which specifies the colors \
to assign to vertices.\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Vertices",
     BaseStyle->"Link",
     ButtonData->"paclet:MSM/ref/Vertices"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["VertexLabel",
     BaseStyle->"Link",
     ButtonData->"paclet:MSM/ref/VertexLabel"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["VertexStyle",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/VertexStyle"], 
    RowBox[{"{", "}"}], Cell["", "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {
    None, None, None, None, None, None, None, None, None, None, None, None, 
     None, None, None, None, None, None, None, None, None, None, None, None, 
     None, None, None, None, None, None, None, None, None, None, None, None, 
     None, None, None, None, None, None, None, None, None, None, None, None, 
     None, None, None, None, None, None, None, None, {None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{
     True, True, True, True, True, True, True, True, True, True, True, True, 
      True, True, True, True, True, True, True, True, True, True, True, True, 
      True, True, True, True, True, True, True, True, True, True, True, True, 
      True, True, True, True, True, True, True, True, True, True, True, True, 
      True, True, True, True, True, True, True, True, True, True}}}}]
}, Open  ]]
}, Closed]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"PositionDensityPlot - Wolfram Mathematica",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Markov State Models", ButtonData -> "paclet:MSM/guide/MSM", 
         BaseStyle -> {"Link", "DockedLinkTrail"}], 
        Cell[">", "DockedLinkTrailSeparator"]}]}}, ColumnAlignments -> Left], 
  "Metadata" -> {
   "built" -> "{2013, 5, 3, 16, 53, 0.888342}", 
    "history" -> {"XX", "", "", ""}, "context" -> "MSM`", "keywords" -> {}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "M S M Package Symbol", "language" -> "en", "paclet" -> 
    "MSM Package", "status" -> "None", "summary" -> " ", "synonyms" -> {}, 
    "title" -> "PositionDensityPlot", "titlemodifier" -> "", "windowtitle" -> 
    "PositionDensityPlot", "type" -> "Symbol", "uri" -> 
    "MSM/ref/PositionDensityPlot"}, "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> 
  "9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, 2012)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[612, 21, 1875, 41, 70, "AnchorBarGrid",
 CellID->1],
Cell[2490, 64, 62, 1, 70, "ObjectName",
 CellID->1224892054],
Cell[2555, 67, 225, 8, 70, "Usage"],
Cell[CellGroupData[{
Cell[2805, 79, 608, 18, 70, "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->34198846],
Cell[CellGroupData[{
Cell[3438, 101, 53, 0, 70, "Notes"],
Cell[3494, 103, 21918, 568, 70, "3ColumnTableMod"]
}, Open  ]]
}, Closed]],
Cell[25439, 675, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)
