(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    276553,       5684]
NotebookOptionsPosition[    263714,       5324]
NotebookOutlinePosition[    269718,       5465]
CellTagsIndexPosition[    269675,       5462]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[
ValueBox["DateLong"]], "Date",
 FontSize->11,
 FontColor->Automatic],

Cell[CellGroupData[{

Cell["MSM + MS-TIS", "Title",
 CellChangeTimes->{{3.511940787981539*^9, 3.5119407924373293`*^9}, {
  3.520158213635984*^9, 3.520158214014476*^9}, {3.614319524915757*^9, 
  3.614319539287733*^9}},
 Background->None],

Cell["\<\
A MSM-based interface description for Multi-State Transition Interface \
Sampling\
\>", "Subtitle",
 CellMargins->{{32, Inherited}, {20, 2}},
 CellChangeTimes->{{3.614319530656764*^9, 3.614319553575243*^9}}],

Cell["Jan-Hendrik Prinz", "Author",
 CellDingbat->None,
 CellFrameMargins->4,
 CellChangeTimes->{{3.4373747020098267`*^9, 3.437374705118013*^9}},
 FontSize->12],

Cell["MSKCC, New York, US", "AuthorAffiliation",
 CellChangeTimes->{{3.61431963897711*^9, 3.6143196423248453`*^9}}],

Cell["jan.prinz@choderalab.org", "AuthorEmail",
 CellChangeTimes->{{3.614319950551406*^9, 3.614319956102418*^9}}],

Cell["David Swenson", "Author",
 CellDingbat->None,
 CellFrameMargins->4,
 CellChangeTimes->{{3.4373747020098267`*^9, 3.437374705118013*^9}, {
  3.6143196463967876`*^9, 3.614319649284869*^9}},
 FontSize->12],

Cell["\<\
Universiteit van Amsterdam (UvA), Amsterdam, The Netherlands\
\>", "AuthorAffiliation",
 CellChangeTimes->{{3.6143196663006287`*^9, 3.614319684211955*^9}}],

Cell["dwhs@hyperblazer.net", "AuthorEmail",
 CellChangeTimes->{{3.6143197000434732`*^9, 3.614319703091749*^9}, 
   3.6143198749128923`*^9}],

Cell["Weina Du", "Author",
 CellDingbat->None,
 CellFrameMargins->4,
 CellChangeTimes->{{3.4373747020098267`*^9, 3.437374705118013*^9}, {
  3.6143196525890627`*^9, 3.614319662668392*^9}},
 FontSize->12],

Cell["\<\
Universiteit van Amsterdam (UvA), Amsterdam, The Netherlands\
\>", "AuthorAffiliation",
 CellChangeTimes->{{3.6143196663006287`*^9, 3.614319684211955*^9}}],

Cell["w.du@uva.nl", "AuthorEmail",
 CellChangeTimes->{{3.6143197055473948`*^9, 3.614319708939498*^9}, 
   3.614319917947116*^9}],

Cell["Peter Bolhuis", "Author",
 CellDingbat->None,
 CellFrameMargins->4,
 CellChangeTimes->{{3.4373747020098267`*^9, 3.437374705118013*^9}, {
  3.6143196525890627`*^9, 3.6143196551506367`*^9}},
 FontSize->12],

Cell["\<\
Universiteit van Amsterdam (UvA), Amsterdam, The Netherlands\
\>", "AuthorAffiliation",
 CellChangeTimes->{{3.6143196663006287`*^9, 3.614319684211955*^9}}],

Cell["p.g.bolhuis@uva.nl", "AuthorEmail",
 CellChangeTimes->{{3.614319721722516*^9, 3.614319725530449*^9}, 
   3.614319940370397*^9}],

Cell["John D. Chodera", "Author",
 CellDingbat->None,
 CellFrameMargins->4,
 CellChangeTimes->{{3.4373747020098267`*^9, 3.437374705118013*^9}, {
  3.6143195636003*^9, 3.6143195664543056`*^9}},
 FontSize->12],

Cell["MSKCC, New York, US", "AuthorAffiliation",
 CellChangeTimes->{3.614319946808687*^9}],

Cell["john.chodera@choderalab.org", "AuthorEmail",
 CellChangeTimes->{{3.61431995879806*^9, 3.614319964374105*^9}}],

Cell["[ Abstract ]", "Abstract"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[
 CounterBox["Section"],
  FontSize->24],
 StyleBox[".",
  FontSize->24],
 "INITIALIZATION"
}], "Section",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.437373710914797*^9, 3.4373737308459377`*^9}, 
   3.43737390622436*^9, 3.437373937471595*^9, {3.4373740233925943`*^9, 
   3.437374050718351*^9}, {3.4373754373897667`*^9, 3.437375442406352*^9}, {
   3.4373762350944633`*^9, 3.4373762511104727`*^9}, {3.437376289974738*^9, 
   3.437376290591658*^9}, {3.437376932583728*^9, 3.437376949595744*^9}}],

Cell[CellGroupData[{

Cell["Basic Packages", "Subsection"],

Cell["[ Here are the main packeges for every project ]", "Text"],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "packagesToBeLoaded", ",", "result", ",", " ", "$projectNameSelected", 
     ",", "$basePath", ",", "$packagesPath"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"$projectNameSelected", "=", 
     RowBox[{"NotebookFileName", "[", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"$basePath", "=", 
     RowBox[{"FileNameTake", "[", 
      RowBox[{"$projectNameSelected", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"$packagesPath", " ", "=", " ", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"$basePath", ",", "\"\<packages\>\""}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"SetDirectory", "[", "$packagesPath", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "$packagesPath", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"packagesToBeLoaded", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FileNameTake", "[", 
            RowBox[{"#", ",", 
             RowBox[{"-", "1"}]}], "]"}], "&"}], ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"FileNames", "[", 
             RowBox[{"\"\<*\>\"", ",", "$packagesPath"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"FileType", "[", "#", "]"}], "\[Equal]", "Directory"}], 
             "&"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Needs", "[", 
             RowBox[{"#", "<>", "\"\<`\>\""}], "]"}], ";"}], "&"}], ",", " ", 
          "packagesToBeLoaded"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"CellPrint", "[", 
        RowBox[{"Cell", "[", 
         RowBox[{
          RowBox[{"\"\<Packages loaded : \>\"", "<>", 
           RowBox[{"StringJoin", "@", 
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"Flatten", "@", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"#", ",", "\"\<, \>\""}], "}"}], "&"}], ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{"ToString", ",", "packagesToBeLoaded"}], "]"}]}], 
                "]"}]}], ",", 
              RowBox[{"-", "1"}]}], "]"}]}]}], ",", "\"\<Text\>\""}], "]"}], 
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "\n", 
  "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6143205652654667`*^9, 3.61432062964287*^9}, {
  3.614320855704103*^9, 3.614320869401732*^9}, {3.614320905984599*^9, 
  3.6143209248962*^9}, {3.614320956666768*^9, 3.614320970496788*^9}, {
  3.614321621287609*^9, 3.614321633483976*^9}, {3.6143218873069277`*^9, 
  3.6143218874661427`*^9}, {3.614322013712802*^9, 3.61432205867599*^9}}],

Cell["\<\
Packages loaded : MSM, NetCDFReader, PaperStyle, ProjectManagement\
\>", "Text",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.614404238688929*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["InitializeProject", "Subsection"],

Cell["\<\
[ Create a project and put everything in a folder. If already done, just get \
the appropriate path variables ]\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InitializeProject", "[", "]"}], ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Additional Packages", "Subsection"],

Cell["[ Here go all additional packages to be loaded on startup ]", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Path settings", "Subsection"],

Cell["[ System specific paths and files set ]", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Options", "Subsection"],

Cell["[ All additional options to be set ]", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions", "Subsection"],

Cell["[ All necessary function initializations ]", "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[
 CounterBox["Section"],
  FontSize->24],
 StyleBox[".",
  FontFamily->"Gill Sans",
  FontSize->24],
 "INITIALIZATION"
}], "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.437376038845188*^9, 3.437376040974264*^9}, {
   3.437376122506514*^9, 3.437376143930066*^9}, {3.437376195762557*^9, 
   3.437376225510989*^9}, {3.437376283474601*^9, 3.437376299278542*^9}, 
   3.4373770351310596`*^9, {3.5185209789743557`*^9, 3.518520981804433*^9}, {
   3.61440372941083*^9, 3.614403739074437*^9}}],

Cell["[ What's it about ]", "Text",
 InitializationGroup->True],

Cell[CellGroupData[{

Cell["Davids Test U-Shape Potential", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.614321014573859*^9, 3.614321027995777*^9}}],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gauss", ",", "outer"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gauss", "[", 
      RowBox[{
      "x_", ",", "y_", ",", "ax_", ",", "ay_", ",", "x0_", ",", "y0_"}], 
      "]"}], ":=", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "ax"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "-", 
       RowBox[{"ay", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"outer", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"x", "^", "6"}], "+", 
      RowBox[{"y", "^", "6"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"potential", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"outer", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "+", 
      RowBox[{"6", "*", 
       RowBox[{"gauss", "[", 
        RowBox[{
        "x", ",", "y", ",", "30.0", ",", "1.5", ",", "0.0", ",", "0.6"}], 
        "]"}]}], "+", 
      RowBox[{"1.25", "*", 
       RowBox[{"gauss", "[", 
        RowBox[{
        "x", ",", "y", ",", "0.5", ",", "20.0", ",", "0.5", ",", "0.0"}], 
        "]"}]}], "-", 
      RowBox[{"0.5", "*", "y"}], "+", 
      RowBox[{"0.75", "*", 
       RowBox[{"gauss", "[", 
        RowBox[{"x", ",", "y", ",", "1.0", ",", "5.0", ",", "0.5", ",", 
         RowBox[{"-", "0.4"}]}], "]"}]}]}]}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6139874172236557`*^9, 3.613987417231436*^9}, {
  3.614070014925487*^9, 3.614070093139853*^9}, {3.614070124379445*^9, 
  3.614070124602953*^9}, {3.614070167629099*^9, 3.614070190593437*^9}, {
  3.614321045149905*^9, 3.614321086029746*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"potentialContourPlot", "=", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1.25"}], ",", "1.25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "1.25"}], ",", "1.30"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "4.0"}], "}"}]}], ",", 
     RowBox[{"ContourShading", "\[Rule]", "None"}], ",", 
     RowBox[{"Contours", "\[Rule]", "20"}]}], "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.614070096781741*^9, 3.614070139049272*^9}, {
   3.614070210527627*^9, 3.614070214111869*^9}, {3.614075769304854*^9, 
   3.614075779318831*^9}, 3.614178823868222*^9, {3.614321213820112*^9, 
   3.614321216485763*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Graphics Function", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.614321224548749*^9, 3.614321227106135*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CutFunction", "::", "usage"}], "=", 
   "\"\<Function specifying the shape to be plotted\>\""}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.614354320154458*^9, 3.614354339939169*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"StripedShape", "[", "opts___", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cutfn", "=", 
      RowBox[{"CutFunction", "/.", 
       RowBox[{"{", "opts", "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mult", "=", 
      RowBox[{
       RowBox[{"Direction", "/.", 
        RowBox[{"{", "opts", "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"Direction", "\[Rule]", "1"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"mult", "*", "x"}], "+", "n"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{"-", "2.5"}], ",", "2.5", ",", "0.025"}], "}"}]}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
       RowBox[{"Evaluate", "@", 
        RowBox[{"KeepOptions", "[", 
         RowBox[{"Plot", ",", "opts"}], "]"}]}], ",", 
       RowBox[{"PlotPoints", "\[Rule]", "40"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Frame", "\[Rule]", "None"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "Thin"}], "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.25"}], ",", "1.25"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.25"}], ",", "1.25"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"RegionFunction", "\[Rule]", "cutfn"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.614354084475833*^9, 3.614354233746052*^9}, {
   3.6143543559206743`*^9, 3.614354357609269*^9}, {3.6143544040115967`*^9, 
   3.614354404732134*^9}, {3.6143550324823093`*^9, 3.614355054816987*^9}, {
   3.614355111575603*^9, 3.614355152302483*^9}, {3.6143552526165113`*^9, 
   3.6143552732476673`*^9}, 3.6143557170966253`*^9, {3.614355798422744*^9, 
   3.614355884334263*^9}, {3.6143559899723673`*^9, 3.614355997579718*^9}, {
   3.6143990408809137`*^9, 3.614399062536532*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PositionContourPlot", "[", 
   RowBox[{"p_", ",", "v_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ValueRange", "=", 
      RowBox[{
       RowBox[{"ValueRange", "/.", 
        RowBox[{"{", "opts", "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"ValueRange", "\[Rule]", "Automatic"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{
      "ValueRange", ",", "\[IndentingNewLine]", "Automatic", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"min", "=", 
         RowBox[{"Min", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"max", "=", 
         RowBox[{"Max", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"scale", "=", "0.5"}], ";", "\[IndentingNewLine]", 
        RowBox[{"shift", "=", "0.5"}], ";"}], ",", "\[IndentingNewLine]", 
       "Center", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"min", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"max", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"scale", "=", "0.5"}], ";", "\[IndentingNewLine]", 
        RowBox[{"shift", "=", "0.5"}], ";"}], ",", "\[IndentingNewLine]", "_",
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"min", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"max", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"scale", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"shift", "=", "0"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"val", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"shift", "+", 
           RowBox[{"scale", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"v", "-", "min"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"max", "-", "min"}], ")"}]}]}]}], "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"ListContourPlot", "[", 
      RowBox[{"val", ",", 
       RowBox[{"KeepOptions", "[", 
        RowBox[{"ListContourPlot", ",", "opts"}], "]"}], ",", 
       RowBox[{"MaxPlotPoints", "\[Rule]", "1000"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6140723462857943`*^9, 3.614072401949174*^9}, 
   3.6140751895665913`*^9, {3.614228228035699*^9, 3.614228229603243*^9}, {
   3.6143223497051573`*^9, 3.614322351446999*^9}, {3.614322427003666*^9, 
   3.614322667151276*^9}, {3.614323076203874*^9, 3.614323103851849*^9}, {
   3.614401280873787*^9, 3.6144012866484632`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Interface Functions", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.614322691889678*^9, 3.6143226965276413`*^9}}],

Cell["Define an Interface \
\[OpenCurlyDoubleQuote]Class\[CloseCurlyDoubleQuote]", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.614323333689342*^9, 3.6143233399767227`*^9}}],

Cell[BoxData[{
 RowBox[{"Interface", "/:", 
  RowBox[{"MakeBoxes", "[", 
   RowBox[{
    RowBox[{"Interface", "[", 
     RowBox[{
      RowBox[{"l_", "?", "ListQ"}], ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], ",", 
    "StandardForm"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"InterpretationBox", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Interface", "[", 
       RowBox[{"l", ",", "opts"}], "]"}]}], "]"}], "&"}], "[", 
   RowBox[{"RowBox", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"SubscriptBox", "[", 
       RowBox[{"\"\<\[DoubleStruckCapitalI]\>\"", ",", 
        RowBox[{
         RowBox[{"Dimensions", "[", 
          RowBox[{"Centers", "[", 
           RowBox[{"Interface", "[", 
            RowBox[{"l", ",", "opts"}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "\"\<[\>\"", ",", 
      RowBox[{
       RowBox[{"Dimensions", "[", 
        RowBox[{"Centers", "[", 
         RowBox[{"Interface", "[", 
          RowBox[{"l", ",", "opts"}], "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "\"\</\>\"", ",", 
      RowBox[{"Length", "@", 
       RowBox[{"Inner", "[", 
        RowBox[{"Interface", "[", 
         RowBox[{"l", ",", "opts"}], "]"}], "]"}]}], ",", "\"\<]\>\""}], 
     "}"}], "]"}], "]"}]}], "\n", 
 RowBox[{"Interface", "/:", 
  RowBox[{"Interface", "[", 
   RowBox[{
    RowBox[{"Interface", "[", 
     RowBox[{
      RowBox[{"m_", "?", "ListQ"}], ",", 
      RowBox[{"opts1", ":", 
       RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], ",", 
    RowBox[{"opts2", ":", 
     RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Interface", "[", 
   RowBox[{"m", ",", 
    RowBox[{"UnionRules", "[", 
     RowBox[{"opts1", ",", "opts2"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{"Interface", "/:", 
  RowBox[{"NormalForm", "[", 
   RowBox[{"Interface", "[", 
    RowBox[{
     RowBox[{"m_", "?", "ListQ"}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"m", ",", "opts"}], "}"}]}], "\n", 
 RowBox[{"Interface", "/:", 
  RowBox[{"Normal", "[", 
   RowBox[{"Interface", "[", 
    RowBox[{
     RowBox[{"l_", "?", "ListQ"}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], "]"}], ":=",
   "l"}], "\n", 
 RowBox[{"Interface", "/:", 
  RowBox[{"Centers", "[", 
   RowBox[{"Interface", "[", 
    RowBox[{
     RowBox[{"l_", "?", "ListQ"}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], "]"}], ":=", 
  RowBox[{"\"\<Centers\>\"", "/.", "l"}]}], "\[IndentingNewLine]", 
 RowBox[{"Interface", "/:", 
  RowBox[{"Inner", "[", 
   RowBox[{"Interface", "[", 
    RowBox[{
     RowBox[{"l_", "?", "ListQ"}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], "]"}], ":=", 
  RowBox[{"\"\<Inner\>\"", "/.", "l"}]}], "\n", 
 RowBox[{"Interface", "/:", 
  RowBox[{"NFn", "[", 
   RowBox[{"Interface", "[", 
    RowBox[{
     RowBox[{"l_", "?", "ListQ"}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], "]"}], ":=", 
  RowBox[{"\"\<NearFunction\>\"", "/.", "l"}]}], "\n", 
 RowBox[{"Interface", "/:", 
  RowBox[{"Cutoff", "[", 
   RowBox[{"Interface", "[", 
    RowBox[{
     RowBox[{"l_", "?", "ListQ"}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], "]"}], ":=", 
  RowBox[{"\"\<Cutoff\>\"", "/.", "l"}]}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.61432334133348*^9, 3.6143234028376217`*^9}, {
   3.614323479341248*^9, 3.6143235684699593`*^9}, {3.614323600141794*^9, 
   3.6143237913890333`*^9}, {3.614323896748335*^9, 3.614323908322364*^9}, {
   3.61432395644767*^9, 3.6143242336171618`*^9}, {3.614324285820553*^9, 
   3.6143244173714647`*^9}, {3.614324480500927*^9, 3.61432449914397*^9}, {
   3.6143310731854687`*^9, 3.614331108937357*^9}, {3.614331155071641*^9, 
   3.614331156712537*^9}, {3.614331201982525*^9, 3.614331218609949*^9}, 
   3.614333561150937*^9, {3.614397342027623*^9, 3.614397342536488*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Interface", "/:", 
   RowBox[{"Inside", "[", 
    RowBox[{
     RowBox[{"Interface", "[", 
      RowBox[{
       RowBox[{"l_", "?", "ListQ"}], ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], ",", 
     "p_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", "=", 
       RowBox[{"Closest", "[", 
        RowBox[{
         RowBox[{"Interface", "[", 
          RowBox[{"l", ",", "opts"}], "]"}], ",", "p"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"in", "=", 
       RowBox[{"\"\<Inner\>\"", "/.", "l"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cf", "=", 
       RowBox[{"Cutoff", "[", 
        RowBox[{"Interface", "[", 
         RowBox[{"l", ",", "opts"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", 
          RowBox[{"Dimensions", "[", "m", "]"}]}], "\[Equal]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "<", "cf"}], "&&", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"in", ",", 
           RowBox[{"m", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "<", "cf"}], "&&", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"in", ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "&"}], ",", "m"}], 
         "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.614397346461884*^9, 3.6143973467798557`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Interface", "/:", 
   RowBox[{"Closest", "[", 
    RowBox[{
     RowBox[{"Interface", "[", 
      RowBox[{
       RowBox[{"l_", "?", "ListQ"}], ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], ",", 
     "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nfc", ",", "centers"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nfc", "=", 
       RowBox[{"\"\<NearFunction\>\"", "/.", "l"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"centers", "=", 
       RowBox[{"\"\<Centers\>\"", "/.", "l"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", 
          RowBox[{"Dimensions", "[", "p", "]"}]}], "\[Equal]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"centers", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", 
            RowBox[{"Norm", "[", 
             RowBox[{"p", "-", 
              RowBox[{"centers", "[", 
               RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "[", 
         RowBox[{
          RowBox[{"nfc", "[", "p", "]"}], "//", "First"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", 
               RowBox[{"centers", "[", 
                RowBox[{"[", "#", "]"}], "]"}], ",", 
               RowBox[{"Norm", "[", 
                RowBox[{"p", "-", 
                 RowBox[{"centers", "[", 
                  RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], 
            "[", 
            RowBox[{
             RowBox[{"nfc", "[", "#", "]"}], "//", "First"}], "]"}], "&"}], 
          ",", "\[IndentingNewLine]", "p"}], "]"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationGroup->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"Interface", "/:", 
   RowBox[{"DrawIn", "[", 
    RowBox[{
     RowBox[{"Interface", "[", 
      RowBox[{
       RowBox[{"l_", "?", "ListQ"}], ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], ",", 
     "DIopts___"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nfc", ",", "centers"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nfc", "=", 
       RowBox[{"\"\<NearFunction\>\"", "/.", "l"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"centers", "=", 
       RowBox[{"\"\<Centers\>\"", "/.", "l"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fn", "=", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"NumberQ", "[", "x", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Inside", "[", 
              RowBox[{
               RowBox[{"Interface", "[", 
                RowBox[{"l", ",", "opts"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "False"}], "]"}]}], "\[IndentingNewLine]",
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"RegionPlot", "[", 
        RowBox[{
         RowBox[{"fn", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "1.55"}], ",", "1.55"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"-", "1.55"}], ",", "1.55"}], "}"}], ",", 
         RowBox[{"Evaluate", "@", 
          RowBox[{"KeepOptions", "[", 
           RowBox[{"RegionPlot", ",", "DIopts"}], "]"}]}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.614333596752314*^9, 3.6143335983113956`*^9}, {
   3.614333704990348*^9, 3.614333820933166*^9}, {3.614333885261722*^9, 
   3.614333895421072*^9}, {3.6143339285534477`*^9, 3.6143339536568613`*^9}, {
   3.614333993792148*^9, 3.614334059479371*^9}, 3.614334131847178*^9, {
   3.614334168427155*^9, 3.61433418905805*^9}, {3.614334220869916*^9, 
   3.614334266677492*^9}, {3.614334310072317*^9, 3.614334311070244*^9}, {
   3.6143346415067587`*^9, 3.614334647932029*^9}, {3.61434866687891*^9, 
   3.614348672194919*^9}, {3.614397305592649*^9, 3.614397311620592*^9}, {
   3.6143986819283533`*^9, 3.614398686447721*^9}, {3.6143989131817102`*^9, 
   3.614398913901568*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Interface", "/:", 
   RowBox[{"DrawOut", "[", 
    RowBox[{
     RowBox[{"Interface", "[", 
      RowBox[{
       RowBox[{"l_", "?", "ListQ"}], ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], ",", 
     "DIopts___"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nfc", ",", "centers"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nfc", "=", 
       RowBox[{"\"\<NearFunction\>\"", "/.", "l"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"centers", "=", 
       RowBox[{"\"\<Centers\>\"", "/.", "l"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fn", "=", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"NumberQ", "[", "x", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Inside", "[", 
              RowBox[{
               RowBox[{"Interface", "[", 
                RowBox[{"l", ",", "opts"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "False"}], "]"}]}], "\[IndentingNewLine]",
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"RegionPlot", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"fn", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "1.55"}], ",", "1.55"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"-", "1.55"}], ",", "1.55"}], "}"}], ",", 
         RowBox[{"Evaluate", "@", 
          RowBox[{"KeepOptions", "[", 
           RowBox[{"RegionPlot", ",", "DIopts"}], "]"}]}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.614334651943694*^9, 3.614334658130324*^9}, {
   3.61433474855816*^9, 3.614334776021859*^9}, {3.614334843024013*^9, 
   3.61433491948413*^9}, {3.6143349628269176`*^9, 3.614335030621202*^9}, {
   3.614348676429212*^9, 3.614348680787177*^9}, {3.6143971324544764`*^9, 
   3.614397147210753*^9}, {3.6143972046438293`*^9, 3.6143972053655777`*^9}, 
   3.614397257452681*^9, {3.614397332162138*^9, 3.6143973325683317`*^9}, {
   3.614398677112307*^9, 3.6143986787285748`*^9}, {3.614398915645883*^9, 
   3.614398916367526*^9}}],

Cell[BoxData[
 RowBox[{"Interface", "/:", 
  RowBox[{"SetInner", "[", 
   RowBox[{
    RowBox[{"Interface", "[", 
     RowBox[{
      RowBox[{"l_", "?", "ListQ"}], ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], ",", 
    "set_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newL", "=", "l"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ix", "=", 
      RowBox[{
       RowBox[{"Idx", "[", 
        RowBox[{
         RowBox[{"int", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}], ",", 
         "\"\<Inner\>\""}], "]"}], "//", "First"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newL", "[", 
       RowBox[{"[", 
        RowBox[{"ix", ",", "2"}], "]"}], "]"}], "=", "set"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Interface", "[", 
      RowBox[{"newL", ",", "opts"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationGroup->True],

Cell[BoxData[
 RowBox[{"Interface", "/:", 
  RowBox[{"InFunc2", "[", 
   RowBox[{"Interface", "[", 
    RowBox[{
     RowBox[{"l_", "?", "ListQ"}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", 
      RowBox[{"Inside", "[", 
       RowBox[{
        RowBox[{"Interface", "[", 
         RowBox[{"l", ",", "opts"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.614397577673868*^9, 3.6143976236255007`*^9}, {
  3.614397941963825*^9, 3.614397942155285*^9}}],

Cell[BoxData[
 RowBox[{"Interface", "/:", 
  RowBox[{"InFunc3", "[", 
   RowBox[{"Interface", "[", 
    RowBox[{
     RowBox[{"l_", "?", "ListQ"}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "f"}], "}"}], ",", 
      RowBox[{"Inside", "[", 
       RowBox[{
        RowBox[{"Interface", "[", 
         RowBox[{"l", ",", "opts"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.614397607928677*^9, 3.614397635691065*^9}, {
  3.614397946100944*^9, 3.614397946291341*^9}}],

Cell[BoxData[
 RowBox[{"Interface", "/:", 
  RowBox[{"OutFunc2", "[", 
   RowBox[{"Interface", "[", 
    RowBox[{
     RowBox[{"l_", "?", "ListQ"}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", 
      RowBox[{"!", 
       RowBox[{"Inside", "[", 
        RowBox[{
         RowBox[{"Interface", "[", 
          RowBox[{"l", ",", "opts"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.614397577673868*^9, 3.6143976236255007`*^9}, {
  3.614397941963825*^9, 3.614397942155285*^9}, {3.614400862130024*^9, 
  3.6144008693767633`*^9}}],

Cell[BoxData[
 RowBox[{"Interface", "/:", 
  RowBox[{"OutFunc3", "[", 
   RowBox[{"Interface", "[", 
    RowBox[{
     RowBox[{"l_", "?", "ListQ"}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "f"}], "}"}], ",", 
      RowBox[{"!", 
       RowBox[{"Inside", "[", 
        RowBox[{
         RowBox[{"Interface", "[", 
          RowBox[{"l", ",", "opts"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.614397607928677*^9, 3.614397635691065*^9}, {
  3.614397946100944*^9, 3.614397946291341*^9}, {3.614400864802249*^9, 
  3.614400867946047*^9}}],

Cell[BoxData[
 RowBox[{"Interface", "/:", 
  RowBox[{"SelectIn", "[", 
   RowBox[{
    RowBox[{"Interface", "[", 
     RowBox[{
      RowBox[{"l_", "?", "ListQ"}], ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], ",", 
    "p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Select", "[", 
     RowBox[{"p", ",", 
      RowBox[{
       RowBox[{"Inside", "[", 
        RowBox[{
         RowBox[{"Interface", "[", 
          RowBox[{"l", ",", "opts"}], "]"}], ",", "#"}], "]"}], "&"}]}], 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.61440028350813*^9, 3.614400322518671*^9}}],

Cell[BoxData[
 RowBox[{"Interface", "/:", 
  RowBox[{"SelectOut", "[", 
   RowBox[{
    RowBox[{"Interface", "[", 
     RowBox[{
      RowBox[{"l_", "?", "ListQ"}], ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "Interface", "]"}]}]}], "]"}], ",", 
    "p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Select", "[", 
     RowBox[{"p", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"!", 
         RowBox[{"Inside", "[", 
          RowBox[{
           RowBox[{"Interface", "[", 
            RowBox[{"l", ",", "opts"}], "]"}], ",", "#"}], "]"}]}], ")"}], 
       "&"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.61440028350813*^9, 3.614400337747107*^9}, {
  3.614400387230212*^9, 3.614400393252411*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["IO Functions", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.61440347578229*^9, 3.6144034800906763`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReadXYZ", "[", 
   RowBox[{"fn_", ",", 
    RowBox[{"rows_:", 
     RowBox[{"Span", "[", 
      RowBox[{"2", ",", "All"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"traj", ",", " ", "frames"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"traj", "=", 
      RowBox[{"ReadList", "[", 
       RowBox[{"fn", ",", "String"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"frames", "=", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"StringSplit", ",", 
         RowBox[{"traj", "[", 
          RowBox[{"[", 
           RowBox[{"3", ";;", "All", ";;", "3"}], "]"}], "]"}]}], "]"}], "[", 
       
       RowBox[{"[", 
        RowBox[{"All", ",", "rows"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{"ToExpression", ",", "frames"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6143227288526573`*^9, 3.614322773200406*^9}, {
  3.6143228086447573`*^9, 3.614322877906509*^9}, {3.614322915358807*^9, 
  3.614322956899722*^9}, {3.614323014285825*^9, 3.6143230149688873`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Transition Matrix Functions", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.614403576362112*^9, 3.614403580616446*^9}}],

Cell[BoxData[
 RowBox[{"TransitionMatrix", "/:", 
  RowBox[{"MeanFirstPassageTimeMatrix", "[", 
   RowBox[{
    RowBox[{"TransitionMatrix", "[", 
     RowBox[{
      RowBox[{"m_", "?", "MatrixQ"}], ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "TransitionMatrix", "]"}]}]}], "]"}], 
    ",", 
    RowBox[{"optsMFPT", ":", 
     RowBox[{"OptionsPattern", "[", "MeanFirstPassageTimeMatrix", "]"}]}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cM", ",", "nLagtime"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"MeanFirstPassageTime", "[", 
       RowBox[{"tm", ",", "i"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "tm", "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.614323187579089*^9, 3.61432322682156*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[
 CounterBox["Section"],
  FontSize->24],
 StyleBox[".",
  FontSize->24],
 "COMPUTATIONS"
}], "Section"],

Cell[CellGroupData[{

Cell["\<\
Read Sample Trajectory in XYZ Format\
\>", "Subsection",
 CellChangeTimes->{{3.614322700752112*^9, 3.6143227088201838`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"frames", "=", 
   RowBox[{"ReadXYZ", "[", 
    RowBox[{
     RowBox[{"ToResourceFile", "[", "\"\<Upot.xyz\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.614322829374858*^9, 3.614322833970306*^9}, {
  3.6143228813487997`*^9, 3.614322895420269*^9}, {3.6143229894999933`*^9, 
  3.614322990510455*^9}, {3.614323020843233*^9, 3.614323033298579*^9}, {
  3.6144041228373013`*^9, 3.614404130651991*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute KMeans Voronoi Centers", "Subsection",
 CellChangeTimes->{{3.61440351768609*^9, 3.614403554233281*^9}}],

Cell["\<\
KMeans is not very efficiently implemented. Takes a while, sorry!\
\>", "Text",
 CellChangeTimes->{{3.614404251070695*^9, 3.614404264030292*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"kmean", "=", 
   RowBox[{"KMeansClustering", "[", 
    RowBox[{"frames", ",", "25"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"centers", "=", "kmean"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nearfnc", "=", 
   RowBox[{"Nearest", "[", 
    RowBox[{"centers", "\[Rule]", "Automatic"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"discretized", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{"nearfnc", "[", "#", "]"}], "]"}], "&"}], ",", "frames"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cm", "=", 
   RowBox[{"ToCountMatrix", "[", 
    RowBox[{"TimeSeries", "[", "discretized", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tm", "=", 
   RowBox[{"MaximumLikelihoodMatrix", "[", "cm", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq", "=", 
   RowBox[{"Equilibrium", "@", "tm"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6140734549319468`*^9, 3.614073455372426*^9}, {
  3.614073520187738*^9, 3.6140735257887573`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Compute Random n-th Voronoi Centers\
\>", "Subsection",
 CellChangeTimes->{{3.614403528282943*^9, 3.614403551945327*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"centers", "=", 
   RowBox[{"frames", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "100000", ";;", "5000"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nearfnc", "=", 
   RowBox[{"Nearest", "[", 
    RowBox[{"centers", "\[Rule]", "Automatic"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"discretized", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{"nearfnc", "[", "#", "]"}], "]"}], "&"}], ",", "frames"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cm", "=", 
   RowBox[{"ToCountMatrix", "[", 
    RowBox[{"TimeSeries", "[", "discretized", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tm", "=", 
   RowBox[{"MaximumLikelihoodMatrix", "[", "cm", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq", "=", 
   RowBox[{"Equilibrium", "@", "tm"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.614071925311282*^9, 3.614071930054867*^9}, {
  3.6140720435566*^9, 3.614072072232999*^9}, {3.6140724550594177`*^9, 
  3.614072494015102*^9}, {3.614073327929555*^9, 3.614073328001417*^9}, {
  3.614073443005842*^9, 3.6140734497960787`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Test Interface Class and Examples\
\>", "Subsection",
 CellChangeTimes->{{3.614404012234358*^9, 3.6144040189961967`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"int", "=", 
  RowBox[{"Interface", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Centers\>\"", "\[Rule]", "centers"}], ",", 
     RowBox[{"\"\<Inner\>\"", "\[Rule]", 
      RowBox[{"Range", "[", "20", "]"}]}], ",", 
     RowBox[{"\"\<NearFunction\>\"", "\[Rule]", 
      RowBox[{"Nearest", "[", 
       RowBox[{"centers", "\[Rule]", "Automatic"}], "]"}]}], ",", 
     RowBox[{"\"\<Cutoff\>\"", "\[Rule]", "0.1"}]}], "}"}], "]"}]}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalI]", "2"], "[", "20", "/", "20", "]"}],
  $CellContext`Interface[{"Centers" -> CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAAAAAAAAA4L8AAAAAAADgP8I1d/S/
3OS/z57L1CR46j9dNjrnpzjgv+ChKNAncuI/OUVHcvmP5L82scBXdOviP47M
I38wcOG/tyqJ7IMs3z+fd2NBYVDiv9m1vd2SnOE/X5uNlZhn57+T407pYH3l
P103pbxWQuK/QWZn0TuV5z+vl6YIcHrcv3xkc9U8x+Y/A5mdRe9U2r/uJCL8
iyDkP3pRu18F+N+/i8HDtG/u6T9Y42w6Ajjovzs5Q3HHm9s/AVEwYwrW5b/o
3O16aYraP/S/XIsWoOC/HOviNhrA5T+62/XSFIHjv7XiGwqfLeE/0SSxpNx9
4b8XRQ98DFbfP5Ma2gBswOK/RZ+PMuKC4j9oyk4/qAvhv6yPh767ldE/VU0Q
dR8A47988rBQaxriPx1YjpCBvOO/hEvHnGfs3z/77anq
     "], 
    "Inner" -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
      19, 20}, "NearFunction" -> 
    NearestFunction[1, {20, 2}, 3, CompressedData["
1:eJwBUQGu/iFib1JlAgAAAAIAAAAUAAAAAAAAAAAA4L/CNXf0v9zkv102Ouen
OOC/OUVHcvmP5L+OzCN/MHDhv593Y0FhUOK/X5uNlZhn579dN6W8VkLiv6+X
pghwety/A5mdRe9U2r96UbtfBfjfv1jjbDoCOOi/AVEwYwrW5b/0v1yLFqDg
v7rb9dIUgeO/0SSxpNx94b+TGtoAbMDiv2jKTj+oC+G/VU0QdR8A478dWI6Q
gbzjvwAAAAAAAOA/z57L1CR46j/goSjQJ3LiPzaxwFd06+I/tyqJ7IMs3z/Z
tb3dkpzhP5PjTulgfeU/QWZn0TuV5z98ZHPVPMfmP+4kIvyLIOQ/i8HDtG/u
6T87OUNxx5vbP+jc7Xppito/HOviNhrA5T+14hsKny3hPxdFD3wMVt8/RZ+P
MuKC4j+sj4e+u5XRP3zysFBrGuI/hEvHnGfs3z9g86nq
      "], CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAAAAAAAAA4L8AAAAAAADgP8I1d/S/
3OS/z57L1CR46j9dNjrnpzjgv+ChKNAncuI/OUVHcvmP5L82scBXdOviP47M
I38wcOG/tyqJ7IMs3z+fd2NBYVDiv9m1vd2SnOE/X5uNlZhn57+T407pYH3l
P103pbxWQuK/QWZn0TuV5z+vl6YIcHrcv3xkc9U8x+Y/A5mdRe9U2r/uJCL8
iyDkP3pRu18F+N+/i8HDtG/u6T9Y42w6Ajjovzs5Q3HHm9s/AVEwYwrW5b/o
3O16aYraP/S/XIsWoOC/HOviNhrA5T+62/XSFIHjv7XiGwqfLeE/0SSxpNx9
4b8XRQ98DFbfP5Ma2gBswOK/RZ+PMuKC4j9oyk4/qAvhv6yPh767ldE/VU0Q
dR8A47988rBQaxriPx1YjpCBvOO/hEvHnGfs3z/77anq
      "], Automatic, Automatic, 
      Hold[
       Nearest[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAAAAAAAAA4L8AAAAAAADgP8I1d/S/
3OS/z57L1CR46j9dNjrnpzjgv+ChKNAncuI/OUVHcvmP5L82scBXdOviP47M
I38wcOG/tyqJ7IMs3z+fd2NBYVDiv9m1vd2SnOE/X5uNlZhn57+T407pYH3l
P103pbxWQuK/QWZn0TuV5z+vl6YIcHrcv3xkc9U8x+Y/A5mdRe9U2r/uJCL8
iyDkP3pRu18F+N+/i8HDtG/u6T9Y42w6Ajjovzs5Q3HHm9s/AVEwYwrW5b/o
3O16aYraP/S/XIsWoOC/HOviNhrA5T+62/XSFIHjv7XiGwqfLeE/0SSxpNx9
4b8XRQ98DFbfP5Ma2gBswOK/RZ+PMuKC4j9oyk4/qAvhv6yPh767ldE/VU0Q
dR8A47988rBQaxriPx1YjpCBvOO/hEvHnGfs3z/77anq
         "] -> Automatic]]], 
    "Cutoff" -> 0.1}]]], "Output",
 CellChangeTimes->{{3.6143554214751377`*^9, 3.6143554382259293`*^9}, 
   3.614355507682568*^9, 3.614397960244027*^9, 3.614403952601151*^9, 
   3.614404152955159*^9, 3.614404268842383*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetInner", "[", 
  RowBox[{"int", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.614334921227087*^9, 3.614334947681979*^9}, {
  3.614335025566937*^9, 3.6143350261747932`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalI]", "2"], "[", "20", "/", "3", "]"}],
  $CellContext`Interface[{"Centers" -> CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAAAAAAAAA4L8AAAAAAADgP8I1d/S/
3OS/z57L1CR46j9dNjrnpzjgv+ChKNAncuI/OUVHcvmP5L82scBXdOviP47M
I38wcOG/tyqJ7IMs3z+fd2NBYVDiv9m1vd2SnOE/X5uNlZhn57+T407pYH3l
P103pbxWQuK/QWZn0TuV5z+vl6YIcHrcv3xkc9U8x+Y/A5mdRe9U2r/uJCL8
iyDkP3pRu18F+N+/i8HDtG/u6T9Y42w6Ajjovzs5Q3HHm9s/AVEwYwrW5b/o
3O16aYraP/S/XIsWoOC/HOviNhrA5T+62/XSFIHjv7XiGwqfLeE/0SSxpNx9
4b8XRQ98DFbfP5Ma2gBswOK/RZ+PMuKC4j9oyk4/qAvhv6yPh767ldE/VU0Q
dR8A47988rBQaxriPx1YjpCBvOO/hEvHnGfs3z/77anq
     "], "Inner" -> {1, 2, 3}, 
    "NearFunction" -> NearestFunction[1, {20, 2}, 3, CompressedData["
1:eJwBUQGu/iFib1JlAgAAAAIAAAAUAAAAAAAAAAAA4L/CNXf0v9zkv102Ouen
OOC/OUVHcvmP5L+OzCN/MHDhv593Y0FhUOK/X5uNlZhn579dN6W8VkLiv6+X
pghwety/A5mdRe9U2r96UbtfBfjfv1jjbDoCOOi/AVEwYwrW5b/0v1yLFqDg
v7rb9dIUgeO/0SSxpNx94b+TGtoAbMDiv2jKTj+oC+G/VU0QdR8A478dWI6Q
gbzjvwAAAAAAAOA/z57L1CR46j/goSjQJ3LiPzaxwFd06+I/tyqJ7IMs3z/Z
tb3dkpzhP5PjTulgfeU/QWZn0TuV5z98ZHPVPMfmP+4kIvyLIOQ/i8HDtG/u
6T87OUNxx5vbP+jc7Xppito/HOviNhrA5T+14hsKny3hPxdFD3wMVt8/RZ+P
MuKC4j+sj4e+u5XRP3zysFBrGuI/hEvHnGfs3z9g86nq
      "], CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAAAAAAAAA4L8AAAAAAADgP8I1d/S/
3OS/z57L1CR46j9dNjrnpzjgv+ChKNAncuI/OUVHcvmP5L82scBXdOviP47M
I38wcOG/tyqJ7IMs3z+fd2NBYVDiv9m1vd2SnOE/X5uNlZhn57+T407pYH3l
P103pbxWQuK/QWZn0TuV5z+vl6YIcHrcv3xkc9U8x+Y/A5mdRe9U2r/uJCL8
iyDkP3pRu18F+N+/i8HDtG/u6T9Y42w6Ajjovzs5Q3HHm9s/AVEwYwrW5b/o
3O16aYraP/S/XIsWoOC/HOviNhrA5T+62/XSFIHjv7XiGwqfLeE/0SSxpNx9
4b8XRQ98DFbfP5Ma2gBswOK/RZ+PMuKC4j9oyk4/qAvhv6yPh767ldE/VU0Q
dR8A47988rBQaxriPx1YjpCBvOO/hEvHnGfs3z/77anq
      "], Automatic, Automatic, 
      Hold[
       Nearest[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAAAAAAAAA4L8AAAAAAADgP8I1d/S/
3OS/z57L1CR46j9dNjrnpzjgv+ChKNAncuI/OUVHcvmP5L82scBXdOviP47M
I38wcOG/tyqJ7IMs3z+fd2NBYVDiv9m1vd2SnOE/X5uNlZhn57+T407pYH3l
P103pbxWQuK/QWZn0TuV5z+vl6YIcHrcv3xkc9U8x+Y/A5mdRe9U2r/uJCL8
iyDkP3pRu18F+N+/i8HDtG/u6T9Y42w6Ajjovzs5Q3HHm9s/AVEwYwrW5b/o
3O16aYraP/S/XIsWoOC/HOviNhrA5T+62/XSFIHjv7XiGwqfLeE/0SSxpNx9
4b8XRQ98DFbfP5Ma2gBswOK/RZ+PMuKC4j9oyk4/qAvhv6yPh767ldE/VU0Q
dR8A47988rBQaxriPx1YjpCBvOO/hEvHnGfs3z/77anq
         "] -> Automatic]]], 
    "Cutoff" -> 0.1}]]], "Output",
 CellChangeTimes->{{3.614335026455317*^9, 3.614335031903183*^9}, 
   3.614355439440138*^9, 3.614355508749618*^9, 3.6144039533839293`*^9, 
   3.614404153991164*^9, 3.614404269580134*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Closest", "[", 
  RowBox[{"int", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6143244407073402`*^9, 3.6143244416752157`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.444973`"}], ",", "0.711821`"}], "}"}], ",", 
   "2.7635661936653513`"}], "}"}]], "Output",
 CellChangeTimes->{{3.614324442387164*^9, 3.614324471928041*^9}, 
   3.614331096920423*^9, 3.614355509416675*^9, 3.614403953899581*^9, 
   3.614404154849949*^9, 3.614404271540287*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inside", "[", 
  RowBox[{"int", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.614323832584564*^9, 3.6143238382737093`*^9}, {
  3.614323887239107*^9, 3.614323891006328*^9}, {3.614324428843581*^9, 
  3.6143244308589687`*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.6143238915430813`*^9, {3.6143244208775673`*^9, 3.61432450237331*^9}, {
   3.614331092592494*^9, 3.6143311122226753`*^9}, 3.614331221881233*^9, 
   3.614355510067326*^9, 3.614403954750194*^9, 3.6144041557401*^9, 
   3.614404272321664*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finc central cluster", "Subsection",
 CellChangeTimes->{{3.614403618795867*^9, 3.614403622626495*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mfptMatrix", "=", 
   RowBox[{"MeanFirstPassageTimeMatrix", "[", "tm", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mfptAll", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Total", ",", "mfptMatrix"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.61407454680954*^9, 3.614074590273752*^9}, {
   3.614074632290121*^9, 3.614074632448805*^9}, {3.614075288673469*^9, 
   3.6140752892142553`*^9}, 3.614323248835021*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"centerID", " ", "=", " ", 
   RowBox[{
    RowBox[{"Idx", "[", 
     RowBox[{"eq", ",", 
      RowBox[{
       RowBox[{"#", "==", 
        RowBox[{"Max", "[", "eq", "]"}]}], "&"}]}], "]"}], "//", "First"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mfpt", "=", 
   RowBox[{"MeanFirstPassageTime", "[", 
    RowBox[{"tm", ",", "centerID"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.61407361217911*^9, 3.614073647951524*^9}, {
   3.614073781420815*^9, 3.614073792389613*^9}, {3.614073833899639*^9, 
   3.614073834047682*^9}, 3.6140743687113237`*^9}],

Cell["\<\
Use average time reach a state when started from equilibrium (see script)\
\>", "Text",
 CellChangeTimes->{{3.614075945113052*^9, 3.614075952118937*^9}, {
  3.6140760202920523`*^9, 3.614076054763373*^9}, {3.614319461186822*^9, 
  3.614319472074336*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mfptMatrix", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"MeanFirstPassageTime", "[", 
      RowBox[{"tm", ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "tm", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"commuteAll", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Total", ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", "mfptMatrix", ")"}], ".", 
       RowBox[{"DiagonalMatrix", "[", "eq", "]"}]}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"centerID", " ", "=", " ", 
   RowBox[{
    RowBox[{"Idx", "[", 
     RowBox[{"commuteAll", ",", 
      RowBox[{
       RowBox[{"#", "\[Equal]", 
        RowBox[{"Min", "[", "commuteAll", "]"}]}], "&"}]}], "]"}], "//", 
    "First"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mfpt", "=", 
   RowBox[{"MeanFirstPassageTime", "[", 
    RowBox[{"tm", ",", "centerID"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"levelFunc", "[", "lev_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Idx", "[", 
     RowBox[{"mfpt", ",", 
      RowBox[{
       RowBox[{"#", "<", "lev"}], "&"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6140750845333652`*^9, 3.614075092935788*^9}, {
  3.6140751321014214`*^9, 3.614075179572247*^9}, {3.6140752766833963`*^9, 
  3.614075314850979*^9}, {3.614075510869851*^9, 3.6140755413173323`*^9}, {
  3.614075589118329*^9, 3.614075589564331*^9}, {3.6140756562319613`*^9, 
  3.614075735089237*^9}, {3.614076071548204*^9, 3.614076117400017*^9}, {
  3.614076157395*^9, 3.614076165803302*^9}, {3.614333483693417*^9, 
  3.6143334857812843`*^9}, {3.614403434430779*^9, 3.614403442799263*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting", "Subsection",
 CellChangeTimes->{{3.6144037126041403`*^9, 3.614403713360517*^9}}],

Cell[CellGroupData[{

Cell["Plot Equilibrium", "Subsubsection",
 CellChangeTimes->{{3.6144035617465773`*^9, 3.6144035656090927`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PositionContourPlot", "[", 
  RowBox[{"centers", ",", "eq", ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
   RowBox[{"BoundaryStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"ContourStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.25"}], ",", "1.25"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.25"}], ",", "1.30"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"InFunc3", "[", "int", "]"}]}], ",", 
   RowBox[{"MaxPlotPoints", "\[Rule]", "100"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.614072429685807*^9, 3.6140724320136623`*^9}, {
   3.614072714414069*^9, 3.6140727223432302`*^9}, {3.614072972601843*^9, 
   3.614072983346013*^9}, {3.6140731135424643`*^9, 3.6140732565405083`*^9}, {
   3.614075413055975*^9, 3.614075426110835*^9}, {3.6143230609387093`*^9, 
   3.614323067665667*^9}, {3.61432311395326*^9, 3.6143231243036623`*^9}, {
   3.6143310270174294`*^9, 3.614331027174014*^9}, {3.6143557377190733`*^9, 
   3.6143557431185913`*^9}, {3.614397659818215*^9, 3.614397664921701*^9}, 
   3.614398015593639*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
   "], {{{}, {}, {}, {}, {}, 
     {RGBColor[0.9908459999999999, 0.9904826, 0.8013689999999999], EdgeForm[
      None], GraphicsGroupBox[{
        PolygonBox[{{119, 136, 6}, {25, 22, 24}, {59, 62, 63}, {71, 69, 70}, {
         61, 59, 60}, {56, 54, 55}, {26, 22, 25}, {100, 120, 5}, {69, 71, 
         72}, {24, 22, 23}, {162, 122, 95}, {22, 26, 27}, {54, 57, 58}, {57, 
         54, 56}, {62, 59, 61}, {107, 118, 43}}], 
        PolygonBox[{{120, 119, 6, 5}, {118, 117, 44, 43}, {117, 162, 95, 
         44}}]}]}, 
     {RGBColor[0.9930588, 0.9875618, 0.4858714000000003], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{161, 137, 42}, {142, 155, 98}, {147, 148, 99}, {148, 144,
          99}, {81, 91, 19}, {73, 77, 78}, {75, 73, 74}, {76, 73, 75}, {77, 
         73, 76}, {19, 82, 21}, {99, 42, 40}, {106, 116, 41}, {92, 85, 19}, {
         87, 98, 46}, {19, 85, 82}, {66, 64, 65}, {81, 19, 20}, {154, 108, 
         91}, {67, 64, 66}, {64, 67, 68}, {46, 98, 45}, {141, 127, 84}, {151, 
         141, 84}}], 
        PolygonBox[{{121, 154, 91, 81}, {126, 142, 98, 87}, {144, 161, 42, 
         99}, {116, 115, 40, 41}, {131, 151, 84, 45}, {115, 147, 99, 40}, {
         109, 101, 85, 92}, {155, 131, 45, 98}}], 
        PolygonBox[{{108, 109, 92, 19, 91}}]}]}, 
     {RGBColor[0.955963, 0.863115, 0.283425], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{149, 140, 97}, {17, 12, 16}, {7, 10, 11}, {33, 30, 32}, {
         18, 12, 17}, {15, 12, 14}, {96, 12, 18}, {16, 12, 15}, {49, 47, 
         48}, {30, 33, 34}, {32, 30, 31}, {94, 97, 80}, {14, 12, 13}, {97, 18,
          80}, {10, 7, 9}, {52, 47, 51}, {47, 52, 53}, {156, 143, 83}, {146, 
         102, 86}, {103, 111, 29}, {123, 145, 96}, {51, 47, 50}, {9, 7, 8}, {
         50, 47, 49}}], 
        PolygonBox[{{145, 135, 12, 96}, {111, 110, 28, 29}, {150, 123, 96, 
         18}, {110, 156, 83, 28}, {134, 149, 97, 94}, {143, 146, 86, 83}, {
         140, 150, 18, 97}}]}]}, 
     {RGBColor[0.8950625999999999, 0.6163855999999998, 0.23414999999999997`], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{104, 112, 36}, {112, 124, 36}, {158, 138, 35}, {157, 158,
          35}}], PolygonBox[{{124, 157, 35, 36}}]}]}, 
     {RGBColor[0.8419706, 0.32361000000000045`, 0.18782440000000006`], 
      EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{159, 160, 37}, {160, 139, 37}, {113, 125, 38}, {105, 114,
          39}}], PolygonBox[{{114, 113, 38, 39}, {125, 159, 37, 38}}]}]}, 
     {RGBColor[0.817319, 0.134127, 0.164218], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{128, 152, 88}, {152, 153, 88}, {93, 90, 79}, {79, 3, 
         4}, {79, 90, 3}}], 
        PolygonBox[{{153, 132, 1, 88}, {133, 130, 90, 93}}], 
        PolygonBox[{{130, 129, 89, 2, 3, 90}, {129, 128, 88, 1, 2, 
         89}}]}]}}, 
    {GrayLevel[0], 
     LineBox[{2, 1, 132, 153, 152, 128, 129, 130, 133, 93, 79, 4, 3, 2}], 
     LineBox[{100, 5, 6, 136, 119, 120, 100}], LineBox[{8, 7, 11, 10, 9, 8}], 
     LineBox[{13, 12, 135, 145, 123, 150, 140, 149, 134, 94, 80, 18, 17, 16, 
      15, 14, 13}], 
     LineBox[{20, 19, 21, 82, 85, 101, 109, 108, 154, 121, 81, 20}], 
     LineBox[{23, 22, 27, 26, 25, 24, 23}], 
     LineBox[{29, 28, 83, 86, 102, 146, 143, 156, 110, 111, 103, 29}], 
     LineBox[{31, 30, 34, 33, 32, 31}], 
     LineBox[{36, 35, 138, 158, 157, 124, 112, 104, 36}], 
     LineBox[{38, 37, 139, 160, 159, 125, 113, 114, 105, 39, 38}], 
     LineBox[{41, 40, 42, 137, 161, 144, 148, 147, 115, 116, 106, 41}], 
     LineBox[{107, 43, 44, 95, 122, 162, 117, 118, 107}], 
     LineBox[{46, 45, 84, 127, 141, 151, 131, 155, 142, 126, 87, 46}], 
     LineBox[{48, 47, 53, 52, 51, 50, 49, 48}], 
     LineBox[{55, 54, 58, 57, 56, 55}], LineBox[{60, 59, 63, 62, 61, 60}], 
     LineBox[{65, 64, 68, 67, 66, 65}], LineBox[{70, 69, 72, 71, 70}], 
     LineBox[{74, 73, 78, 77, 76, 75, 74}]}}],
  AspectRatio->1,
  BaseStyle->{},
  Frame->True,
  FrameLabel->{None, None},
  FrameStyle->{},
  FrameTicksStyle->{},
  Method->{},
  PlotRange->{{-1.25, 1.25}, {-1.25, 1.3}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6140731195360603`*^9, 3.6140732572812977`*^9}, 
   3.614073333058858*^9, {3.61407354088881*^9, 3.614073549192788*^9}, 
   3.6140744420304728`*^9, 3.6140754268311033`*^9, {3.6140768512159557`*^9, 
   3.6140768557983217`*^9}, 3.614078558120401*^9, 3.614178890290663*^9, 
   3.6142282994923067`*^9, 3.614319245418158*^9, {3.6143230848442907`*^9, 
   3.614323124644754*^9}, {3.6143310084961557`*^9, 3.6143310532477303`*^9}, 
   3.614331237883891*^9, 3.614355561578834*^9, {3.6143557398295317`*^9, 
   3.614355743682406*^9}, 3.614398022265689*^9, 3.614404164311138*^9, 
   3.614404280233666*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot Centrality", "Subsubsection",
 CellChangeTimes->{{3.614403635365726*^9, 3.6144036413009*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PositionContourPlot", "[", 
  RowBox[{"centers", ",", "commuteAll", ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
   RowBox[{"BoundaryStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"ContourStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.25"}], ",", "1.25"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.25"}], ",", "1.30"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"InFunc3", "[", "int", "]"}]}], ",", 
   RowBox[{"MaxPlotPoints", "\[Rule]", "20"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.614074605659894*^9, 3.614074617311582*^9}, {
   3.614075216294034*^9, 3.614075235868185*^9}, {3.614076814766089*^9, 
   3.614076822941497*^9}, 3.614323272154565*^9, {3.614333449914116*^9, 
   3.6143334501644917`*^9}, {3.614397669089035*^9, 3.6143976712927303`*^9}, 
   3.614398015595355*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
   "], {{{}, {}, {}, {}, {}, 
     {RGBColor[0.9908459999999999, 0.9904826, 0.8013689999999999], EdgeForm[
      None], GraphicsGroupBox[{
        PolygonBox[{{9, 7, 8}, {50, 47, 49}, {51, 47, 50}, {52, 47, 51}, {10, 
         7, 9}, {67, 64, 66}, {18, 12, 17}, {105, 114, 39}, {149, 140, 97}, {
         7, 10, 11}, {49, 47, 48}, {33, 30, 32}, {14, 12, 13}, {47, 52, 53}, {
         66, 64, 65}, {16, 12, 15}, {32, 30, 31}, {93, 90, 79}, {30, 33, 
         34}, {17, 12, 16}, {64, 67, 68}, {15, 12, 14}, {79, 90, 3}, {123, 
         145, 96}, {104, 112, 36}, {97, 18, 80}, {94, 97, 80}, {160, 139, 
         37}, {112, 124, 36}, {158, 138, 35}, {152, 153, 88}, {159, 160, 
         37}, {157, 158, 35}, {113, 125, 38}, {128, 152, 88}, {79, 3, 4}, {96,
          12, 18}}], 
        PolygonBox[{{114, 113, 38, 39}, {153, 132, 1, 88}, {125, 159, 37, 
         38}, {140, 150, 18, 97}, {133, 130, 90, 93}, {124, 157, 35, 36}, {
         134, 149, 97, 94}, {145, 135, 12, 96}, {150, 123, 96, 18}}], 
        PolygonBox[{{129, 128, 88, 1, 2, 89}, {130, 129, 89, 2, 3, 90}}]}]}, 
     {RGBColor[0.9930588, 0.9875618, 0.4858714000000003], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{154, 108, 91}, {73, 77, 78}, {77, 73, 76}, {76, 73, 
         75}, {25, 22, 24}, {24, 22, 23}, {81, 91, 19}, {156, 143, 83}, {19, 
         85, 82}, {81, 19, 20}, {92, 85, 19}, {22, 26, 27}, {26, 22, 25}, {19,
          82, 21}, {146, 102, 86}, {75, 73, 74}, {103, 111, 29}}], 
        PolygonBox[{{143, 146, 86, 83}, {121, 154, 91, 81}, {111, 110, 28, 
         29}, {110, 156, 83, 28}, {109, 101, 85, 92}}], 
        PolygonBox[{{108, 109, 92, 19, 91}}]}]}, 
     {RGBColor[0.955963, 0.863115, 0.283425], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{46, 98, 45}, {87, 98, 46}, {57, 54, 56}, {54, 57, 58}, {
         141, 127, 84}, {106, 116, 41}, {148, 144, 99}, {99, 42, 40}, {59, 62,
          63}, {62, 59, 61}, {61, 59, 60}, {161, 137, 42}, {56, 54, 55}, {142,
          155, 98}, {151, 141, 84}, {147, 148, 99}}], 
        PolygonBox[{{126, 142, 98, 87}, {155, 131, 45, 98}, {115, 147, 99, 
         40}, {131, 151, 84, 45}, {116, 115, 40, 41}, {144, 161, 42, 99}}]}]}, 
     {RGBColor[0.8950625999999999, 0.6163855999999998, 0.23414999999999997`], 
      EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[{{100, 120, 5}, {119, 136, 6}}], 
        PolygonBox[{{120, 119, 6, 5}}]}]}, 
     {RGBColor[0.8419706, 0.32361000000000045`, 0.18782440000000006`], 
      EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[{{162, 122, 95}, {107, 118, 43}}], 
        PolygonBox[{{118, 117, 44, 43}, {117, 162, 95, 44}}]}]}, 
     {RGBColor[0.817319, 0.134127, 0.164218], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[{{69, 71, 72}, {71, 69, 70}}]]}}, 
    {GrayLevel[0], 
     LineBox[{2, 1, 132, 153, 152, 128, 129, 130, 133, 93, 79, 4, 3, 2}], 
     LineBox[{100, 5, 6, 136, 119, 120, 100}], LineBox[{8, 7, 11, 10, 9, 8}], 
     LineBox[{13, 12, 135, 145, 123, 150, 140, 149, 134, 94, 80, 18, 17, 16, 
      15, 14, 13}], 
     LineBox[{20, 19, 21, 82, 85, 101, 109, 108, 154, 121, 81, 20}], 
     LineBox[{23, 22, 27, 26, 25, 24, 23}], 
     LineBox[{29, 28, 83, 86, 102, 146, 143, 156, 110, 111, 103, 29}], 
     LineBox[{31, 30, 34, 33, 32, 31}], 
     LineBox[{36, 35, 138, 158, 157, 124, 112, 104, 36}], 
     LineBox[{38, 37, 139, 160, 159, 125, 113, 114, 105, 39, 38}], 
     LineBox[{41, 40, 42, 137, 161, 144, 148, 147, 115, 116, 106, 41}], 
     LineBox[{107, 43, 44, 95, 122, 162, 117, 118, 107}], 
     LineBox[{46, 45, 84, 127, 141, 151, 131, 155, 142, 126, 87, 46}], 
     LineBox[{48, 47, 53, 52, 51, 50, 49, 48}], 
     LineBox[{55, 54, 58, 57, 56, 55}], LineBox[{60, 59, 63, 62, 61, 60}], 
     LineBox[{65, 64, 68, 67, 66, 65}], LineBox[{70, 69, 72, 71, 70}], 
     LineBox[{74, 73, 78, 77, 76, 75, 74}]}}],
  AspectRatio->1,
  BaseStyle->{},
  Frame->True,
  FrameLabel->{None, None},
  FrameStyle->{},
  FrameTicksStyle->{},
  Method->{},
  PlotRange->{{-1.25, 1.25}, {-1.25, 1.3}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.61407461068991*^9, 3.61407461788968*^9}, {
   3.61407522124366*^9, 3.6140752362289133`*^9}, 3.614075303265689*^9, {
   3.614075512311853*^9, 3.614075543049363*^9}, 3.6140755911948433`*^9, {
   3.614075659231818*^9, 3.614075682269418*^9}, {3.61407571400572*^9, 
   3.61407573639312*^9}, {3.614076074208529*^9, 3.614076086009427*^9}, 
   3.614076119380859*^9, 3.614076167590214*^9, {3.614076815209566*^9, 
   3.614076823311221*^9}, {3.614076876103409*^9, 3.61407688413759*^9}, 
   3.6140785681887693`*^9, 3.614229028912876*^9, 3.6143194446583767`*^9, {
   3.614323272539352*^9, 3.614323284142515*^9}, 3.614330893807323*^9, {
   3.6143334458054323`*^9, 3.614333450439293*^9}, 3.614333487743683*^9, 
   3.614398025556315*^9, 3.614404282904952*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other plot and fun stuff", "Subsubsection",
 CellChangeTimes->{{3.6144036462530813`*^9, 3.61440365210004*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"interfaceID", "=", 
     RowBox[{"Idx", "[", 
      RowBox[{"mfpt", ",", 
       RowBox[{
        RowBox[{"#", "<", "level"}], "&"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"back", ",", 
      RowBox[{"PositionContourPlot2", "[", 
       RowBox[{"centers", ",", "mfpt", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"ContourStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.25"}], ",", "1.25"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.25"}], ",", "1.30"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"RegionFunction", "\[Rule]", 
         RowBox[{"inInterface", "[", "interfaceID", "]"}]}], ",", 
        RowBox[{"MaxPlotPoints", "\[Rule]", "500"}], ",", 
        RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}], 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"level", ",", "0.001", ",", 
     RowBox[{
      RowBox[{"Max", "[", "mfpt", "]"}], "+", "1"}]}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PositionContourPlot", "[", 
      RowBox[{"centers", ",", "mfpt", ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
       RowBox[{"BoundaryStyle", "\[Rule]", "Black"}], ",", 
       RowBox[{"ContourStyle", "\[Rule]", "Black"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.25"}], ",", "1.25"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.25"}], ",", "1.30"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"MaxPlotPoints", "\[Rule]", "500"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"DrawOut", "[", 
       RowBox[{
        RowBox[{"SetInner", "[", 
         RowBox[{"int", ",", 
          RowBox[{"levelFunc", "[", "level", "]"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.25"}], ",", "1.25"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.25"}], ",", "1.30"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", "40"}], ",", 
        RowBox[{"ColorFunction", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"White", "&"}], ")"}]}]}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ContourPlot", "[", 
      RowBox[{
       RowBox[{"potential", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1.25"}], ",", "1.25"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "1.25"}], ",", "1.30"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.5"}], ",", "4.0"}], "}"}]}], ",", 
       RowBox[{"PlotPoints", "\[Rule]", "100"}], ",", 
       RowBox[{"ContourShading", "\[Rule]", "None"}], ",", 
       RowBox[{"Contours", "\[Rule]", "10"}], ",", 
       RowBox[{"RegionFunction", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{
            RowBox[{"InFunc3", "[", 
             RowBox[{"SetInner", "[", 
              RowBox[{"int", ",", 
               RowBox[{"levelFunc", "[", "level", "]"}]}], "]"}], "]"}], "[", 
            "##", "]"}]}], "&"}], ")"}]}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"level", ",", "0.001", ",", 
     RowBox[{
      RowBox[{"Max", "[", "mfpt", "]"}], "+", "1"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.614073836389235*^9, 3.614073840379221*^9}, {
   3.614074118470422*^9, 3.6140742049172773`*^9}, {3.614075323971348*^9, 
   3.614075326899764*^9}, {3.614075387418694*^9, 3.614075397216312*^9}, {
   3.614075762522036*^9, 3.6140757916560698`*^9}, {3.614076196810108*^9, 
   3.614076197719824*^9}, {3.6140767017618723`*^9, 3.614076737889223*^9}, {
   3.614077087419303*^9, 3.6140771363138723`*^9}, {3.6140772144934797`*^9, 
   3.614077219290783*^9}, {3.614077251425261*^9, 3.614077313960894*^9}, {
   3.614077366395494*^9, 3.614077381533101*^9}, 3.614347845712214*^9, {
   3.6143479000633497`*^9, 3.614347931597157*^9}, {3.614348012669674*^9, 
   3.614348061226018*^9}, {3.614348094929921*^9, 3.614348123021195*^9}, {
   3.6143482945172586`*^9, 3.614348298962493*^9}, {3.6143483420524273`*^9, 
   3.614348348500969*^9}, {3.61434839833349*^9, 3.614348398464018*^9}, {
   3.614397677491722*^9, 3.61439768228204*^9}, 3.6143980156645937`*^9, {
   3.614398140441127*^9, 3.61439814575935*^9}, {3.614398178627892*^9, 
   3.6143982028096313`*^9}, {3.614398249082938*^9, 3.6143982641589937`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mov", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PositionContourPlot", "[", 
        RowBox[{"centers", ",", "mfpt", ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
         RowBox[{"BoundaryStyle", "\[Rule]", "Black"}], ",", 
         RowBox[{"ContourStyle", "\[Rule]", "Black"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.25"}], ",", "1.25"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.25"}], ",", "1.30"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"MaxPlotPoints", "\[Rule]", "50"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
         
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{"DrawOut", "[", 
         RowBox[{
          RowBox[{"SetInner", "[", 
           RowBox[{"int", ",", 
            RowBox[{"levelFunc", "[", "level", "]"}]}], "]"}], ",", 
          RowBox[{"PlotPoints", "\[Rule]", "80"}], ",", 
          RowBox[{"BoundaryStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Dashed", ",", "Thick"}], "]"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "White"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"2", "*", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.25"}], ",", "1.25"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.25"}], ",", "1.30"}], "}"}]}], "}"}]}]}]}], 
         "]"}], "]"}], ",", "\[IndentingNewLine]", "potentialContourPlot", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"\"\<mfpt : \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"PaddedForm", "[", 
               RowBox[{"level", ",", 
                RowBox[{"{", 
                 RowBox[{"4", ",", "2"}], "}"}]}], "]"}], "]"}]}], ",", 
            RowBox[{"FontSize", "\[Rule]", "32"}], ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Gill Sans\>\""}]}], "]"}], 
          ",", 
          RowBox[{"Scaled", "[", 
           RowBox[{"{", 
            RowBox[{"0.95", ",", "0.95"}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"ImageSize", "\[Rule]", "640"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.25"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1.25"}], "}"}]}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"level", ",", 
       RowBox[{
        RowBox[{"Sort", "[", "mfpt", "]"}], "[", 
        RowBox[{"[", "All", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.614079303762547*^9, 3.6140793081288223`*^9}, {
   3.614079348052581*^9, 3.614079383988813*^9}, 3.614079430736188*^9, {
   3.614079499134042*^9, 3.6140795599624147`*^9}, {3.6140796204229593`*^9, 
   3.614079662417067*^9}, {3.6140797150053596`*^9, 3.61407976567584*^9}, {
   3.614079893041771*^9, 3.6140800947066717`*^9}, {3.6140801355863857`*^9, 
   3.61408014118707*^9}, {3.614080259894122*^9, 3.614080314409096*^9}, {
   3.614080435057769*^9, 3.6140804506277237`*^9}, {3.614080647742187*^9, 
   3.614080662030032*^9}, {3.61434844824646*^9, 3.614348460399907*^9}, {
   3.614348500287936*^9, 3.614348631146781*^9}, {3.614348698123499*^9, 
   3.61434869849056*^9}}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\</Users/jan-hendrikprinz/Desktop/test.mov\>\"", ",", "mov", ",", 
   RowBox[{"\"\<VideoEncoding\>\"", "\[Rule]", "\"\<MPEG-4 Video\>\""}], ",", 
   
   RowBox[{"ImageSize", "\[Rule]", "640"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.614078116210822*^9, 3.614078148538308*^9}, {
  3.614078244345934*^9, 3.6140782748639402`*^9}, {3.614078310571509*^9, 
  3.614078317494342*^9}, {3.614078378270649*^9, 3.614078380390202*^9}, {
  3.614078434718761*^9, 3.614078435949327*^9}, {3.61407985541012*^9, 
  3.614079874362657*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pic", "[", "level_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"interfaceID", "=", 
       RowBox[{"Idx", "[", 
        RowBox[{"mfpt", ",", 
         RowBox[{
          RowBox[{"#", "<", "level"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PositionContourPlot", "[", 
         RowBox[{"centers", ",", "mfpt", ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
          RowBox[{"BoundaryStyle", "\[Rule]", "Black"}], ",", 
          RowBox[{"ContourStyle", "\[Rule]", "Black"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1.25"}], ",", "1.25"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1.25"}], ",", "1.30"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"MaxPlotPoints", "\[Rule]", "50"}], ",", 
          RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"DrawOut", "[", 
          RowBox[{
           RowBox[{"SetInner", "[", 
            RowBox[{"int", ",", 
             RowBox[{"levelFunc", "[", "level", "]"}]}], "]"}], ",", 
           RowBox[{"PlotPoints", "\[Rule]", "80"}], ",", 
           RowBox[{"BoundaryStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Dashed", ",", "Thick"}], "]"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "White"}]}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", "potentialContourPlot", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<mfpt : \>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"PaddedForm", "[", 
                RowBox[{"level", ",", 
                 RowBox[{"{", 
                  RowBox[{"4", ",", "2"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{"FontSize", "\[Rule]", "32"}], ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Gill Sans\>\""}]}], "]"}], 
           ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.95", ",", "0.95"}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "]"}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"ImageSize", "\[Rule]", "640"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.25"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1.25"}], "}"}]}], "}"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.614231565880186*^9, 3.614231629808344*^9}, 
   3.614398348376731*^9, {3.614398386680332*^9, 3.614398461192773*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pic", "[", "50", "]"}]], "Input",
 CellChangeTimes->{{3.6143984255783*^9, 3.614398427712576*^9}, {
  3.614404297785133*^9, 3.6144042979183493`*^9}}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJyFk3tIU3EUx2dMm2iaS0vFMnWJSYg91ELcr/7wgYjLR05N8TEf1BRZpi5c
mBqkJSGm+8PUxMzMWU6CQMxOkyVMXSmhreny3ruHIqFR/mGGVAb6xxnShcvl
3HN/95zv93yOT25JYv4eFotV8vfeejoGu+fEiRegRhziJb2vI86pjgqu9jWw
C3WMm8MMqYnxHoXLc/BElOdUIKFJ9EBE28dlCva2rinz/Gniq6tqz9pDw6sr
dEsLmyai4yuKk5MUCGRCt8MuFAk1uI9wJAwUy6qLD9ovk76pFK0g3Ayu/dES
0+1FktSp3ui9RkMonR3h/NNI+s4OyL5W0nDVUtmR0sRY1cP9TKYXfA6WfIHc
kPLWUb6JpLk26Dt0Fmj0q9NzlBRRvJV3STVmcOq/F6v6RZGVMFH8G7YJuOPK
jFknhjTMRCmg2wj7R8LflY0xpNboEW9z1AgMrz7KwjWTGA9lmSjQCIm2c4VC
HzPpGDDEbdSZYHXe/3r1ezPRZzafsLmwBGr5s0OdgzRJ/aQaHgMG0hI0tvmN
BjIsPCbQsIwwHjns5VuqJzfiy51/ixkIaz81dYavI9h/7B9/sEJOVzGQlNXd
tHCAIQKpLPDBKgObSZqXpgqacHlF0rR6Bo5oTc0BWZTVPLB/2F/cP9aH57Uv
7hxvwp8Cu8dC8fnpxf/OF/8P+1k5PzHD8qCA5rhF+H1YJMlPoxJyVAaIXeey
PTdMVjziPJ4/5gP3i+vh/jE/2B8XMuvdaV4Ce5sm/vKYmtzpffFjXWYBu7ba
ZGJcsJo3zuPzmAe8D1gf1o/1YL3Yb8w33o+LqcLTmrsMBKlqq/mZlBVfmD+8
T5h/zDPmE/8f18f8Y36xX1gf3m+8b9h/PB/MH9aP+8P1sD+YD+wX1o/ng/nE
fLH+XWugnBjq2Wz4tmus7jPxHmUYt2MS5Nnse/OhCnbJw63SgGz3Igp2iXfO
X+ppd+0aokA7uXWtEXkPiczgfCfb8XT683qhA7UT4+9xHp/fro9iqzx67rz/
A5QTiFE=
    "], {{{}, {}, {}, {}, {}, 
      {RGBColor[0.9908459999999999, 0.9904826, 0.8013689999999999], EdgeForm[
       None], GraphicsGroupBox[PolygonBox[{{9, 10, 11, 12, 13}}]]}, {}, 
      {RGBColor[0.955963, 0.863115, 0.283425], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{1, 2, 3, 4, 5, 6}, {27, 28, 29, 30, 31, 32}}], 
         PolygonBox[{{107, 44, 45, 46, 43, 97, 109}}]}]}, 
      {RGBColor[0.8950625999999999, 0.6163855999999998, 0.23414999999999997`],
        EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{106, 41, 42, 103}, {84, 85, 86, 87}}], 
         PolygonBox[{{70, 71, 72, 73, 74}, {75, 76, 77, 78, 79}, {22, 23, 24, 
          25, 26}}], PolygonBox[{{58, 59, 60, 61, 62, 63, 64}}]}]}, 
      {RGBColor[0.8419706, 0.32361000000000045`, 0.18782440000000006`], 
       EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{54, 55, 56, 57}}], 
         PolygonBox[{{36, 37, 38, 39, 40}, {96, 33, 34, 35, 95}, {105, 49, 47,
           48, 104}, {108, 94, 8, 7, 102}, {65, 66, 67, 68, 69}}], 
         PolygonBox[{{88, 89, 90, 91, 92, 93}}], 
         PolygonBox[{{14, 15, 16, 17, 18, 19, 20, 21}, {111, 101, 83, 80, 81, 
          82, 100, 110}}]}]}, 
      {RGBColor[0.817319, 0.134127, 0.164218], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[{{99, 52, 53, 50, 51, 98}}]]}}, 
     {GrayLevel[0], LineBox[{2, 1, 6, 5, 4, 3, 2}], 
      LineBox[{102, 7, 8, 94, 108, 102}], LineBox[{10, 9, 13, 12, 11, 10}], 
      LineBox[{15, 14, 21, 20, 19, 18, 17, 16, 15}], 
      LineBox[{23, 22, 26, 25, 24, 23}], 
      LineBox[{28, 27, 32, 31, 30, 29, 28}], 
      LineBox[{34, 33, 96, 95, 35, 34}], LineBox[{37, 36, 40, 39, 38, 37}], 
      LineBox[{42, 41, 106, 103, 42}], 
      LineBox[{97, 43, 46, 45, 44, 107, 109, 97}], 
      LineBox[{48, 47, 49, 105, 104, 48}], 
      LineBox[{51, 50, 53, 52, 99, 98, 51}], LineBox[{55, 54, 57, 56, 55}], 
      LineBox[{59, 58, 64, 63, 62, 61, 60, 59}], 
      LineBox[{66, 65, 69, 68, 67, 66}], LineBox[{71, 70, 74, 73, 72, 71}], 
      LineBox[{76, 75, 79, 78, 77, 76}], 
      LineBox[{81, 80, 83, 101, 111, 110, 100, 82, 81}], 
      LineBox[{85, 84, 87, 86, 85}], LineBox[{89, 88, 93, 92, 91, 90, 89}]}}],
    GraphicsComplexBox[CompressedData["
1:eJx03Xm8rXP9x32hlEoSIUkUmUsoTS6JopCfJEmTTIkyVypNJJJK+iUJSVJK
pVLGRTJmdpzjGM/EGTimVEh1n9/en+dn3/f7PO6/1uNlb/vsvdb1fa5rXcP3
u+pun9phj0UXWWSRN660yCL/9/jV123x5+uue2Lkccvf7LDSMutO9BJrf/Tg
933jn93X/ORT15887x/d31j58DVmbD3R237/2C++6ud/737BC394+77Pnuib
j/n5Bufu9Xj3dxf/0zH/vPJv3e89/MqZb15jopd/YtKbv3LkY91TD5j5vatm
Pdr9wwcefeh5W0z0B/dYZKsdfvJI9yr3LvXj7y860Zf/9o2Pn3/5Q91b/fR9
Z27xlfnd15948M43bvZg9w7HfmfJXf47r3vKF8+5aNbFc7t3Peivn/zU5+d0
T99zzsufeuPs7j13eeatRzx5X/cD26525Av+NKt7/7cOrz/p0Jndf99o17mv
3HhG92FrfvaHv/7btO5/v37dHx68+73dz1plz/8ePf2uief7Wad97NQP3dG9
wvypV/3+zindq0560brX7nxb99oXbvvte2+7pXvD0496/PEdbur+7DJf/e2y
p/21+9hp//jscNKV3aees8/m+5xwWffuT1603Norn9/9onW23va/q53TfdGV
r7lnx+VP6D7n6rEe9PPWHfv+7mnjP6/77vF/r/va8d+n+4/jv2/3DuN/T/fW
439v92bjz0f368efr+71x5/P7tXHn+/ul24y9np0Hz3+enUvvvHY69n9xfHX
u/up8e2h+5Dx7aX7kfHtqfsT49tb9/3j22P3R8e31+67xrfn7veNb+/dt4yP
h+5XjY+X7j3Gx1P3T8bHW/f08fHYvcr4eO3+4Ph47v7h+HjvnjruQffy4150
v3fck+7vjnvTffO4R90vGPeqe9txz7rrMbvdy0f+af5p/mn+af5p/mn+af5p
/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/vXzXf5p/mn+
af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/vXrV/5p/mn+af5p/mn+af5p
/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af719l7+9Xgr/3o8ln89Xsu/
Hs/lX4/38q89KP/ai/KvPSn/evsv/9qj8i/267IXck7nI/80/zT/NP80/zT/
NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80//r5Lv80
/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80//r1K/80/zT/NP80/zT/
NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP96ey//eryVfz0ey78e
r+Vfj+fyr8d7+dcelH/tRfnXnpR/vf2Xf+1R+RefY7MX2q9L53Q+8k/zT/NP
80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP86+f
7/JP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP869fv/JP80/zT/NP
80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/Ovt/fyr8db+dfj
sfzr8Vr+9Xgu/3q8l3/tQfnXXpR/7Un519t/+dcelX9x3C57oc+xuV+Xzul8
5J/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/m
n+ZfP9/ln+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+Zfv37ln+af
5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mX2/v5V+P
t/Kvx2P51+O1/OvxXP71eC//2oPyr70o/9qT8q+3//KvPSr/4jxF9kLH7fJz
bO7XpXM6H/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn
+af5p/mn+dfPd/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+dev
X/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/nX
23v51+Ot/OvxWP71eC3/ejyXfz3ey7/2oPxrL8q/9qT86+2//GuHyr84L5u9
0HmKPG6Xn2Nzvy6d0/nIP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/N
P80/zT/NP80/zT/Nv36eyz/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/
zT/Nv379yj/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/N
P80/zb/e3su/Hm/lX4/H8q/Ha/nX47n86/Fe/rUH5V97Uf61J+Vfb//lX3tU
/sV1KNkLnZfN8xR53C4/x+Z+XTqn85F/mn+af5p/mn+af5p/mn+af5p/mn+a
f5p/mn+af5p/mn+af5p/mn+af/18l3+af5p/mn+af5p/mn+af5p/mn+af5p/
mn+af5p/mn+af/36lX+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+a
f5p/mn+af5p/mn+9vZd/Pd7Kvx6P5V+P1/Kvx3P51+O9/GsPyr/2ovxrR8q/
3v7Lv/ao/Ivr7rIXug4lz8vmeYo8bpefY3O/Lp3T+cg/zT/NP80/zT/NP80/
zT/NP80/zT/NP80/zT/NP80/zT/NP80/zb9+vss/zT/NP80/zT/NP80/zT/N
P80/zT/NP80/zT/NP80/zb9+/co/zT/NP80/zT/NP80/zT/NP80/zT/NP80/
zT/NP80/zT/NP80/zT/NP82/3t7Lvx5v5V+Px/Kvx2v51+O5/OvxXv61B+Vf
O1H+tSflX2//5V97VP7FdcbZC113l9eh5HnZPE+Rx+3yc2zu16VzOh/5p/mn
+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af51893+af5p/mn+af5
p/mn+af5p/mn+af5p/mn+af5p/mn+af5169f+af5p/mn+af5p/mn+af5p/mn
+af5p/mn+af5p/mn+af5p/mn+af5p/mn+dfbe/nX46386/FY/vV4Lf96PJd/
Pd7Lv3ag/Gsvyr/2pPzr7b/8a4/Kv7ivInuh64zzuru8DiXPy+Z5ijxul59j
c78undP5yD/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP82/fr7L
P80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP82/fv3KP80/zT/NP80/
zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/Nv97ey78eb+Vfj8fy
r8dr+dfjufzrcV7+tQflX3tR/rUn5V9v/+Vfe1T+xX1k2QvdV5HXGed1d3kd
Sp6XzfMUedwuP8fmfl06p/ORf5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/
mn+af5p//XyXf5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p//fqV
f5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af729
l3893sq/Ho/lX4/X8q/HcfnX4738aw/Kv/ai/GtPyr/e/su/9qj8i/tmsxe6
jyzvq8jrjPO6u7wOJc/L5nmKPG6Xn2Nzvy6d0/nIP80/zT/NP80/zT/NP80/
zT/NP80/zT/NP80/zT/Nv36+yz/NP80/zT/NP80/zT/NP80/zT/NP80/zT/N
P80/zT/Nv379yj/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/
zT/NP80/zb/e3su/Hm/lX4/H8q/HafnX47n86/Fe/rUH5V97Uf61J+Vfb//l
X3tU/sU8AdkL3Teb95HlfRV5nXFed5fXoeR52TxPkcft8nNs7telczof+af5
p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/nXz3f5p/mn+af5p/mn+af5p/mn
+af5p/mn+af5p/mn+af5p/nXr1/5p/mn+af5p/mn+af5p/mn+af5p/mn+af5
p/mn+af5p/mn+af5p/mn+af519t7+dfjrfzrcVj+9Xgt/3o8l3893su/9qD8
ay/Kv/ak/Ovtv/xrj8q/mBcle6F5AvK+2byPLO+ryOuM87q7vA4lz8vmeYo8
bpefY3O/Lp3T+cg/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zb9+vss/zT/N
P80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zb9+/co/zT/NP80/zT/NP80/
zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP82/3t7Lvx5n5V+Px/Kvx2v5
1+O5/OvxXv61B+Vfe1H+tSflX2//5V97VP7FPFDZC82LkvME5H2zeR9Z3leR
1xnndXd5HUqel83zFHncLj/H5n5dOqfzkX+af5p/mn+af5p/mn+af5p/mn+a
f5p/mn/9fJd/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn/9+pV/
mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/vb2X
fz3eyr8ej+Vfj9fyr8dz+dfjvfxrD8q/9qL8a0/Kv97+y7/2qPyLee+yF5oH
KudFyXkC8r7ZvI8s76vI64zzuru8DiXPy+Z5ijxul59jc78undP5yD/NP80/
zT/NP80/zT/NP80/zT/NP82/fr7LP80/zT/NP80/zT/NP80/zT/NP80/zT/N
P80/zT/NP82/fv3KP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/
zT/NP80/zT/Nv97ey78eb+Vfj8fyr8dr+dfjufzr8V7+tQflX3tR/rUn5V9v
/+Vfe1T+xTyf2QvNe5fzQOW8KDlPQN43m/eR5X0VeZ1xXneX16Hkedk8T5HH
7fJzbO7XpXM6H/mn+af5p/mn+af5p/mn+af5p/mn+dfPd/mn+af5p/mn+af5
p/mn+af5p/mn+af5p/mn+af5p/mn+devX/mn+af5p/mn+af5p/mn+af5p/mn
+af5p/mn+af5p/mn+af5p/mn+af5p/nX23v51+Ot/OvxWP71eC3/ejyXfz3e
y7/2oPxrL8q/9qT86+2//GuPyr+Y1zh7oXk+c967nAcq50XJeQLyvtm8jyzv
q8jrjPO6u7wOJc/L5nmKPG6Xn2Nzvy6d0/nIP80/zT/NP80/zT/NP80/zT/N
v36+yz/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/Nv37dyj/NP80/
zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zb/e3su/Hm/l
X4/H8q/Ha/nX47n86/Fe/rUH5V97Uf61J+Vfb//lX3tU/sU87tkLzWuc83zm
vHc5D1TOi5LzBOR9s3kfWd5XkdcZ53V3eR1KnpfN8xR53C4/x+Z+XTqn85F/
mn+af5p/mn+af5p/mn+af/18l3+af5p/mn+af5p/mn+af5p/mn+af5p/mn+a
f5p/mn+af/36lX+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/
mn+af5p/mn+9vZd/Pd7Kvx6P5V+P1/Kvx3P51+O9/GsPyr/2ovxrT8q/3v7L
v/ao/It1K7IXmsc95zXOeT5z3rucByrnRcl5AvK+2byPLO+ryOuM87q7vA4l
z8vmeYo8bpefY3O/Lp3T+cg/zT/NP80/zT/NP80/zb9+vss/zT/NP80/zT/N
P80/zT/NP80/zT/NP80/zT/NP80/zb9+/co/zT/NP80/zT/NP80/zT/NP80/
zT/NP80/zT/NP80/zT/NP80/zT/NP82/3t7Lvx5v5V+Px/Kvx2v51+O5/Ovx
Xv61B+Vfe1H+tSflX2//5V97VP7FOj3ZC61bkfO457zGOc9nznuX80DlvCg5
T0DeN5v3keV9FXmdcV53l9eh5HnZPE+Rx+3yc2zu16VzOh/5p/mn+af5p/mn
+af51893+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5169f+af5
p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+dfbefnX
46386/FY/vV4Lf96PJd/Pd7Lv/ag/Gsvyr/2pPzr7b/8a4/Kv1iXLHuhdXpy
3Yqcxz3nNc55PnPeu5wHKudFyXkC8r7ZvI8s76vI64zzuru8DiXPy+Z5ijxu
l59jc78undP5yD/NP80/zT/NP82/fr7LP80/zT/NP80/zT/NP80/zT/NP80/
zT/NP80/zT/NP82/fv3KP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/N
P80/zT/NP80/zT/Nv97ey78eb+Vfj8fyr8dr+dfjufzr8V7+tQflX3tR/rUn
5V9v/+Vfe1T+xTqM2QutS5br9OS6FTmPe85rnPN85rx3OQ9UzouS8wTkfbN5
H1neV5HXGed1d3kdSp6XzfMUedwuP8fmfl06p/ORf5p/mn+af5p//XyXf5p/
mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p//fqVf5p/mn+af5p/mn+a
f5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af729l3893sq/Ho/lX4/X
8q/Hc/nX4738aw/Kv/ai/GtPyr/e/su/9qj8i3VnsxdahzHXJct1enLdipzH
Pec1znk+c967nAcq50XJeQLyvtm8jyzvq8jrjPO6u7wOJc/L5nmKPG6Xn2Nz
vy6d0/nIP80/zT/Nv36+yz/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/
zT/Nv379yj/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/N
P80/zb/e3su/Hm/lX4/H8q/Ha/nX47n86/Fe/rUH5V97Uf61J+Vfb//lX3tU
/sU629kLrTub6zDmumS5Tk+uW5HzuOe8xjnPZ857l/NA5bwoOU9A3jeb95Hl
fRV5nXFed5fXoeR52TxPkcft8nNs7telczof+af5p/nXz3f5p/mn+af5p/mn
+af5p/mn+af5p/mn+af5p/mn+af5p/nXr1/5p/mn+af5p/mn+af5p/mn+af5
p/mn+af5p/mn+af5p/mn+af5p/mn+af519t7+dfjrfzr8Vj+9Xgt/3o8l389
3su/9qD8ay/Kv/ak/Ovtv/xrj8o/zb/ohdbZznVncx3GXJcs1+nJdStyHvec
1zjn+cx573IeqJwXJecJyPtm8z6yvK8irzPO6+7yOpQ8L5vnKfK4XX6Ozf26
dE7nI/80//r5Lv80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80//r1
K/80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP96
ey//eryVfz0ey78er+Vfj+fyr8d7+dcelH/tRfnXnpR/vf2Xf+1R+af5F93j
in+5znauO5vrMOa6ZLlOT65bkfO457zGOc9nznuX80DlvCg5T0DeN5v3keV9
FXmdcV53l9eh5HnZPE+Rx+3yc2zu16VzOh/51893+af5p/mn+af5p/mn+af5
p/mn+af5p/mn+af5p/mn+af5169f+af5p/mn+af5p/mn+af5p/mn+af5p/mn
+af5p/mn+af5p/mn+af5p/mn+dfbe/nX46386/FY/vV4Lf96PJd/Pd7Lv/ag
/Gsvyr/2pPzr7b/8a4/KP82/6B5H/NP8y3W2c93ZXIcx1yXLdXpy3Yqcxz3n
Nc55PnPeu5wHKudFyXkC8r7ZvI8s76vI64zzuru8DiXPy+Z5ijxul59jc78u
ndP5yD/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/Nv379yj/NP80/
zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zb/e3su/Hm/l
X4/H8q/Ha/nX47n86/Fe/rUH5V97Uf61J+Vfb//lX3tU/mn+Rfe46fUvq3v9
y+pe/zLW2c51Z3MdxlyXLNfpyXUrch73nNc45/nMee9yHqicFyXnCcj7ZvM+
sryvIq8zzuvu8jqUPC+b5ynyuF1+js39unSun+947PUvq3v9y+pe/7K617+s
7vUvq3v9y+pe/7K617+s7vUvq3v9y+pe/7K617+s7vUvq3v9y+pe/7K617/0
+ln/srrXv6zu9S+re/3L6l7/srrXv6zu9S+re/3L6l7/srrXv6zu9S+re/3L
6l7/srrXv6zu9S+re/3L6l7/srrXv6zu9S+re/3L6l7/srrXv7S9W//SeLP+
pfFo/Uvj1fqXxrP1L41361/ywPqXvLD+JU+sf2m7t/4lj6x/Wd3rX/5/u8cJ
/zT/NP80/3Kd7Vx3NtdhzHXJcp2eXLci53HPeY1zns+c9y7ngcp5UXKegLxv
Nu8jy/sq8jrjvO4ur0PJ87J5niKP2+Xn2NyvS+d0PvJP80/zT/NP80/zT/NP
80/zT/NP80/zT/NP80/zr1+/8k/zT/NP80/zT/NP80/zT/NP80/zT/NP80/z
T/NP80/zT/NP80/zT/NP86+39/Kvx1v51+Ox/OvxWv71eC7/eryXf+1B+dde
lH/tSfnX23/51x6Vf5p/0T0u+Kf5p/mn+af5l+ts57qzuQ5jrkuW6/TkuhU5
j3vOa5zzfOa8dzkPVM6LkvME5H2zeR9Z3leR1xnndXd5HUqel83zFHncLj/H
5n5dOqfzkX+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af/36lX+af5p/mn+a
f5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+9vZd/Pd7Kvx6P
5V+P1/Kvx3P51+O9/GsPyr/2ovxrT8q/3v7Lv/ao/NP8i+5xwD/NP80/zT/N
v/5cVf7lOtu57myuw5jrkuU6PbluRc7jnvMa5zyfOe9dzgOV86LkPAF532ze
R5b3VeR1xnndXV6Hkudl8zxFHrfLz7G5X5fO6Xzkn+af5p/mn+af5p/mn+af
5p/mn+af5p/mX79+5Z/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/m
n+af5p/mn+af5l9v7+Vfj7fyr8dj+dfjtfzr8Vz+9Xgv/9qD8q+9KP/ak/Kv
t//yrz0q/zT/onu755/mn+af5p/mXx9HKv80/3Kd7Vx3NtdhzHXJcp2eXLci
53HPeY1zns+c9y7ngcp5UXKegLxvNu8jy/sq8jrjvO4ur0PJ87J5niKP2+Xn
2NyvS+d0PvJP80/zT/NP80/zT/NP80/zT/NP80/zr1+/8k/zT/NP80/zT/NP
80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP86+39/Kvx1v51+Ox/Ovx
Wv71eC7/eryXf+1B+ddelH/tSfnX23/51x6Vf5p/0b2d80/zT/NP80/zr4+b
l3+af5p/uc52rjub6zDmumS5Tk+uW5HzuOe8xjnPZ857l/NA5bwoOU9A3jeb
95HlfRV5nXFed5fXoeR52TxPkcft8nNs7telczof+af5p/mn+af5p/mn+af5
p/mn+af5169f+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn
+af5p/mn+dfbe/nX46386/FY/vV4Lf96PJd/Pd7Lv/ag/Gsvyr/2pPzr7b/8
a4/KP82/6N6u+af5p/mn+af51+cJyz/NP80/zb9cZzvXnc11GHNdslynJ9et
yHncc17jnOcz573LeaByXpScJyDvm837yPK+irzOOK+7y+tQ8rxsnqfI43b5
OTb369I5nY/80/zT/NP80/zT/NP80/zT/NP869ev/NP80/zT/NP80/zT/NP8
0/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/Ovtvfzr8Vb+9Xgs/3q8ln89
nsu/Hu/lX3tQ/rUX5V97Uv719l/+tUfln+ZfdG/H/NP80/zT/NP86+siyj/N
P80/zT/Nv1xnO9edzXUYc12yXKcn163IedxzXuOc5zPnvct5oHJelJwnIO+b
zfvI8r6KvM44r7vL61DyvGyep8jjdvk5Nvfr0jmdj/zT/NP80/zT/NP80/zT
/NP869ev/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP8
0/zT/Ovtvfzr8Vb+9Xgs/3q8ln89nsu/Hu/lX3tQ/rUX5V97Uv719l/+tUfl
n+ZfdG+3/NP80/zT/NP86+vAyj/NP80/zT/NP82/XGc7153NdRhzXbJcpyfX
rch53HNe45znM+e9y3mgcl6UnCcg75vN+8jyvoq8zjivu8vrUPK8bJ6nyON2
+Tk29+vSOZ2P/NP80/zT/NP80/zT/NP869ev/NP80/zT/NP80/zT/NP80/zT
/NP80/zT/NP80/zT/NP80/zT/NP80/zT/Ovtvfzr8Vb+9Xgs/3q8ln89nsu/
Hu/lX3tQ/rUX5V97Uv719l/+tUfln+ZfdG+n/NP80/zT/NP86+teyz/NP80/
zT/NP80/zb9cZzvXnc11GHNdslynJ9etyHncc17jnOcz573LeaByXpScJyDv
m837yPK+irzOOK+7y+tQ8rxsnqfI43b5OTb369I5nY/80/zT/NP80/zT/NP8
69ev/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT
/Ovtvfzr8Vb+9Xgs/3q8ln89nsu/Hu/lX3tQ/rUX5V97Uv719l/+tUfln+Zf
dG+X/NP80/zT/NP86+v8yz/NP80/zT/NP80/zT/Nv1xnO9edzXUYc12yXKcn
163IedxzXuOc5zPnvct5oHJelJwnIO+bzfvI8r6KvM44r7vL61DyvGyep8jj
dvk5Nvfr0jmdj/zT/NP80/zT/NP869ev/NP80/zT/NP80/zT/NP80/zT/NP8
0/zT/NP80/zT/NP80/zT/NP80/zT/Ovtvfzr8Vb+9Xgs/3q8ln89nsu/Hu/l
X3tQ/rUX5V97Uv719l/+tUfln+ZfdG+H/NP80/zT/NP86/uayj/NP80/zT/N
P80/zT/NP82/XGc7153NdRhzXbJcpyfXrch53HNe45znM+e9y3mgcl6UnCcg
75vN+8jyvoq8zjivu8vrUPK8bJ6nyON2+Tk29+vSOZ2P/NP80/zT/NP869ev
/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/Ovt
vfzr8Vb+9Xgs/3q8ln89nsu/Hu/lX3tQ/rUX5V97Uv719l/+tUfln+ZfdL/v
8k/zT/NP80/zr+/jLP80/zT/NP80/zT/NP80/zT/NP9yne1cdzbXYcx1yXKd
nly3Iudxz3mNc57PnPcu54HKeVFynoC8bzbvI8v7KvI647zuLq9DyfOyeZ4i
j9vl59jcr0vndD7yT/NP80/zr1+/8k/zT/NP80/zT/NP80/zT/NP80/zT/NP
80/zT/NP80/zT/NP80/zT/NP86+39/Kvx1v51+Ox/OvxWv71eC7/eryXf+1B
+ddelH/tSfnX23/51x6Vf5p/0f05g3+af5p/mn+af33fevmn+af5p/mn+af5
p/mn+af5p/mn+ZfrbOe6s7kOY65Lluv05LoVOY97zmuc83zmvHc5D1TOi5Lz
BOR9s3kfWd5XkdcZ53V3eR1KnpfN8xR53C4/x+Z+XTqn85F/mn+af/36lX+a
f5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+9vZd/
Pd7Kvx6P5V+P1/Kvx3P51+O9/GsPyr/2ovxrT8q/3v7Lv/ao/NP8i+7jKvzT
/NP80/zT/Ot5Oso/zT/NP80/zT/NP80/zT/NP80/zT/Nv1xnO9edzXUYc12y
XKcn163IedxzXuOc5zPnvct5oHJelJwnIO+bzfvI8r6KvM44r7vL61DyvGye
p8jjdvk5Nvfr0jmdj/zT/OvXr/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT
/NP80/zT/NP80/zT/NP80/zr7b386/FW/vV4LP96vJZ/PZ7Lvx7v5V97UP61
F+Vfe1L+9fZf/rVH5Z/mX3QfR+af5p/mn+af5l/PS1T+af5p/mn+af5p/mn+
af5p/mn+af5p/mn+5Trbue5srsOY65LlOj25bkXO457zeuY8dznvU86DkvMC
5H2yed9Y3keR1xXndXZ53Umeh83zEnmcLj+35n5cuqbzkXf9epV3mnead5p3
mnead5p3mnead5p3mnead5p3mnead5p3mnead5p3mnead5p3vX2Xdz2+yrse
f+Vdj8/yrsdvedfju7zr8V/etQ/lXftR3vX2X961P+Wd5l10nyfjnead5p3m
neZdz7tW3mnead5p3mnead5p3mnead5p3mnead5p3mne5brauc5srruY65Dl
vJw5T13O25TzmOR9/Xmfa973lfdB5HXBeZ1cXjeS51HzvEIeZ8vPnbkflk7p
fOSX5pfml+aX5pfml+aX5pfml+aX5pfml+aX5pfml+aX5pfml+aX5pfml+ZX
b6/lV4+X8qvHU/nV46386vFYfvV4Lb96PJdfPd7Lr/ag/Ortv/xqT8ovza/o
Pq/PL80vzS/NL82vniey/NL80vzS/NL80vzS/NL80vzS/NL80vzS/NL80vzK
dbFzndhcNzHn0cx55XKepZx3JO/Dz/tS8z6tvG8hr+PN69ryOo8875nnAfK4
WH5OzP2odKmf73jkleaV5pXmleaV5pXmleaV5pXmleaV5pXmleaV5pXmleaV
5pXmleaV5lVvn+VVj4/yqsdPedXjq7zq8Vde9fgsr3r8llc9vsurHv/lVW//
5VX7UV5pXkX3dUe80rzSvNK80rzqeWzLK80rzSvNK80rzSvNK80rzSvNK80r
zaseJ+WV5pXmleZVrmOd67rmPL8572XOA5fzIuU8IXnffN5HmvdV5X0Ged1t
XoeW12Xkeco8bp/HsfJzXu43pUs6H3mleaV5pXmleaV5pXmleaV5pXmleaV5
pXmleaV5pXmleaV5pXmledXbZ3nV46O86vFTXvX4Kq96/JVXPT7Lqx6/5VWP
7/Kqx3951dt/edV+lFeaV9F9XSSvNK80rzSvNK96nu3ySvNK80rzSvNK80rz
SvNK80rzSvNK86rfx8srzatcRyHnFc95dnPeyZyHLeclynk68r71vI8z72vK
6/zzute8Diyvi8jzhHncPI8r5ee03A9KZ3Q+8kfzR/NH80fzR/NH80fzR/NH
80fzR/NH80fzR/NH80fzR/NH80fzp7f38qfHQ/nT46X86fFU/vR4K396PJY/
PV7Lnx7P5U9v/+VPe1D+aP5E93XY/NH80fzR/NH86Xn9yx/NH80fzR/NH80f
zR/NH80fzR/NH82f/txQ/uQ6pbluVa7jkusa5DzfOe9tzgOZ86LlPEE5b0be
R573VeZ9RnndfV6Hmtdl5XUKed4uj2vncaL8HJb7OemOzkceaR5pHmkeaR5p
HmkeaR5pHmkeaR5pHmkeaR5pHmkeaR5pHmke9fZfHvX4KI96/JRHPb7Kox5/
5VGPz/Kox2951OO7POrtvzxqH8ojzaPovg+ER5pHmkeaR5pHva5IeaR5pHmk
eaR5pHmkeaR5pHmkeaR5pHmU60LlOim5bkDOo53zyuY8iznvWM7Dk/NS5H3a
ed9i3seT17XndZ553VNeB5DnyfK4cx7Xyc9NuR+Tjuh85Ivmi+aL5ovmi+aL
5ovmi+aL5ovmi+aL5ovmi+aL5ovmi+ZLb8/lS2/v5UuPh/Klx0v50uOpfOnx
Vr70eCxferyWL739ly893ssXzZfovq+ML5ovmi+aL5ovvU5R+aL5ovmi+aL5
ovmi+aL5ovmi+aL5ovmS6yzluiM5D3/OS53ztOa8hTmPV85rk/M85H3PeR9g
3heT14nndZN5HVGeZ8/zVnlcOI+75Oeg3A9JN3Q+8kTzRPNE80TzRPNE80Tz
RPNE80TzRPNE80TzRPNE80TzpLff8qS37/Kkt//ypMdHedLjpzzp8VWe9Pgr
T3p8lie9/ZcnPb7LE82T6L4vlSeaJ5onmieaJ73OWXmieaJ5onmieaJ5onmi
eaJ5onmieaJ50udR6vNTrluU63jkvPY5z3POe5rzAOa8WDlPTM6bkPcR5311
eZ9JXned1yHmdTp53jvPK+Vx2zyOkp9jcr8j3dD5yBPNE80TzRPNE80TzRPN
E80TzRPNE80TzRPNE80TzZPefsuT3r7Lk97+y5MeH+VJj5/ypMdXedLjrzzp
8Vme9PgtT3p8lyeaJ9F9XztPNE80TzRPNE96ncTyRPNE80TzRPNE80TzRPNE
80TzRPNE86TPw5Yn2vFg7XxVrouW6wTluhk5j3zOq5zzjOa8ezkPVc7LkvMU
5H27eR9b3teR1znndYB5XU2et87zQnmcNo+T5Oea3C9JV3Q+8kbzRvNG80bz
RvNG80bzRvNG80bzRvNG80bzpre38qa37/Kmt//ypsdHedPjp7zp8VXe9Pgr
b3p8ljc9fsubHt/lTY//8kbzJrrnzeCN5o3mjeaN5k2vw1reaN5o3mjeaN5o
3mjeaN5o3mjeaN5o3vR1HuWN5o12vjzX3cl1KHJe9pynOOftzHnscl6nnOck
7/vP+2DzvrC8TyKvI87r8vK6lzyvnOd58jhrHhfJzzW5X5Ju6HzkieaJ5onm
ieaJ5onmieaJ5onmieaJ5onmieZJb7/lSW/f5Ulv/+VJj4/ypMdPedLjqzzp
8Vee9PgsT3r8lic9vssTzZPonneHJ5onmieaJ5onvY5zeaJ5onmieaJ5onmi
eaJ5onmieaJ5onnS14mVJ7kuV65Tk+s25DzmOa9vznOZ877lPEg5L0jeJ5/3
jeZ9VHmfQV63m9fF5XUneR44z8PkcdM87pGfW3K/Il3Q+cgLzQvNC80LzQvN
C80LzQvNC80LzQvNC82L3j7Li95+y4vevsuL3v7Lix4f5UWPn/Kix1d50eOv
vOjxWV70+C0vNC+ie14uXmheaF5oXmhe9Drv5YXmheaF5oXmheaF5oXmheaF
5oXmheZFX0daXuS6fbmOVa7rkusc5LzfOQ9uzguZ86TlvEE5j0beV573WeZ9
SHldf143m9el5XUieZ42z6vkcdE8rpGfO3K/IV3Q+cgLzQvNC80LzQvNC80L
zQvNC80LzQvNi94+y4vefsuL3r7Li97+y4seH+VFj5/yosdXedHjr7zo8Vle
9PgtLzQvonvePl5oXmheaF5oXmheaF5oXmheaF5oXmheaF5oXmheaF5oXvR1
5uVFruuZ69zluk+5DkquC5DzZOe8sTmPYs4rlvPs5LwTeR923qeY9/3kdfV5
3WpeR5bXceR51zxvksc987hEfq7I/YZ0QecjLzQvNC80LzQvNC80LzQvNC80
LzQvevssL3r7LS96+y4vevsvL3p8lBc9fsqLHl/lRY+/8qLHZ3nR47e80LyI
7nk9eaF5oXmheaF5oXmheaF5oXmheaF5oXmheaF5oXmheaF50fehlBe57nmu
A5zrYuY6cbluUq4jkvPq5zzTOe9qzkOY83LlPDU5b0Pe15z3CeZ9OHmde153
mtd95XUaeZ41z5Pkccw8DpGfM3I/Ip3Q+cgPzQ/ND80PzQ/ND80PzQ/ND82P
3l7Lj96ey4/e3suPHg/lR4+X8qPHU/nR46386PFYfvR4LT96PJcfmh/RPQ8w
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/+r618kM7Pqp5kuuI
57q6uc5krruW6xDluhw5T33O25zzmOa8fjnPVc77kvMi5H3GeR9f3ieT163n
daN5nVdep5HnWfM8SB7HzOMU+Tkk9zPSDZ2PPNE80TzRPNE80TzRPNE80Tzp
7bc86e27POntvzzp8VGe9PgpT3p8lSc9/sqTHp/lSY/f8qTHd3mieRLd84jz
RPNE80TzRPNE80TzRPNE80TzRPNE80TzRPNE80TzRPOk73stTzRPtPMt2vld
zRvNm1y3O9exzXUdc52zXPcn18HIeeFznuScNzTn0ct5pXLelZzHIO8Tzvvw
8r6YvC49ryPN68DyOo48z5rnSfI4aB7nyM8xuV+Sruh85I3mjeaN5o3mjeaN
5o3mTW/f5U1v/+VNj4/ypsdPedPjq7zp8Vfe9Pgsb3r8ljc9vsubHv/ljeZN
dK9TwBvNG80bzRvNG80bzRvNG80bzRvNG80bzRvNG80bzRvNm76vvrzRvNG8
0bzRvNG80bzJdbJz3dhcRzHXFct1dnLdiZyHPeclznk6c966nNcp50nJeQjy
Pt+87y7ve8nr1PM607xOLK/jyPOweZ4lj6PmcZL83JP7LemKzkfeaN5o3mje
aN5o3mje9PZd3vT2X970+ChvevyUNz2+ypsef+VNj8/ypsdvedPju7zp8V/e
aN5E9zoovNG80bzRvNG80bzRvNG80bzRvNG80bzRvNG80bzRvNG86Xk7yhvN
G82b/nvrenzNH80fzR/NH82fXKc6123NdQxzXa9c5ybXfch50HNe4JwnM+eR
y3mZct6TnFcg7/PN++zyvpi8rj2vS83rxvK6jzyvm+dt8rhsHmfJz0m5H5PO
6Hzkj+aP5o/mj+aP5k9v7+VPj4fyp8dL+dPjqfzp8Vb+9Hgsf3q8lj89nsuf
3v7Ln/ag/NH8ie51l/ij+aP5o/mj+aP5o/mj+aP5o/mj+aP5o/mj+aP5o/mj
+dPzBJU/mj+aP9r1tNr8L9p8otr90dp8ytr90tr9jP38lnead5p3mnead5p3
mne5LnWu05rrFuY6XrmuTa7zkPOe5zzAOU9mzjuX8zrlvCk5j0HeR5z3/eV9
O3ndfV4Xm9e15XUreV46zzvlceQ8DpSf03I/Kl3T+cg7zTvNO8273r7Lux5f
5V2Pv/Kux2d51+O3vOvxXd71+C/v2ofyrv0o73r7L+/an/JO8y6615Xjnead
5p3mnead5p3mnead5p3mnead5p3mnead5p3mneZdz4NW3mnead5p3mneafNd
af5p/mn+af5p/vXzXf5p/mn+af5p/mn+af5p/uW61LlOa65bmOt45bo2uc5D
znue8wLnPJs5j13OE5XztuS8CXmfc96nmPcZ5X0AeR1vXqeX1+HkefY8b5bH
vfO4VH5uzP24dE7nI/80/zT/ensv/3q8lX89Hsu/Hq/lX4/n8q/He/nXHpR/
7UX5156Uf739l3/tUfmn+Rfd62jyT/NP80/zT/NP80/zT/NP80/zT/NP80/z
T/NP80/zT/Ov530s/zT/NP80/zT/NP80/zT/NP80/zT/+vku/zT/NP80/zT/
NP80/zT/NP9yXepcpzXXLcx1vHJdm1znIedBz3mFc97OnBcv56nKeWJyXoe8
Lzvvq8z7nvK+hbwuOa87zOuK8jqBPM+Xx+HzOFl+bs39unRO5yP/NP96ey//
eryVfz0ey78er+Vfj+fyr8d7+dcelH/tRfnXnpR/vf2Xf+1R+af5F93rBvNP
80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP86/nuS3/NP80/zT/NP80
/zT/NP80/zT/NP/6+S7/NP80/zT/NP80/zT/NP80/zT/cl3qXKc11y3Mdbxy
XZtc9yHnUc95inMe0JyXL+fFynlsch6KvI887/PM+7TyPoy8zjqvo8zrovK6
hjzvmOcF8jhdfo7N/bp0Tucj/3p7L/96vJV/PR7Lvx6v5V+P5/Kvx3v51x6U
f+1F+deelH+9/Zd/7VH5p/kX3euk80/zT/NP80/zT/NP80/zT/NP80/zT/NP
80/zT/NP80/zr+f1Lv80/zT/NP80/zT/NP80/zT/NP80//r5Lv80/zT/NP80
/zT/NP80/zT/NP80/3Jd6lynNdctzHW8cp2bXDci52XPeY9zHtKcBzDn7cp5
d3LejLyvPe9LzfvO8r6SvG48rwPN67jyOos8D5rnJfK4XX6Ozf26dE7nI/96
vJV/PR7Lvx6v5V+P5/Kvx3v51x6Uf+1F+deelH+9/Zd/7VH5p/kXPfJ38E/z
T/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zr9cxKP80/zT/NP80/zT/
NP80/zT/NP80//r5Lv80/zT/NP80/zT/NP80/zT/NP80/zT/cl3qXKc11y3M
db1ynZxchyLnec95l3Pe05ynMOcZy3mCch6PvA8/77PN++jyPpm87j2vW83r
yvK6jzwPm+cp8rhdfo7N/bp0rrf3eORfj8fyr8dr+dfjufzr8V7+tQflX3tR
/rUn5V9v/+Vfe1T+af5Fj/ze/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP8
0/zT/NP863Vbyj/NP82/ft3LP80/zT/NP80/zT/NP82/fr7LP80/zT/NP80/
zT/NP80/zT/NP80/zT/Nv1yXOtdpzXUMc12wXHcn17XIeeZznueclzXnVcx5
0XLeopx3JOcVyPuG877AvM8nr9PP62jzOre87iTPy+Z5ijxul59jc78unevx
Fo/86/Fa/vV4Lv96vJd/7UH5116Uf+1J+dfbf/nXHpV/mn/RI78n/zT/NP80
/zT/NP80/zT/NP80/zT/NP80//p5L/80/zT/NP96naryT/NP86/f58o/zT/N
P80/zT/NP80/zb9+vss/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zb9clzrX
bc11EHOdsVzHJ9fVyHntcx7qnEc254HMedpynqWcRyXnScj7oPO+xrwvKe8b
yOt68zq7vA4lz8vmeYo8bpefY3O/Lp3r8RiP/OvxXP71eC//2oPyr70o/9qT
8q+3//KvPSr/NP+iR34v/mn+af5p/mn+af5p/mn+af5p/mn+af7181r+9ftM
+af5p/mn+dfr8pV/mn+af71fX/5p/mn+af5p/mn+af5p/vXzXf5p/mn+af5p
/mn+af5p/mn+af5p/mn+af5p/mn+5TrVue5rrquY65blOkK5jkfOu5/zZue8
tzkvZc4rl/NG5bwwOe9D3sed92HmfVJ5H0NeV5zX3eV1KHleNs9T5HG7/Byb
+3XpXI/XeORfj/fyrz0o/9qL8q89Kf96+y//2qPyT/MveuT34J/mn+af5p/m
n+af5p/mn+af5p/mXz9v5V+/j5R/vV9d/mn+af5p/vU6pOWf5p/mXx/HKP80
/zT/NP80/zT/NP80//r5Lv80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/
NP9ynetcRzbXacx103LdolxnJNcJyHm+cx7enEcz58nLebBynpuctyLvO8/7
QvO+rbyPIq8zzuvu8jqUPC+b5ynyuF1+js39unSux3M88q89KP/ai/KvPSn/
evsv/9qj8k/zL3rk3+Wf5p/mn+af5p/mn+af5p/mn+ZfPy/lX79PlH+931z+
9XGE8k/zT/NP86/XXS7/NP80//q4bfmn+af5p/mn+af5p/mn+dfPd/mn+af5
p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+ZfrZue6tLlOZK7Tlusq5boo
ua5Bzjue8wbnvKA571/O65Xz9OQ8G3kffN6nmveN5X0VeZ1xXneX16Hkedk8
T5HH7fJzbO7XpXM93uORf+1F+deelH+9/Zd/7VH5p/kXPfLv8E/zT/NP80/z
T/NP80/zT/Ov/+7yr98Hyr/eLy7/+jhB+dfHTcs/zT/NP82/Xme+/NP80/zr
81Tln+af5p/mn+af5p/mn+ZfP9/ln+af5p/mn+af5p/mn+af5p/mn+af5p/m
n+af5p/mn+Zfv37lX67Dnevi5rqUuY5crgOV67jkOgs5T3rOg5zznOY8hjkv
Wc4rlPN+5H35eZ9s3keW91XkdcZ53V1eh5LnZfM8RR63y8+xuV+XzrUH8ci/
9qT86+2//GuPyj/Nv+iRn8s/zT/NP80/zT/NP80/zb/+u8q/dr786/3e8q+P
A5R/fVy0/OvzROWf5p/mn+af5p/mn+Zfn5cv/zT/NP80/zT/NP80/zT/+vku
/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/NP80/zT/+vUr/zT/ch3wXIc3
183Mde9y3apcVybXhch533Ne55y3NedhzHnUcp6jnIck5wXI+2bzPrK8ryKv
M87r7vI6lDwvm+cp8rhdfo7N/bp0rr2IR/719l/+tUfln+Zf9MjP4Z/mn+af
5p/mn+af5l//3uVfO17+9X5t+def88u/Pu5Z/vV5oPKvz4uXf5p/mn+af5p/
mn+af30dUvmn+af5p/mn+af5p/mn+dfPd/mn+af5p/mn+af5p/mn+af5p/mn
+af5p/mn+af5p/mn+devX/mn+af5l+uO5zrBuc5nrtOX62jlOji5zkXOY5/z
VOe8szlvZM7rlvMu5TwoOU9A3jeb95HlfRV5nXFed5fXoeR52TxPkcft8nNs
7telc+1JPPKvPSr/NP+iR/4//mn+af5p/mn+af7171X+tdPlX++3ln/9Ob78
6+Oa5V+f5yn/+rx3+dfXAZV/mn+af5p/mn+af5p/fd1l+af5p/mn+af5p/mn
+af51893+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/mn+af5169f+af5
p/mn+Zfroue6xrkuaa4bmOt+5bo+uW5Hzsuf82znPLk5j2XOM5fzPuW8KDlP
QN43m/eR5X0VeZ1xXneX16Hkedk8T5HH7fJzbO7XpXO9/ccj/zT/oke+j3+a
f5p/mn+af/3vln/tcPnX+6XlX39OL//6uGX51+dxyr8+r13+9XU+5V9f91j+
af5p/mn+af5p/mn+9XXm5Z/mn+af5p/mn+af5p/mXz/f5Z/mn+af5p/mn+af
5p/mn+af5p/mn+af5p/mn+af5p/mX79+5Z/mn+af5p/mX67jnusw5zqpuc5h
rmOW6xTlOiS5rkDOC57z9ua8mjnPXc4DlfOi5DwBed9s3keW91XkdcZ53V1e
h5LnZfM8RR63y8+xuV+XzrVH8ci/6JH/zj/NP80/zb/+ueVfO1v+9X5n+def
w8u/Pi5Z/vV5mvKvz1uXf30dT/nX1zWWf32dd/mn+af5p/mn+af5p/nX99WU
f5p/mn+af5p/mn+af5p//XyXf5p/mn+af5p/mn+af5p/mn+af5p/mn+af5p/
mn+af5p//fqVf5p/mn+af5p/mn//P+vOL7ROdK7zmus45jptuQ5TrquS6yLk
vOU5r3DO85nz4OW8UDlPSs4bkPfR5n1leZ9FXnec1+HldSl5njbPW+RxvPxc
m/t56V4+/mlse5o+mnTV/22HfxnePLa9TOs+Z+xx1ujSse3wmu5zxrbrG4Zj
xra3OxfqG8Z+7s39/X8Ze5zUX9cnjf3cud0vG9v+ZnefMbZ939+95tj2el83
T/SyY9vrvNFFY//f5P57zh37d6YO3x779x9YqH8x/nsNXxn7O+5Z6Ounjf/3
/vnbjP/c4YTx7+uva1/39105/jz336f5qc8c/zsW6s3Hxu2M/vezLxp/nvv7
Nxl/nrrPHX8e+/vXH/892kNf9/ueNf44nDz+PHb7/TVftb//leP/Tn//KePP
Y39d+/pLxlyZmK/a120vvu71P2Hs+X6oty9te/b93h+07cX3e3/J7Z+r3p9y
++es34+zmrNe39ze+77jer/0de+X+rXjr/OIy34/bfvktPfH3H657fnntt+H
276uvT4ct73k9pnr2+f2yX3fz3lf57z/3/bp9+O+7VF7fnP7876gvS/4e/q+
6Hr+bR/2P/QPxryfPnr32N99xfCtMb9njt489ntfO3xuzNE5o0W3+7/tatJw
wLuX/NAf3/3A6JGxf3/q8I/NX7X05kvNG31k7H1g5vChsb/b8ff7h53Gfv/b
R1ddtPHHj9pv7vCBsfebaf3vLTv2fjJjdPD49w2Tx95vpnf793Ybe1+7u3+f
s8Z/7+EtY/5P9Kyx7X/S6L7xn9N9wtj7yv39+46/j8we/jT+e422Gf85/fOP
GX8c7hh7/qZ03zL+d4++NP57DYuM/5zRvz4w/+x1v/PgcPXY835X95Jj73f3
jQ7d+6Ynf3zL/OG6sffDWd3Gp+fD32/793p5Pvx7/t7ePqqNfz+f937epWP7
A/eMnhr/u/rn2d5tj7Z3z88rxl+nfn60v+drY9v/rf36+n3b03i9bA9+nvHo
99G84RPvtK97P/R1vcX4dtN/r/Hi/ZDH+pzx9/V+v7H/rPce/ztHd47/3T3e
8/1GGw+2L+/3fNb223jo69rX+ejr2te93r6u8+d7P9DeD/5nfByPthz7/a/q
/9/3a99ve/L9nm/t/cz+ku1T236+PfZ639T9vLHt75Zu/th+tNff+43xl1/3
fqG9n2wz5uYdo33HH9tf+zfa9sgD27PXN/0xPmwvp4y72u9X9l98/tQbXrPC
H58+Z95oxXE3unca20++b2L/rvZn/P/a9/NO89jvyz/PJ9+Mf/s3fNG+/5lv
G3O0e/Pxf6d91H8e/3dHm8y4Z4fZG8zv7Uvzjpf88HXbl7Z9aT7aPv289NT2
av/J1/0+PLG95f6N7YlP2vurNp54wwPvR55/3tpe0lv7F14/+xO+X3v+e57k
ev7tD9jf4sE7xrejfn8wPrX3Y8/vymOfFydeD/tf2niyv2j8vXbM4et6/yc/
vxiv3o8PH39eevvmt/b+ZX/A+wvvjW/bh/0T3ve81vX82J/gveeb99r4tX/j
+41X3699v/Hr38/9f80f27/9ca+X/TGvj+fX83Xk+Djvr3u9PD9eX59f+att
72uN7S/f2J54/m1/tmevBx+1/W3/v6/7/9cb/7369bf9a77261/vt/37VPt5
3n955fOU8aqND/trxn9+nvL+6PXjt9fb/v2DY97c0p57/7d/b3zylU/+PePL
62U8+brXz9e9v+f+8D3jLnZ7fo2nfcYd7f1749Xf47iUvye3155XvcaL7dN4
563mq+3T+7+fZ3zqnne+fr73Xz/P82F8a+Pb8+PzlO3J3+/92P61/9/z4f/3
fPj/NY89P7YHvz/PjGdtPHs/MP6WHhsfD3c7Lufvtf15/vx+fp79a58nfvfQ
ZaftetBD/fvYn9K9DkA9v/5/n+/9PjzQfv6jB//uHcsv+3B/v9+XF76+xjb3
bfbN02e2/7b3Vdc74rlfeMtVvX0Pjzz9oTu+edVw3d8Ov/3iB+7q7/f6/ubG
E+/c4Py/Dtu9c/9jV58xp98f/ueAN4yWmXtXt9f7mLe8Z6srn7qtfZj32wN3
P/WTtw9r/+Gy7/39AxPHC/5w9Fkff9nf7uqe9s6rvrD4ByaOF/j3V1j6vKvf
9fE7hideMPbYX/f63jr+c4bHt/jREuv+vz6v8OaJV7zuwqf/M21if+CEd/3i
mDWmD/vM2PCSy349cXzB8aQLXrj2GzdYd/qw2SZffta7Z8xtX/y83z+9/Mob
HzZj+MAhH3zZdS+Y1F9fa+7qW1+55KQev9t9Zqstn7f8wuvTL33qCx57fLX7
hyW+8sG9XvfKyQsdf/jIS0+8ddNfzR6u++TXj7voqDkLHW948VK7Hj3pS3P6
9/3HJVd/YM//zBn+fMGday195MTxBc/PRrv8Zq9ffO6B4c6fbfaOLx1350LH
H5Z8wfz9f3Tqg8NuK8zacfu7Fl4Pac7n/nz90ptPHM/6zZ7f/cMqF08cz3ps
7kev+P3ZC8br0oc+eOKi00dPDIu97qQPXTnMet45Z774WzNHc2dd9bfVNv3r
cPrH9n/ZU0vePfri0Z88aKNt/zoc8ZnD3rn8MXNGj1zzh4MPe8ttwy4fuuED
R+8ze/Tu+95x3tlPThrWvfrdH97uvrtGL1ln7eue+d7bhvmnPXuV6z4/Y7TV
cl/edc9tpgwXnTv7u3//472jzxz4shs3/PqU4YKb17lh6Xc+MPrI5z5x1wbX
TB2evnevFT536B2jTbY85Z3nXHPXsOSO+5/xhnfPHn3kTY8uv/+904YVRvft
9IGb5442XfTZP3rFx2YOF/zx5Ds+/e87Rkts9o+XfuzRB4avPLLD81//nPtH
b37Bkvsef+D8Ycnzvv+sO4+fObrkNf+dvNie84e37bTGv2fPmzH6/Dd32e3Z
11w9bDb8cosL75s5evI5r5994q7XD1+dus5zH33VPaNLfvTPH7z9RdcMh271
rykXr3rP6GcbrrrOz15yzbDf9e/6w6NvmTXa7icbnfCad9w83HD032euuOms
0Qs3fHzbx6ffPJxzyIfPuGnJu0b/fPQZG376iRuGdU/69Jl7/ebO0bqvOnTb
5Y+4uXv/13349RefcfPwmU+84/xVnjlrtMsLPnTCvMduHdY84k9zX73g/19j
p3/99A2/unU4ffovrppy+f2j0TUnfvbIfSYNMw+6bNtz9rxvtMkSx6668oYT
x7NPf+ntGy32jUn9et90+07P+8K2tw2/OGPW049teM9o1vuPX2vDsycPO155
3Om7vm5if+SSh+95+ccuXvB5dbd7X7fBg7cP97/nCxfvf9H00U6//v4qK19/
+/D4Knse8cOdp41W+/tnN/70mlOHZ3//9ctuu87E8fDfHfqS0674+AOjx+74
7XGHbnjn8D+n7PT5xUf3jL6877VbvPr8qcOzTlj2C6/67J2jNcYfh6N3/eRv
X//OeaPLnnjv5t/cdNrwsfHvG31q/P8b9r7qzgMP+8GC/ck3PXHFdctOG9a4
b+XTv7jg68uu8KcLVvnxtGGLu2464cufmTi+Mm2b96/30Ycmj874zPl7v3+f
6cNTOy965INHTx49vs8jV2127PRhp289+MI9dp00esmp6/xirydmDPu+5fXf
fs/qc0f7f/rW5c67fsbwyfcf/vrjnl4wPld6wblv+8OM4ciLllxm6qsX7F8d
/sNjj5szc5h6z1XfOfThW0c7vefpP+6x2Kzh9ne//0N//N680cHH7LLBuave
N/x8ldmLf++keaO/zt/l+tEJ9w2PHfqFvd6/w6TR8Z/fb/Y73nTf8PQed/72
tD9MGu32irnLPfKz+4ZXnn/qmkvvN290+nr//P0N37h/uH3P6/Y+ao95o0Pf
+oovvurH9w8H3H3e7FcuN7k/f15y049POOMjk0fDHq9+7+xLZg+33T3jy+/d
fu7o4zf/d8NpS80ZPv7ULi9e++ezR3971qa7nzpvznDbT3f71g+eN2e037bL
n3zBevOGM9701LtufsGc0Vk7Xjr7wuPnDZ/f7c9vevOKt/fxz9e96YwfHXzC
1NEOe/xyladWmzccu8J9379l6uzR8zY97suvPeWB4Y/rPfHP7Y+eOL6+5nk7
ffOnC7bHUx6/YplHlpw/bPfGNS+9bLmZo41O2ezV+646f3jdsZcd/ZFPTx+d
+PRFb//SXx4cvvbxf9320aOmjXa7f+q0fyw3f9jo8vNu2vSQe0Z/m/fSy36+
4P9/cocj7r/wsLt7//3gp59adbOfLfz5cqM3b//Uet+4ctj12UcdPvlTE8fb
7c+dPWX/86f+ZuL4+45fW3/6ildfO5z84yeOf82rZ/Xxdu+/Z55/8Z5HveXG
4V0XfPzyzTa6q/ff97hymZWuu3Hi+Lz/v+eBr69r+8vved8Vm+1z8G39+fCt
Z77poJmvmDQcceG7Xzzrpnn9ecv++Yev2H2Tpe6ZPLz8e8tteeH8ieP1Pu9e
uvfqe3x++9uHS7a7YfrV50wcv1z6vN9dsu3e0xY6vj//pGc9e91JU3r/4J1r
Pvszu502tY8vbfyt7595zD1TJ65PuuJl+37q6nuGh2764VrXrjlxvuqHP1jm
/TdeN68/f/h9t1vu0sPOWnfasPz4z+nvX3f83+nv9364xUUvnvPNU6cN3zl1
56NessG8hc5v3XDHnAunTps4XzDtgyfd9Nmnpw1XDLO/8Kqjpy50fmGXff+2
3NR/TXz/K3/4gYOetcPE+YNZT2+0wtrbTnx+OGbHO3f95T4zh8MvOfBXz/nq
vH5/9/ec8aGlLt52q4njja897OInD5qy4OsfW3G9lY6ft9D5htMuuGT9lc69
f1jy1/te/clvLXy+4ZhVbt/j/a+dM2wwfPvYrZaestD5h2WP+OOZv3renGGn
FQ9584r/mt3HF9baeac1N/zuwucfvrLklVt98Etzhws2mHX/K585Z6HzEd9+
x64nvOnEifNdV65/ytxXb7Xg8+8eV0/Z94n7ezxdd98vF9vi7on1E+0vL3v5
D27b+vT5PR4Of9nf3rvJd+cP6y12+Ykr/HnifIb9/ZePrjllzr8eHA7a5dWz
f/OGifNltrfPn7DdQS9cZf7wvGXveNUzvz19tNKhv3/B2V+/cjh9tSVPvmCb
Bc/fz1Z7znMumTz8/tfLz/jp12eMNpm83yfe+tYpw/U7/ur4H2wzbbTLDqsv
/p8bpgzDnU9OW3GLB0Zf//43//zzM6cO92y/1u5/PmH26NnvWunMXe+cPuxy
4TtWf+Yps0ebLnbt2w/55/Rh96f2PnDmiyaPbrj14i/sd/f9w+GXLv7BPV88
eTRtp08d//wn7x8+8r7rN9j6Z7ePLr/290e9ZOe5wy8W/9FySzx8x+jB73z5
mK3mPDDsc8hnJ29637TRN5Z9Yo/Pf+TKYfu7/3DG6cvPGH147HW8anjhIq9Z
dc0L7h09tv9/jjxzy6uG9ad8ZMpK75o2WvT5xz/0k/OvHC45eYtvvWb2gvfr
pTa7+aNn/3VYd+ulzn30njtHv/nE039bftmbhoeO+sTqJ9995+iXr3nd4nu9
6NZh19MennrxUXNHG333O48uf8Vtw03XHL/U2a+dO/rlwaOVr/vqbcPnv33s
iR+fOW80Y9bMs7/3otuHnz6yxFavXmHG6MTdNzjymh8vGP9//fkrpmwxY3TY
9av++Ip/3z7svvW/dr3xxOmj41b719OHz5oyHPq1Uxffa6UZo3NPfts258y9
fThimb2e/PG194zWXeUrf3z6vKnDFsc9sPXNC37ffQ9Z/Zz7d79jOOehu3e+
casHRrfP/M8PDz747uGPv971zbe+9YHR5Fnnzn3eKXcP24x/32i38f9v+OVG
D1wxZfq80U1fv/eF+69177DU+M8dnT7+7wwv/+lOH/vzEXNHt2y76ubfvGDa
sP/fLzvqJW+YO/r9ugevNZoybfj3MrMvXPtrc0ZrXX3CnH3+PW247kVHXrT2
MrNHB9+23OunXTtt2PNre53w5f3njA5f7u5DfvTfacPTLzr9j6vcN3u057vf
+o2XLPj+E7b42As3X2P2aPI7//OLvZ49fdjiu6d9+z3r3T465XN3/ffwl04f
Lr3v2++6eYmpowNf+61Fdl3w+WHyK8+et8NWc0bHfPXz+7314zOGf9z0x+lv
/s+C/e0V3rjYr943Y1j5pUdvtNiWt40Wnfq/+711nRnDn1Z664wPb3Tb6Bfn
PfTP8597//Dyd6x2yv88Nnf0xvV3XXSvT80enl57qWW/+8U5oyXXGXscHjn/
XUde87Epo/8eu8zSe/xpzjDrw1NPWuT5d4wOvffxT6615gPD0l+a/alt9lzw
fnruQT9bdd8Hh5ff8L1v/mDru0bbX7brd6469sFh91ccO+sdi901eueqTz66
94EPDqc/efv1Jz923+iELdb58a6fmz9cvuLUt796+qzRqw9Yau/dF+yvTz7m
gfkf3+i+0VkPfXHWGWfOHx66dJfnXv6dWaMdX7vKy79z1vzhui3fd+kp680a
HfyKw79+3IkT58MO3+AXj7zxw1f254MNxj4/TunjuX/adOWZ/7hsSn++OOLr
yz29/dRpw2fOWW7Kt148cf7I/3/W0T9b4+S/3z78Y+zvnz36zQeWuOekT0wf
Nnrfb16346TZowMvOX3dpRd4ffLvP7PITdtOnK/yfjTj6GlTFztl8rDLGt+9
/Kl77xl95LFv/c/5L5t4/zr9uM3+cPYeU4Yrzln+gye88N6Fzq+9a7lzX/bw
ZRPn1/705ONHvuDqGcMrVnznfftcPGf0ueVuXHHWCTOG333xwttWWmfB+/86
H/vifv++ZfjQ8et89N8zp40+OebwlGHSTbfstN7kaaM9xz4n3z68d4OTT/jy
47NHv37Tgw8v/9O5wzFvv3j785eaOzps3Ik+v7bmvjfue9SC5+OhxdZaa8Of
zF7ofNvuX/zWmx54eNqw6F8P+N2jP5g4v/fxPX612+dffk8fH3/wU6874LDP
3j365g8/+OSS2147nPWq6zf9x9Mze3/E54OvnvzQtFs/ccPE+b9bf/aa24bb
+nzX4S8+5LmXv2fi+MjTf/vrDue/btKw/ooHP/m//57Zx1N4f8w1+602Zd3b
hnM/cOGZq77snv48sO49i1x63YLfb5n1hyUOPHniepjnLv/Hx76x7oL9h8f3
/MDbPjFx/csj/75y80MW7P/PedO/jnvP8+8avjxvxrWj3R8YLXnj6q+dts9d
wxHLnbnVG3e4s7//pCuOfuWMmXeMXnfLvge+b/W7hs0eO+gHb9964njkno9t
d/tX3z1vtM+dX/74/mvMGv596u1b/+TBW/vrS351jdGs+beOlpz3h/nPW3fW
sPhmb577jCUmjdZc8qwl7//1rGGF3b6+5Q4HTe73588f9s+HP/iFyaNNT5t6
7OrzZg+vedEyL5p6+cT1KP84aNMVLrt29uimA3e+YuX15w6bnzPvi9Nvn7j+
ZNKj/7z/jMmzR3Oev8fxr/zpA8OxF37ihp3OnD3aaq9nffiA5z7Yz/+Bz7/y
s7971cT5wM1PfMavv/DYg/38zRu9/22vXnnifOJXH/7wj3f974P9/SuscOBD
X/rG1cMmWz758o99ccbollU/sfMml1817LPlygveuWaMHvrjn46fd8tVw77r
fOmw3W6aObrwq1tuds+F1/XPO26/Izd75QrXDCtPvWvJR6ffM/rPm17299VW
uHo47/Vvv37GphPnB/c94GtvWGqjBf33156917E3DTuuMmW1KQv6P899xhJ3
nnRLfz71/aftcf9ys66+c7T33+ft/JfP3dS90d7z1ln6V7cMp9zwil/e+alZ
ozNue/Fhu109adjmrge3eXzbWaNFz/7hdt94YNLw0rO+dNYW+84ZXfKWw089
eJPbhvXHX4fRyz+57Olz3nTbsPjMM/d60X8WbL83/m771b4zadjjwHXXmb/A
v6u/P2O9I145afj581/z8E+2vG/05x2feN+P3zJp2Omh6w994cxZo5Oe/fXL
dt5vwb/3hj1fvP+XJ85nnn7Kqot/7xN3jdbc6pCpW39z0rDplJW2++9r7+rt
3/HA43acdM67N540fP55ZyyyxaJ3j8677H/WO+Kztw2bb3382h/9zN2jL513
7XZ7LzZ5uHbHu2f8Zo8HRud9+YFF9rp14njqGePb9bDC+HGK0UunjR23GF48
vl2PLhjfzodzV/z1axf78cT1XT7fPvLMdz3xl2n3Dr+c/JddX37B1NHTb/j7
pzf66cT50TfPf+EmJ31t+rDH0i+59aPvnjL65KVLXr3ZdtOHg/7+wA/f/tmJ
67uunfXfjz177qTRb9bd8/pn7jdj2HHre8/Y9fJJozsO+d11a35jxnD11358
zCdePG903aVvWfqGS2YOM/ZcfOq+S08aTT/gtjcsddjM4f4zv/uzLU6aOF+6
yoeOe+ovx84bPfPMpV+68f2zhseW+/tWbzxx3ujEd/5m/tzRfQv2x7Z86cb7
TFwvdvs+k15ww3mTRnd9fcM3Xv3zBZ9/1937PUvuPXH+dItVTj330aMX7G8f
tPhqU155/7DCz7de5G8bTx79btHRB1++3+z27OWHH/CZ3c6aM3zp0od32P7Q
OaO3r/GzY477ypzh8ytu/7mdnjFndPWpb13thafP6c+zzp8e8/SPHvn+onNG
O3zrwPuumjV3OHHBprDFc+eM5pxw9o3X3jivn3/f/79f/egT239n6mjOXxZZ
/4l/zh3u2e3pDdYYTR1dfcHogB/9el73RVMOePoD58wbHtn4OUd/ZK2ZoxPX
PvlXl68/vz+P7r7spX//3z88OHzybX9Y/4iNZox2O2alF+3/1geHJ945tp86
etnGq1902VEPDmveu/0H333jtNG+ex/3lnnPnD9cstTvL974n/eM/rThap9c
a4X5w+93WeL9Rz9+9+grSxz15F+eeHDYec9fzf7m96ePtl30wVm/+eaV/f78
yP3v/8kXb75y+NqPPn7b4jtPGz1+/eH/PvycK4d5j73sd1/YfOZo6oabrnHy
/GuGl+ywzqduf9bE+VfnY0e/+/VZqx4xcT3aXpucf+hG37x1mLT/SzZdcaWJ
600cr5yy2EuO+ecbbxvuvfGA0edumj269AdvW2nnzSeuP/vAJ1662wFXTRo2
u/dv6/xs7Ynzta9Z7utLXv7l+0e/HPt8NWlY+8INbt93kftH2x199JxXrj5p
eNdrvvS1Bxf8fs9e7JA7T/rsxOfdUzaa95X3zpo87LvePw7Y5riJ871XX7Tf
1H1XmNn9lyVW+ur0naaN1l7td7+489YpfX77M+u+cLd1Hp4yvP0Pr3jJEu+Y
Njrt1iOufebGU4fnXrzlu7a89d7R6PDJVzz1janDnxb98HGL3nXb6EVv//ZB
z5o8vY/vHvHUN24/92UzhmXP/tPWX7pk4vzy6ltOvuC7B0/u4019vvm5s557
/1XTh6M+PeP3j258Wx+Pfupf+y72ny/NHb1s+NbWVy4zc9hgm7e/Z70NJs4/
Ox/9jyv+9oNbnjFz+O3n7t78GS+5baHz0bsddsfje//ivh4fj5/1nFPXX/D5
5dCx/fzZfb3P2WOv+8T56V8f/tgX9vvo/aOPve09vzhw6/l9PGKR/f9vP2P+
8Jl7Dpi54sH3jc789R8+eMKP5vfxks13ePyth7x//nDW72avsMSrJ64n2PGE
I087+LoZoye2XP/hx+ct2H99xa/+ssyLpvXxnr/cdO9mh8y6d3T4A8MOxyzo
J377f/u5C3z9n91/tP4m1w97HfnLE4994dzRWRdttMYz91+wv3HMq5+53CNz
R0v89fE592w8ebhw12/8ct2VHxhN2/mam4+Yfvuw4x9u2miDv9w9WuTbr3rX
zf+dOkz71tjj6MDx/z6cMrafumD/dOYKN8zYbsHzve5plz+8zKTRWo//4+d7
HTxzeN11B12yxPMmjc796yLLnXfxrOGO57zn1Oe+9v/Zq/1bsmbHpPE9t3+W
JD/j68mr+wMlPx5emfjM3kTgofyvZcD+ey2P9qkjz+05N6gfSX73Yv9tTTPZ
lb4v7E+pn2us+HV9v/+dQxYneF/aiyxjZv5XcWv/LKeLiU8nvbY3uptY4zX9
9v4OY9ZiE9c39iqeyz5+kXq+P4ZR5ULLwTf2z+u0Da9yPtkv+y4m+Ej/W3ut
d/uuX616tP9JKrPgzdlv7N9tdb7XJHR3/7Lg7/28J4H9d6VfO/88e7y/RWie
GmvFFfh4D2y8FZbetz14mK/564b9B7aMitNawPpcWfIAu84Fe56AWnbOea/2
+0TKNzyMuW4/fffUR03PHu1nepeZ8/vPdftPnQ9l2ma/2n/Nfj2v07379nK7
RRV+aQHrp86lC6b/emBf+Nl7gkH1q/1zE8oi6mY/sa+D5Mv9NScDs1LCX9jH
5r+9HZJ9cz+D67TI89NewvtTFgX5Ko8UX9uvr7Q1fy39en8E28JlijH37APK
p3wvBtYcR2bm6rc0PbDfk77BVI394f6YuLkzGb6+sQcA1ehU4g==
    "], {{
      {GrayLevel[1], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
W4pVWLzOSq4bnQMO7ijFFfzdaYWnW0rxD4uXukbqu7sUSzyvm0vNDs7d5HzY
tzoO7u9yPmJuL8Ut991mP/ZFfpa8j/v8nOD4vVJ9w/t/30qP8Peq9Df9/kQp
fmDlB7973vmT3mPm8XexEx3zkOPg5n7fg++RUgzD+sP2Yz9dilt4fakUSzDx
shVWnis1C2D3Kd9JzPpVmPFhJWE9W2p2cO4Z58N+3nGw+IrzweKLpVjlvhfs
x3681HzhMz9War5gP+rasV91DmbGW6WYPCasj0v1H735iRWe3izFMOfeCevY
Uuy+7TjsD/zs4fKjsE52rnd9lvf0qfPB5TWlvmPov29KsQdD35XiBG7eKDXL
uPv1UvMF+zXXjv1FqRkB35+Xmh3Yn/ke7K9LccsdX5XiFvtLx2F/6/u5++pS
rFDf966FvvmxVO/A98+l+pI58YsVXv92PJ/vHyucTS3FCRz/ZoXjXx2H789S
3MLrX1Zy/escMEq/wB4M0TcorNQq8Q+7eSVu4XW2Sr1Cb/ZUmhec+8/5sKNK
cTCaVsoHi41KDHNfvZIf+49Sc4Raf/fnwM4qxXF3Uel++K4qzQXmaLOSMvOm
rcQVvdmuxDbMtSr5sTuV9mC0txLbMDpNJYXFPpWUXNNVykfvz17pc8Pi9JX2
4KN/JSZha4ZKswAuy0r1UuuASlzx7PpVmiOc61spB/aMleKYAbNWykfMzJUY
humZKvmxZzHn3L2Bued5z1GpRvheuVJP0C+DKvU6vT+kEkvMvJ/cg/Tf/JX2
mH8DK7FNzFyV4mBozkq58Q2uxDPcz13Jj71Q+PnDUuwOr8QVfCxeSeFmkUpz
AY4XqHQn3K9XqVfozaGV5gjnFq6UD3vRSnFwuUSlfHA5rBK33LdYJT/2fJVm
DZ953kqzBnueSrVjL1kpB/NjuUrzHUZHVOpL+nS1Sgpby1bimXMrVHqOcLx8
pTjsVSo9exhdtZKSa8VKZ2F9ZKV8MLpSpT3e2ehKHMLTupWY4bksU2mucffS
lWYN9lKVasdes9K8gPU1Ks0R7NUr3YO9diWGuWOtSgxjj6oUh72O7+du/hkF
/7yRf164oXsNRj8I68SwTgprk0qs0vvjKv2zSTg7utK7oRe29B7MbVxpvhCz
qePgeyPnxrd5Jc7heDP7sbeqxCrc71iJH/jYyQo321ZiFc7G+05i+I7hz4f8
vrhNJc45t7XzYW/nOHid4Hwwt0Mlzrlve/uxx1aaL3zmY/xZ6fcxleYRvonO
wczYvdJMgdf9KvUivbm/lZ49wAqvu1Wav8RMchws7mGF130rMUmuPb0H90dU
4g1ujrTCx1FW3s2uleYUd+xSaQZh7+x6sQ8Ja8FKfB9UaV7A7oGuEfvwStxy
32GVuMU+1HHYW/h98lyOq8Qw/F1TqYfohWutvHP6i16n98+oxAmz7Vg/Y+LP
9B7MnVCJB2JOchy8Hu978J1SiXN4Pdl+7LMrsQr3F1TiAT4utMLNuZW4haez
fCcx/P4y3L01udK84Nw5zod9nuPg8iLng/UplbjlvvPtxz690rzgM59WadZg
n+rasS92Dni9otL3AYze4GdND95opU8vr/T7IueuqsQbLF7pOOzr/Ozh73or
ua72Wd7TTc4H6/tU+g6g/+6sxB4M3V2JE7i5rNJ85+5LK8017EtcO/atlViF
71sqzQvsm30P9h2VuOWO2ytxi32b47Dv8v3cvXel7zDq26sSE9j3uC7mx4OV
ep3ef9LniHvKyud72gpnD1TimZiHHAdDD1vh9YlKHJLrEe/BPf8tN1iCiVes
sPKqFYZer8QtvP5QqT/oxx+t9ONzleYFc+LZSnME+xnXiM1/O+5g3/dCJVZh
93nHYT9eaY5Q62OV5gv2o64X+zXXRU1vV5px8PdxJZbox0+s9OlbleY+596t
xDn8veM47A8r8Ql/H1nJ9Z7PwvGnzgcHP/lzw803lRiDxe8qcQU3b1aaa9z9
vfd4dm/4WeL7otK8gN3PK80U7M98D/bXlbjljq8qzQXsLx2H/a3v5+73XS+z
qrepfqIv+jTVE7z/vyvxw5y7v9L3Cj30j/eYef9VYg/mfq3EBqz87M8N679Y
8f1WiSuYnuqz2ElTLMFE2pTCStaUwtC/vpP77qv03UlN91ZiAjtqanbAeq2p
mYLd01SN2HFTrHJfoylWsetNxWH/7hqZT39Vmjs8iz8rzR3sP+zHnq6p/qMf
p29K6dO+TSlstZqqldqbTfGM3Wnq+cLotE09e3J1m9rj3bSbiuNc/6ZYgolp
mnpvvLNZm9qDm1maYoxzZVPzhdlWNDXvsPOmnit21ZSfmmZsao4wP2Zoar5g
z9wUq+SdqSk/dr+mPh/nZgs/v1iJ4zmamh3MjDmbUmbGwKYURgc1pcyPuZpS
en/uphQ+FmiqX/ndbXBTe/A6b1Nsw+g8Te1hD2mKYbicvyklfv2m3j29tmBT
+WB64aZ4ZjYMbUqZDYs0pTC9aFMKc4s1pbA4rCmF0eFNKcwt3pTC4hJNKYwu
2ZQyD+ZrqnZqXaipWqhjqab88LpMU/OC2bBiU1zB03JNzVnm6/JNKfNmtab6
kj5doak9YkY01dP4VmoqB7yu0hSHcLlqU8q5kU3loPdXb0qZB+s0xRisrNnU
LIDLUU0p82DZpuqlvjWaiuPcWk35YXHtphRG13U+WFzPynsabT/3Ld3U8/i/
ZxF+nhLWBWFt4PfJzNioqXlBX29spd83scLBplb6fcumZh8MbeY9uNyiKVZh
bnPvYY9tilW4HGclfkPfz93jnY85unVTPDMbtrEyG7a1Mhu2s8LQ9laY28EK
iztaYW4nKyxOsML6RCuzYYxrp9advcds2DWsAU0xupuV/17rXk1xCH+TmuIW
XvewwuueVs7t7bMwun9THNLL+3gPRve1wuV+Vs4d4LMwunJTPUj/Heg9eD2y
Kd7g7JCmWIWPQ63wurtrp9aDm5oRnDvMfjg+3ArHRzkfvB5thdcj7Oe+g3w/
ubbyO+T9HeOzMH1cUzzD8clN9TosntAUt/TpiVbYPdOfE85O8h4xZzTFIb5T
nAOOT2uKW1g/3cq5s5wDRs+2wjQMwB5sTW6Kf9g91wq7lzTFLZyd4zjOnWc/
jJ5vhekLnQ9GL7LC4hT7ue9U10ut9zbVo/TmxT7Lffc01cf4rmqKT7i8vKlZ
DLtXWGHohqbYo3+v9B4x1zfFIb6rnQOmr22KZ9i9zsq5G50DXm+ywuudTbEH
c7c0xT+83mrlnV/W1Ayivpsdx7nb7Ifp260wfZfzwe7dVj7zHfZz36V+9uS9
z88Jdu+3wu77TfUNPfJQWLs0xevDVnh9qin24Oz4pnqQnnvAOWD90abYgONH
HIf9ZFOcE/+Y/fD9tPPB67NNsQrTrzTFGzw93xS3MPqCFVaecRwxzzmOcy/a
D5cvWeH4VeeDy9es8Pey/dz3RFOzhlofd43Yr/sss+ENK0wf0Te8q7CODT9v
0Fd8vh3Wx031KDzt0E98vhvWV3317N4J672m9nnuH/jZw/SHVrj8yEquT5wP
LrmPecAs+NR7MP1tU1zB0xdNcQuvfUINn/fVLHnTtTOHPm9qRnDuM+fA/tJx
8Pqd88Hf101xDt9f2Y/9jfe4e6NO+A4Kq09YPzQ1I2D6p6Z4htGfrcyGX6z0
6a9WOPg7rGua4myq92D396a4hdHfvIf9Z1Ocw+hfVuJnb+kd01P/OB+8/tcU
23Df05LCbq0lhd2oJYXFeksKu42WFHbjlhRGk5YURtOWFBazlpQZ8Idrp9Z/
XQt15C35YbpsiWdmWDf8/GBTXDZbmndw3GpJ4Xj6lvqV/m23tAeX07XEG77e
lnLAdJ+W+ITXaVtSzvVtKQe89mtJ4X7WltiDrRlb4hb+ZmpJYbdqqV7qm6Gl
OM7N3JIfRmdpSWF6QEv5YHS2lpT31L8lP/cVLT0PnsWP7iN6aI6W3idMD2yJ
Zxgd1JLC6FGh3zfsq35/qa/4mzv4F2iJT3ga3NI+LM7b0hyExXla2sMe0hKT
sDh/S0r8nC3dz90LtpQPFhduiSXYGtqSwuIiLSlsLdqSwtBiLSlsDWtJ4Wl4
SwrTi7eksLhES8rvoUu2pHA2X0u1U+tSLe3xzJZuSeFvmZYU/lZsiR94Wq4l
DuFv+ZYU5lZoSTm3Uktn6d8RLfEJTyu3tAd/q7Sk8LdqS8q51Vo6S79P01IP
0n8jW9qDxXVa4gdu1myJQ/gbZYW/ZVuqnVrXaIlbzq1lP1yubYXLdZ0P/taz
wtlo+7lv9ZbuJ9f69tN3G1hhcUMrPb55S0zC08YtMQmLm1jhb3xLTMLTZmF1
HLNlS0zi28I5eB5jW2ISFsdZObeVc8Di1lbY2qklJmFo25aYhMXtrDC3S0uc
0KfbOI5z29sPiztYYW6C88HiRCuzc0f7uW+M66XWne3njl19Dywe3VL/0Xd7
tsQSbG3cV/ztHtakln6Gvz2snNvLZ+nl/VpiFbb29h4s7mOFxX2tnNvfZxcK
6xjfT78f4D24PKIllmDo4JaYhMVDrLC4SviuXLmfZslBLTHMuUPth9HDrDB6
pPPB4lFWPv/h9nPfgb6fXHwn8fsjvzse6xrp62vdB7z/E1riEP5OtMLrGS2x
BDcbtdSP9N/xLTFMzMktsQqXJzkO+/SWuCX+FPvh9Uzng4OzW+IK/i5oiR+4
mdwSh3B2rhXOznIcMec4jnPn2Q9n51vh+0Lng7OLrHA2xX7uO62l2UGtp7pG
7It9FhYvsfIMrghr05Y4u9IKoze2xA/cXN0Sb/TvVfZjX+M9nvt1fvYwer0V
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
4Nqu2IOV66w7hHW9lXM3+iys3NoVD3Bwk/fg5mYr3Nxi5dxtPgsrj/h++vF2
78HNA131N33dCL1UD2tPfPy5Iug9YV3jz0Gtd3bFGDzd29UZeu8+K9w86Hzw
9JCVz3+//dx3h+8nF9+H/P7I746PukZY+czvj/fzRFfMwMeTVvr0ha56F1ZO
6aof6b/Hu2KSmKe7YgOGnnIc9vNdsUH8M/bD1ovOBysvd8UJHLzVVe/S7692
xQMcvGbl/pccR8wrjuPc6/bDxxtW+Hjb+ej9d6z01Jv2c99zXfFMrc+6Rux3
fRZW3rPCyodd8QYrH1lh5auuOKGvP+mKAVj52H7sT73Hc//czx4mvrDS+19a
yfW188HHY35vPPdvw7qiKyZ+7arv6eUfumKDnvqgK/6p9X3Xjv19V6xy7jvn
wP7RcXAz1fng4Oeu+IGbn+zH/sV73P2bz8LK71ZY+cMKW/921d93hfVXV/zA
yt9WejbuVR/DzT/eI6bRKwbw3R7YmRLWpLCiXjEEK/VeKeeSXuWAlbRXCiut
XvU6PZ73anbAbtErhY/eXvUrvZD1Ko5zZa/8vIeqVwoH7V7lo/c7vVKYaPbK
z33v9FWdtbA3T6/6AP66vTrLfYN71Tf4+vaq1+Fj2l6xBIvT9UphaJZe9Tq9
PH2v9oiZuVc84OvXqxywMmOvuIKnmXqlnOvfqxzwN2uvFG4G9arX6fHZesUP
TMzeK4WJPr3ih/oG9CqOc3P0yk/fzdkrpR/n6lU+mJi7V8pnHtgrP/dN06tn
T955e/WcYGW+XimsjOrVe+X9zN8rZuBvgV4p3AzrVb/Sv2N69Ux5HkN6lYOY
hXvFEhwsFH7+pit7sV7xQPzQXvnhZniv8tH7/2PpvOO/HL8w/v3sJeOzyy6y
N5lpWFGEJqkUsktFUSJEkwjZo01kr+y998zee2+yfuf9u64/zut0PWfc9/M8
530/30h2LIs9WOla1hwzsx3L4gEOdi7Lw8EOZdVRs1NZdeR1Kiu+PKxzWR4+
dimrH9zsWpb/L6xLWXHW61AW8+x1m7L2iF4a8zY3bCzfmbCWiO0RtldZzMBK
d3vY6lXWfDPXe5fFIQz1cBy9j6/x3Pf1s4eh/exhaH97evV2PzhoU9YMMn99
fA0WB5Y138x1/7L4gYk9y2KFvXYra//ofmXxRl5f90Af4DrYHeR+MDGgrHli
Tg90HH2Qr7H2YOcyH0M8I+z38bBTwk4NG1YWb7BySFkswdCh9jB3TFlzz7wf
5mvUHF0WM8QOdw84O7IsZmDrKHvyjnUPmBhuD4snlMUA83tcWSzB0Eh7zo9x
Zc0xcz3CdeSNcpyzZ7Q9bI1xPxgaaw9DxzvOekd4v+z1pLAtvMZ4rwMfs8qa
LWZqYlnswcqEsuayg58lfls/022dd5pz4ePMsviBm9N9Dc7OsIebSfbkneVc
GDrf6zOzk30NnmaWNfvM0bSyWIWt6fawdbLvg71OLYsx8orx81ohbDfuNzja
PfzZYee6H3N6nj33f05ZOaw3xevT6wnfM8/mAu8Rzm73++Y9X1TWuQZbF9vD
1lVlzT18DC1rNpm/2WUxSc2lZbEHx5e4Dn1lWZxQf5njcHm1+8HN3LLYgJVr
y2KAdeaXxQmMLrCHrTmuo2ae68hb6Dg8LbLn3F3sfnBznT3cXOM4611R1rnA
Xi/3HtHXOxeeltjD4k1lzSUM3WwPQ0vL4oF5v7Us9uDyFsfRt/kaz/0OP3tY
udMetu6yp9fd7gc3F/q98dzv8TVYebSsGWLe7y+LK3i6sSzm2esN3jv6vrJ4
Ju9e90A/GHZiWZw95n5w83BZbMPcQ46jH/E11ubfq1T9z8KeLGvWYKtfJc7s
sHzYM2WxBEPP2sNcn5jx3mEz4tfL/Ux5Zk+XxSE1z5fFG2w95zr0y2VxBU8v
OM7sT2iKldfC3iiLDVh8z8+R+X2zLJZg6C17zpLXy6qlZpnryHvbcVh/xx6e
3nc/GPrAHobedZz1XiqLbfbKN5afSfkZ9EXvl9hHZfEDT5+WNYvM5mf28PRd
WTww79/bM+9flMUqbH1pDyufu47YN2UxA1vf2tPrB/eAid89K8zOH/bM+89l
sQRDn5TFM/v72PtF/1QWw+T96H7oX1wHT3+6H+/4t7K4Yr1fHUd/6OfHs/jL
swBP/5TFD+fWzq31bteJufqvLJZgqKUiD0PM3ANlzfXf7kH9v+5BTbIibuEs
UVEdOlsRJ/CUqigOc4WK+sFBqSI24KAcv36qrJltVRGTMLRiRZ7vebGiOmpW
qKiOvJUqinNOr1yRh6FKRf3gpmp+4GaViuKsl6mIYfaarmiP6FpFubBSr8jD
UOuKZo55bFORh6H1K5p1mLg32FkYdkrYqhXFXwnrHM+8U9jEuL5uRc8fVtpX
5OFsvYo8vTaoqB9sfV3WWc/8bVjRNXjasqK5Z442qYgZGG1WxDN7bVS0d/TG
FbFH3kYV9UBvWlEdLG5VUT/mdPOKmGSmNqsojt6iomus/VVZrLC/rSuqg79t
KvLwt11FjMHW9hV56rpUNOvMfteKPKzsWNE9w9xOFXmY26GiOmKdKmIY/jpX
5Om1S0U94IY/x8GZCAf8eY6/PMu7V8QPvO5T0UzDwREVPTve824VcUXerhX1
Q+9RUR1896ioH2zx50fgk/W6VRRH71zRucNeO1Z0H+i9K6pj7Z7mEP72q4gl
2NrfHoYGVMQMs9+7onllfns5ju7ja/DX398NmDvAHoYOtKfXQe4Hc0f6vpnr
gb4Gf4dVxAMcHFwRYzC0b0X7Za+HVzRnPLvBFTFJ3iD3QA9xHawPcz9qDqmI
VRgd6jj6UF9jbVjle8j37CjvEbamVzQTzMv9wdWZYafx366FblfR+bZtRec4
83eCr8HfrsFi+7D3I79r+C5hp8evj3bv1cLGxrUxYf3CBocNCvuQ35tVxC28
nlIRezB0qj2sjKuIYXgd4zWp6VARE+zppIrODvJOdD/0eNfB6ET3g8UJFTHM
eic7jh7ZWvc7Gotfjwr7lP/2KPzBYR/zXNwDds+qiE/2ck5Fc8mczrSHrTMr
4pm8KX6OcDzZdegZfvYwerY9vaY6F9bPdT8YneZrvLOLKuIQni6piBkYmlTR
GcTaZ1R0xqFP997R51d0XsD6rIrOEfR5Xgc9uyKGWePCihhGX+A69MVen7Vv
TMQ8J4PD8JdXdF7A9weNeC5h54ZdWRG3nBlX2cPu1fYwcU1FP7fB3xxfg+l5
FfEMr3N9Db2gIp5hd1FYX9c/7/fNfF3rfnB8XUUMcx5cbw/HS+xh9wZ7+LvR
Hi5vsofjm+3h8hZ7+LvVHi5vs4fF+d47e13svbCP2x3nnLizIrY5D+6tiKVj
wpZWdLZyxtxtD8cPh40MGxV2j69R81DYcY5NjfmdEnZK2AOhh4eNCHvQnrxH
3IP5f9SeM+CZijiEp8cr4h8Wn7CH47u8X/b3mOvIe9JxuHzKHl6fdT/4e86e
9/S046x3h58Hz+KIapxzYc2wF/w+OSdeqohtuHzZnhl/xZ7Zf9UeJt6uiB/O
vNd8DUbfqIhnuHzd19BvVsQtLL5lT/2LXp+133E/OH6vIoY5D9635zz4wB6O
P7SHs4/s4e9je7j8xB7OPrWHv8/s4fJze86AZd47e/3C1+DyS3vOhq/s+XOa
31fEIfx9U9Gf14TXb+2vCPvOnrwfnAujv1TEIbP8o6/B6E/2cPmzPXm/OhdG
J7fW7N0f9nvYwop4/a8i3uBseUWswsdf9vD6tffOXv+s6Iwg72/H4fgfezhu
qaofvCaq8vD6r+Os94fXp9e7foe8v2RVuTCdropnOC5UNeuwmK2KW+Y0V5WH
3ZWquj84y1d1jZoV49f3+d6LVfWA4xWq4hbWW1XlyVu5qh4wukpVHqZhAPZg
q1IV/7BbrcrD7mpVcQtn5arqyKtVFYfRelUepltX1Q9G21TlYRHmiLNeqar9
stdtqppRZnPVqnJZb+uq5phY26r4hMs1qzqLYXctMwxD61fFHvO7dlXXqFmv
Kg6JtauqB0yvWxXPsNu+Kk/eBlX1gNcNq/LwukVV7MHcxlXxD6+bVOV552tU
dQaxv42qqiNv06riML1ZVR6mt6yqH+xuVZXnnjevKs56q1f17OnboarnBLvb
VuVht39Vc8OMbF8Vt/C6Q1UeXrtUxR6cZaqaQWZuu6p6ULNTVWzA8Y5V1aE7
V8U59R2risN316r6weuuVbEK0z2q4g2e9ohf/1YRo92q8rCyS1V11OxWVR18
71lVHC73qsrD8d5V9YPLfary8Ne9qjjrdarqrGGvO1e1R3TPqnI5G/atysN0
r6r4TIX1tofRg6qaUXjqW9XzgtE+jqP7+RrP/QA/e5g+0B4uB9jTa6D7tfI6
nAecBYN8DaaHVcUVPA2pilt43b+qc4e97lfV3tEHV3VGkDfYPdBDXQevh7sf
/B1aFefwfYjj6MN8jbVfrMf3KGxi2JFVnREwfXRVPMPoMfacDcfaM6fD7eHg
hLB1quJshK/B7siquIXR43wNPboqzmH0eHvqL6/qHTNTY9wPXk+sim24P8ke
dsfZw+54e1g82R52J9jD7in2MHqqPYxOtIfF0+w5A0Z57+x1rPfCPk53HKYn
VcUzZ9jUqhiDy7OqOu/geLI9HM+sal6Z3ym+Rs05VfFGbJp7wPSMqviE17Pt
yTvXPeD1PHu4v6Qq9mDr/Kq4hb8L7GH3TO+X/c1yHXkXOg6jF4XtXhXTl7of
jF5mz3u62HHWO8PPg2dxVFVzxAxd4fcJ01dVxTOMXm0Po3Psmfe59nBwbVXn
HczN8zU4XlAVwzA639fQi6piGF6vsaf+Sq/P2ovdD3avr4pbzoAl9rB7gz28
3mgPczfZw+LN9rB7iz0s3moPc7fZw+Lt9vC30Htnr3f4GufBnfZwfJc9P8Pe
VxWH8Hd3VazyjO+xh9d77cm737kw+nBVHDLLD/gajD5oD5cP2ZP3iHNhdHpV
M8j8Pepr8PpsVbzB2RNVsQofT9rD61Lvnb0+XtUZQd5TjsPx0/Zw/Jz7wevz
9vD6jOOs95jXp9cLjsPxi/Zw/JI9HL9e1azD4itVccucvmoPu+/4PuHsNV+j
5u2qOCT2hnvA8ZtVcQvrb9mT9657wOh79jD9aVXswdYHVfEPux/aw+5XVXEL
Z++7jryPHIfRj+1h+vOw2VUx+oU9LH7iOOst837Z65eOs8bXXgeOkzXNMfP7
Q1V8wuW3VZ3FsPudPQx9b0/ej86F3V+r4hAuf/I1OP7ZHnZ/sSfvN+fCQaqm
9eHmd1+D4/+q4hD+lld1FsDuX/bXhX3j+2Cvf1bFPHl/Ow7f/9jDd0tN/eA4
UZPn/v91nPX+8Pr04pvEz4/87JiuaY8wvW5NM8S85GpiGHbzNXnYXakmDmHu
5armkfnL1nQWUFOsiROYLtRUh16xJuapL9UUh/WVa+oHu+WauIXv1jWxB1vV
mhiG11pNHm5WqamOmkpNdeTVa4rDaKMmD9NtauoHo6vW5GGxWVOc9VrVdO6w
1xVq2iN6tZpyOSdWr8nD91o1cQuva9fk4XWDmuYVttrV9LzgtW1NcfQ6NV3j
ubev6dnD93o1eRhdvyZPrw1r6gejmZreG899o5quwfdWNTEGW5vWxDDsrlnT
GcRe16hp7+hNajovyNu4ph7ozWqqg92ta+oHi1vUxDysb15THL1lTddYe5ua
cjknto1ff1YV39vV5OG7Y02zDpc71MQzZ8aONXmY3qUm9mBup5quUdO1JlaJ
7VxTD5juXBPPcN+lJk/erjX1gNfdavLw3aMm9mBrj5oYhtduNXm42bcmbuFs
95rqyNuzpjiM7lWTh+m9a+oHo/vU5GGxe01x1utU037Z65E1zR/z3rOmXNY7
oqbZJda3pvcNZ71qOuM4Y3rbw/FBNXHFzPbxNWoG1MQksX7uAd8H1MQ2jB5o
T95A94CDQfawe1hNHMLfwTWdBbA7xB4W96/pDGJ/g11H3lDH4fsQe3gd5n7w
erg993yo46y3X03Pnr5H+TnB8dH2cDyjprlhRo6tiVUYHW7PvJ9QE2+cc1fU
9O55V8e4BzXH1cQJTI9wHfr4mhimfqTjsD7G/WD3xJq4hddTa2IPhsbVdBbA
7nh7eB3rOmpOch15JzsOixPsYXSi+8HcafaweIrjrDe6pvOFvY7yHtGnOxdG
z7DnnJgc1qEmRqfYw+i5Nc0oPE0L274mRqc6jp7uazz3s/3sYfoce7icaU+v
89wPLvvXNIPM3yxfg+lLa+IKni6siVt4PbOmM4hzZZL3jr6gpjOCvPPdAz3b
dfB6mfvB38U1cQ7fFzmOvsTXWPty5zIfV9Y0I3CcjN9P3hz+lrB5Nc06LF5d
E7ecE3PsmdlrfZ9wNtfXqLmmJg6JzXcPOF5YE7ewvsievMXuAaPX2Q/wPmAP
tpbUxD/s3mAPu3fUxC2cXe868m50HEZvsofpW90PRm+zh8WbHWe9Bd4ve73d
cda40+vA8fM1zS6zeW9NrMLZ0prONc68u+1h+h578u5zLhw/VBOTMHe/r8H0
A/Yw+qA9eQ87l9l/wevD4iO+Bh/P1MQkLD5e07kAx0/Yw+Vdvg/2+lhN/JP3
pOOw/pQ97D7rfrD7nD33/7TjrPeo16dXqq73x/N+0XuE759qmiHm5ZWauIXX
V+2Z/XdqYo8z76qaZpP5e7mmc4GaN8LOqonv11wHQ2/XxDP1yxyH+3fdD47f
r4lh2P2sJg7h6cOazgU4/sgedt9zHTUfuI68jx2Hy0/s4fVz94O/L+zh8lPH
We+tms4a9vqm94j+0rnw+pU9Z8a3NXHLuf6dPez+VtO8wtYPfl7w+r3j6B99
jef+s589fP9iD6O/2tPrd/eD0Zf83njuf/gafLfUxRhs/VUTw7D7TU3nEXv9
2ntHL6/pvCDvT/dA/+062E3U1Q8W/62JeVj/x3H0f77G2vxegX8ewD8LSNc1
azA9I369Y9hOYbm6zgjYzdflmf2V6uINzjrU9W6YhWxdzFNTrItnOC7UVYde
sS6GqS/VFYfvlevqB6/lutiG19Z1cQVP1bpYhZVaXR7+VqmrjppKXXXk1euK
w3GjLg/HberqB3+r1uXhvllXnPVa1XU2sVe+Z/xMys+gK9S1X2Kr18U2TK9V
15kCr2vX5Xn/G9Y1o8zsRnV5OGtXF5NwvE5dHo7b1lVHbP26WIXFDery9Nq4
rh6wvlVdvMHT1nV5eNqsLvbgdc26zlz2t0Zd+0VvWhfb5G1SVz/05nXVwes2
dfXjHW9ZF+est0VdcfRqdT0/nsW2dc0CHG9fF8NweUBdM1TwfH3lGWfOvvbs
71LXGQdn29XVg/od6upBzc518QzHHeuqQ3eti1XqO9UVh+Nd6+oHr7vXxSrc
710XP/DRrS5uYXTPujyc7VZXHTV71FVH3l51xeGye10ejvepqx/89azLw1yP
uuKs16Wus4a9dq5rj+h968rlbNivLg/Tvev6HsBoH/tM2MC6ZpE57VcXe/Da
13F0f1/juR/oZw+XA+zh7yB7eg1yPxhdL+z1muZvsK/B/eF1cQVPQ+tiD157
1fUzEHvd33tHD6mLbfIOdg/0Ia6D1yPcD/4Oq4tz+D7UcfQwX2PtdetihW/X
ka7jnDjKHr6PrWsuYXS4PbM/Nqy97+9Eezg7ri5O4HikPRyPcB2x4+viFl5P
sGcvJ7kHjPLvFWAPhk6zh5WT6+IfdifVxS28XlHXfDCP4+s6L8gb537oCa6D
0dPdDxb59xiber1THEePruscYa+jfB/oM1zH2md6ffieXNc5DrtT7OHv3LpY
Yk6n1cUzLE51HD3d12D67Lp4hstz7OF1pj29znM/OLjS9w03s3wNji+ti0M4
u7AuhmHxLO+XvV5eF3s8uwvqOjvIO9890LNdB/eXuR81F9fFM9xf5Dj6El9j
bRjie8j37CrvEaYfrGsmmJe5dbHKvF9bF2+cc8fU9V1h/hb7GvzNqYtzaua5
Dm6udm9iC+piHtbnO46+vi5u4fXWutiDodvsYeXGuhiG1+u8JjVH18UEe7qh
rrODvCXuh77JdTB6u/vB4i11Mcx6NzuOvqauc4d7XlTXuYNe6L2j73AP2L2n
Lj7ZyyN1zSVz+qg9bN1dF8/k3efnCMf3ug79kJ89jD5sT6/7nQvrj7kfjD7g
a7yz5+riEJ5eqIsZGFpa1xnE2nfVdcah7/Te0U/VdV7A+pN1nSPoJ8LGWD9b
F8Os8UxdDKOfdh36ea/P2jcl4pxM6s+B8edH+PNf/HmvV+riHF5ftefMeM0e
dl+3h4l36/q5Df7e8DWYfrMunuF1ma+h366LZ9h9x576VEPvm/l6z/3g+IO6
GOY8+NAejj+yh92P7eHvE3u4/NQejj+zh8vP7eHvC3u4/NIeFt/y3tnr+94L
+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
Pt8JezshZj4J+zghNj61hs/3w95LiO23vXZ37wU2znb83YS4f9d9YfID18Pc
Z+47y+t8lBDD+A8TOlO41zcSOm/wryd07rzue4DVz92Ltb8J+zqhefwl7OeE
5vRX60sd/8rP77uwb733b10Pkz/5Hcx1DzRsf+8amPzNfa/yuyIGP/+E/Z0Q
K/z9W/8mdHaw5pcJnUH4LxI6b77wPcD2n2F/JHRe4H9P6Az43etd595/JcQu
fnlCDC93/RKvyT74/0vw/2bh/8sCz8mk/kzYMv89j/wdbfCajmuppFjNJKVh
IJuUhrdW4VdIio9cUjH4LITPJ8UznhislsIXk2KXOjTveevwWyXF7YpJ9YXd
lcOvlBS3qySlYbWclIa3SlIa/qpJabisJaXhsJ6UhrdGUhr+mklp2GudlOaM
YY/cA2cH67MnGG2TVB5MrxZ+1aQYWjv8WkmdKWuEXz0pbtdMSjOb64VvnxRv
5BJjXrm2blKMtk2qF+ytE75dUiwSRzPv6yfVCw42SErDz+bhN0uKvY3Cb5gU
ixsnpTm32Bf75lwgTj0cbpJUHlxumpSGty3Db5EUf7wfNByzDnmcazwDnsvJ
3D/rJHUubJPUe4XDbcN3SGqmt0tKM+PbJ6WZ/R2S0nDTJXznpPjYMakYHHYM
v1NSvOKJwV6n8DsnxRt1aM4R1mQfcNs1qb6wu2v4XZLif7ekNNzunpSGqz2S
0nDWLSkNf3smpeFqr6Q0nHVPSsNfj6Q0XO6dlOYsYY/cAxzuk1QMLnsmpTkb
9k1Kw1ufsN5J8bl/2H5J8drLOuU4Gib7uobZPTDsgKSY7OcYHPa3zjuOZt4H
uIZvA3PHLMLnQY7B1aFhhyTFw+CwQUnxcbB1i/fIPbRyfGBS3A5xHtwOtYbP
w9wXPodZl70OeSu4B/vgzOW98S5h+HDXwO2RYUckNePDw45Nai6PDjsqqTk9
xpr7Oz5sdFI8HOtYW18blRS3I9wLXkeGHZcUn6OsYfIE94LRMdawNCEpJmD1
xLCxSbF6kjVcnR52WlJnwFjXw+Q458HoeGuYPMV9Ye9U6428Dnlreo/sm1m8
LOzSpHid6Jo9fe2SpDicEjY5KVbPDJuUFDNnWTOv54SdnRRPkx3byddmJMXw
VPeC1elh05Lic4Y1sz/TveDzXGsYuyhsdlJ8zgo7z+/4fOutvK8zkuL7PNcz
Cxc4D4YvtIbVi923m+8VvZvXIW9L9+MdwOrlfl6weoU1M3Ff2L1J8XlV2JVJ
8Xm1NVwtCluY1LeBWWMW93YuvWBibticpNiY4/o+rluQFM/znAef17gvjC4O
uzYpfm4OuykpJq8Puy4pNpZY93cu9Qc6Tj0M3eA8uLzRGg5vcV94u9V6sNch
r7f3OD+ps2a+9wqjt7kGhm+3hsu7wu5Misml1szmQ2EP+jndE3a3n9fdzjva
z5sYXN7vdwCHD1iPcA80HD7svg2vx/ow+ohj8PNM2NNJ8fl42GNJnR3s8Y6k
zp07fA/HO/5oUufBo+4Fn0+4Ht6edV94firsyaQ4ftJ5J3lNYp+kg6tMcJYR
w88n9b2EyRfDXkjqLHg57KWk5vIVa+b0VWu4ejvsraSYeM0xmHwj7PWkuH3d
MZh8M2xZUoy+Zc27TfAvgVPi8x33hen3wt5NitX3rWH1A2vY+9AaFj+yhtWP
rWHyE2uY/NQa9j6zhsXPrSd7j9zDDK/PnmD4C+fB8VdhXybF1vdh3yXF7Tdh
XyfF7bfWzOmvYb8kxeF3js3ztZ+TYvgH94LLn8J+TIrDn62Z/d/cC15/t4al
f8P+SYq3P8P+SIq/5daXel/se5Hj1MPkX86D0b+tYfI/94U93g/6eq9D3sV+
BjwXvgHMDvMEw8mU3itMpsOnUmIyk5JmvrMpaeY9l5KGsRXDt0qJiXxKMZgs
hi+kxDCeGHyuEL6UEq/UoTk7WJN9wOpKKfWF11XCr5wSq+WUNHxWUtIwVk1J
w1wtJQ2L9ZQ07DVS0jDWTEnDXOuUNLy1SUlzrrBH7gEWV00pBrerpaThePWU
NLy1C982pWe6Zvg1UnrGa6Wk4ZP42ikxuU5KNczu+uHXS4nJdVOKwWH7lDRc
Ekcz7xukVHO1545ZhM8NU4rB1Zbht0iJh03Cb5wSH5umpDlH2CP3AMPEN0qJ
281SyoPbzVPS8LlVSn3hc+uUNDyzDnmcE/RgH3C7TUp5cNshJQ2326akmfGd
wu+Y0lxuH367lOZ0h5Q099c1fJeUeCCXGPfMtc4pcdsxpV7w2in8zinxSRwN
k7uk1AtGd01Jw1L38HulxOru4XdLidU9UtJw1TP8PimdAcSph8luKeXB6J4p
aZjskVJf2Ns7JQ3brEMeZwp7ZN8wSm/y4HbflNZjXg8PG5YSh33CeqfE6v5h
+6XETC/rlONoWO3rGvg7MOyAlLjt5xis9rfOO45m7ge4Bk6O8D5g4iDH4O3Q
sENSYnVw2KCU2D3YusV75H5aOT4wJZ6HOA+eh1rD7WHuW/N9o8teh7wV3IN9
8Hs/vm1TzfSR3ivzMT1sWkqsHhN2dEqsHmsNYyeEHZ/Sd4K5Yy7bOPeolPgY
ETY8JU6Gu76d60anxPZxzoPVMe4LryeGjU2JpVPDTkmJz3FhJ6XEyXjr9s6l
fn3HqYenk50HoxOsYXKi+8LeadabeB3y2nqPo1I6d/AjU+L1dNfA8xnW8HlW
2Jkp8TnZmjmdGXZOSs9patgUP68pztvez5sYjM7wO4DJs607ugcaJs9139Z+
3rw/eD3PMVi6JOzilFi9IOz8lM4U9jgppTNoku+hq+OzUjobZrkXrF7oeti7
1H1h+6Kw2SkxPdt5e3hNYvy8yLwy17B7mevh+Yqwy1Oa8blhc1Li+KqwK1Ni
+GprGLsmbFFKPMxxrK+vLUyJ4XnuBccLwuanxPBCa/i81r3gdbE1LN0cdlNK
fF4fdl1KnCyxhqvbw25Lie3rXA9PNzgPRm+0hslb3Bf2brUe7HXI6+U9sm/m
7oWw51Pi9TbXTPC15/ye7wm7O6Uz5a6wO1Pidqk1M/pw2EMpzcTdjsHYg7yT
lBi9171g8v6w+1Ji9AFr5v0R94KDR63h7Zmwp1Ni9fGwx1Ji7wnrYd7XHSmx
/pjrYfRJ58HnU9bw+az7nux7RZ/kdcg7zP14B3D7op8X3L5kzUz8GPZDSky+
EvZySvP9qjWcvR32lt9NMn6fkEiL55fdCz5eD3stJT5ec/1U172ZEttvOA9W
33Ff+Hwv7N2UmPk07JOUWP0g7P2U+PzQeoZzqT/Hceph7yPnweLH1jD2mfvC
3OfW53sd8qZ4j8tSOl+Wea8w+YVrYPRLa7j8JuzrlJj81prZ/DXsl5SY/D7s
u5TY/c55V/l5E4PLn/wO4PBn63nugYbD39yXbwlzxyzC6O+Owc9/Yf+mxOfy
sD9TOjvY41cpnUFf+R6ucfyPlM6DP9wLPv9yPbzxh23pC8//hP2dEsd/O2+J
1yTWjNwjw45Ii1dmhPqGrx2e1oznw+fS4jUTPp3WjGbT0tzfiuFbpTW/5BLj
nrm2QlrcFtLqBa+l8MW0+CSOhsmV0uoFoyunpZ/wXtkXrFbCl9NitZqWhqvV
wq+a1rlAfJW0mKyllQej9bQ0TLZOqy/stUlLwzbrkMeZwh7ZN3O3Tfit0+KV
dahhFrm2VVpctQ2/dlrn2Zrh10iL4bXS0szo+uHXS4tnconBGNfap8Vou7R6
weS64ddJi1HiaOZ9g7R6wcGGaWl42yL85mmxunH4jdJib5O0NGcP+1o9LdaJ
Uw+jm6aVB5+bpaXhc8u0+sIn94qGY9Yhj7OMfrwDuO2Q1vOC223T0sxEv7C+
aTG5ffjt0prvHdLScNYlfOe0vg3MWiotnsmlF3zsFH7HtPjAUw+f1HVKi+2O
aeXBate0+sLnruF3SYuZ7uH3SovV3cPvlhafe6SlYZtc6uGbOPWw1y2tPFjc
My0NYz3S6gtze6elYZd1yONcYY87p3W+4NkrTO6TVg2M9kxLw+X+YfuldZb3
smY2B4QdmNZz6hPW28+rt/Myft7E4LK/3wEcHmBdcA80HB7kvnzLU14TRgc6
Bj/Dwg5Li8+DwwandXawx33TOoPw3MOKjg9K6zwY5F7wOTRsSFq8He6+8Hxo
2CFpcXyI86pekxisHpXW+QWHR1tfzftmjtKaxWPDjklrNodbw9IJYcf73V8W
dmlaTB/jXrB6XNiItFgZ4fp2rhudFrcjnQeTY9wXjk8MG5sWP6eGnZIWn+PC
TkqLt/HW7Z1L/fqOUw+XJzsPbidYw9tE94W/06w38TrktfUeR6X1+0a+bVf4
vBnlfcPwGWGnp8XqWWFnpsXqZGtmc2bYOWnN7LnWsDg1bEpa3E6z3tbXqIe9
s8NmpDXf51jD6HnuBT8Xh12UFj+XWMPcBWHnp3W+sq9JaZ09k7zvro7PSovt
We4Lnxe6fk+/W/ru7nVmp8XxbOdt4WfAc4Tby9OaCTi8MuwKv/sHwu5Pa6aZ
s6vSmvE51nB1TdiitJi/wr32cS694HZe2Ny0WJnr+r6uW5gWt/OdB5/Xui+M
Xhe2OC0ebg27JS0ml4RdnxZXN1gf4FzqBzhOPfzd6Dy4vMkazm5zXxi73XqI
17k5rXOEPS5I64xZ4L3C5R2ugeE7reHz7rClafF5jzUz+EjYw2kxd1/YvWmx
d6/zjvXzJgZ/D/odwNtD1iPdA828P+q+fBOYu+lp8fqYY/DzXNizaTH3ZNgT
af28wx7vSuscusv3MMbxx9Ni+3H3gs+nXA9vz7svPD8T9nRaHD/tvPFek9gO
3hfMwOsLrofnF62Zx1fCXk5r1l+1pu6dsLd9f+9aw8frYa+lxe0b1pN8jXr4
fCvsTa/9tjVMvudeMPNpWv9uATY+s4bVD8M+SIvPL8O+SGsuUpn4RmR0LhB/
Py3W33dfmPzI9TD3ufue73U+Tovdj503xXtcltY5ssz3c5HXpB6ev/I+YPWb
sK/T4u1ba+by17Bf0mLv+7Dv0uLyO+fB5Q+OweFPaX0/4PJn63nugWbef3Nf
OElndP8w8btjcPVf2L9psbc87M+0zqGvvW9Y4pklMmKb+B9pnQF/uBfs/uV6
+OQ/XqQvHP8T9ndaPP/tvCVekxj/bJHf5/D7HhjOZLRXZqF9+HUzmu98+FxG
nK0UfsWMzkHm7qW0eFs5oxg8k5vNiI9CRvUwzzXWgO1S+GJGPOHJg89y+FUy
YqZ1+GZGbLTJSMNnLXw1I7bJZe2J3gtswDbxSkbc4+kLk/WM6mFu1Yz6wi7r
NDJiF08eZwr32iqj8wa/QkbnDp57gNXVMurF2muHXyujedwg/PoZzemGGWm4
Jb5mRs+vXfi2Ge0dTz1MrpfRO2Cm6YGG7XUyqoHJjTLqC7e8K2Lws2X4LTJi
hX/vt1VGZwdrrpHRGYRfPaPzBs89wPam4TfJ6LzAb5zRGYBnPdil9+YZsYvf
LCOG8dTDJ2uyjykrxv7CXllRZ0SHjP59JHxuF37bjHjdPiMNqztkpGFgx4w0
vHUN3yUjPnbKKAafO4fvmBHPeGKw2jl8p4zYpa6z5+nIsCMy4naXjPrC7m7h
d82I290z0rC6R0Ya3rplpOFvz4w0XO6VkYbD7hlpeOuRkYa/vTPSsLdPRpoz
hj1yD5wdrM+eYLRnRnnwv3/Yfhkx1C+sb0ZnSu+wXhlx28ea2RwYdlBGvPV1
rORrAzJitL97wd6BYQdkxOIAa+Z9kHvBwWBr+BkWdlhG7A0JOzgjFodaJ70v
9r2S49TD4SHOg8tDreHtcPdt+P2gq16HPM61fTN6Lrdw/9lYJ6tz4Si/Vzg8
JuzojGb6WGtmfLg1sz/CGm7GhJ2QER/HOQaHo8JGZsTrSMdg7/iw0RnxdoJ1
G6/JPuB2rPvC7klhJ2bE/zhruB1vDVcnW8PZBGv4O8Uark61hrOJ1vB3mjVc
nm7d1nvkHuDwDMfgcpI1Z8OZ1vA2LWxqRoxODjsrIz6nWG/nOBomp7uG2Z0Z
dk5GTM5wDA7Ptu7oOJp5P9c1fBuYO2YRPs9zDK4uCbs4Ix4uCDs/Iz4utN7G
e+Qeujo+KyNuZzsPbi+yhs9L3Rc+L7Pew+uQ18U92Md6fm+8Sxi+3DVwe2XY
FRnN+PyweRnN5dVhV2XE6tywOb6/xWHXZsTDPMf6+9o1GXG7wL3gdVHYwoz4
vMYaJq9zLxi93hqWbs2ICVi9IWxJRqzeaA1Xd4bdkdEZsMT1MHmT82D0ZmuY
vM19Ye926yFeh7w+3iP7ZhZfDHshI17vcM0pvvZ8RhzeF3ZvRqzeHbY0I2bu
sWZeHwl7OCOe7nVspK89lBHD97sXrD4Y9kBGfD5kzew/6l7w+Zg1jD0b9kxG
fD4R9rjf8ZPWR3hfd2XE9+OuZxaech4MP20Nq8+57wTfK3qc1yHvcPfjHcDq
S35esPqyNTPxc9hPGfH5atgrGfH5mjVcvRP2dkbfBmaNWTzdufSCiTfCXs+I
jdddP811b2XE8zLnwee77guj74e9lxE/n4V9mhGTH4Z9kBEbH1mf7VzqZzpO
PQx97Dy4/MQaDj93X3j7wvoCr0PeVO/xzYzOmje9Vxj90jUw/JU1XH4b9k1G
TH5nzWz+Hvabn9MPYd/7eX3vvDl+3j9mxOUvfgdw+Kv1AvdAw+Ef7tvD67E+
jP7pGPwk+EsssuLz77C/Mjo72OPXGZ07X/seFju+PKPzYLl7wec/roc3vnX0
hef/wv7NiON/nQfDrEmM3ztxdnOWw3A6q+8lTGbDZ7JiNJeVZi7zWWnmtJCV
hquVw6+UFRPFrGIwuUL4Ulbc4onB5IrhW2XFKHVo3m2H8NtkxecqWfWF6Ur4
clasVrPSsFrLSsNePSsNi42sNKw2s9Iw2TorDZNtstKwt2pWGhZXy0pzrrBH
7oEzg/XZEwyvnlUeHK8Zfo2s2FonfLusuF07/FpZcds2K82cbhh+g6w4JJcY
s8u19bNieN2sesHleuHbZ8UhcTSzv1FWveB146w0LG0VfsuseNs0/CZZ8bdZ
Vpqzln2xb3gmTj1Mbp5VHoxukZWGya2z6gt7vB80bLMOeZxlPAOeC98AZod5
guFts3qvMLl9+O2yYnKHrDTzvWNWmnnfKSsNY7uG3yUrJjpmFYPJTuF3zoph
PDH47Bq+S1a8Uofm7GBN9gGru2XVF173CL97Vqx2y0rD555ZaRjbKysNc92z
0rDYIysNe3tnpWFsn6w0zPXMSsPbvllpzpXOWd0DLO6XVQxu97eG417W8NY/
rJ+faZ+w3lk9477WWcfRMHmAa5jdgWEHZcXkgY7B4QDrkuNo5n2Qa/geMHfM
InwOdgyuDg8blhUPQ8OGZMXHIdYp75F7WNnxg7Pi9lDnwe1h1vB5hPvC55HW
Na9D3kruwT7g9ijnwe3R1nB7jDUzPjLsuKzmcnjYsVnN6Qhr7m9s2JiseDjO
sXV97YSsuB3lXvB6fNjorPg8wRomT3QvGD3JGpYmhp2aFavjw8ZlxerJ1nA1
KeyMrM6Aca6HyQnOg9FTrGHyNPeFvdOtN/U65LX1Htn3lu5NHtye6fWY1yvC
Ls+Kw2lhU7NidXLYWVkxM8V6O8fRsDrdNfA3M+ycrLid4Risnm3d0XE0c3+u
a+DkSu8DbmeFnZcVb5eGXZIVqxeGXZAVu7Ott/EeuZ9dHD8/K54vch48X2wN
t5e5b3ffN7qb1yGvq3uwD37vx7ftfjN9lffKfDwY9kBWrM4Nm5MVq/OsYWxx
2LVZfSeYO+ZyX+denRUfC8LmZ8XJfNf3d901WbG90Hmwep37wuuSsOuzYum2
sFuz4vPGsBuy4uQm6wHOpX6g49TD083Og9FbrGHydveFvTush3od8vp5j4uy
OncWea/weqdr4Pkua/i8J+zurPi815o5fTTsET+n+8Pu8/O6z3nD/byJwehD
fgcw+bD1KPdAw+Rj7tvTz5v3B6+POwZLz4c9lxWrT4U9mdWZwh6XZnUGLfU9
jHX8iazOhifcC1afdj3sveC+sP1s2DNZMf2M8072msTg9UXXwPNL1vD8sjUz
/kbY61lx/GrYK1kx/Jo1jL0b9k5WPLzu2HRfezsrhpe5Fxy/FfZmVgy/bQ2f
77kXvL5vDUufh32WFZ8fhX2YFScfW8PV12FfZcX2B66Hp0+cB6OfWsPkF+4L
e19aX+h1yJviPbJv5i6di29LTrx+5RpmkWvJnN7zj2E/ZHWmfBf2bVbcfm/N
jP4e9ltWM/GDYwt87desGP3JvWDyl7Cfs2L0V2vm/Q/3goM/reGNv5Tuv6xY
/StseVbs/W19uff1TVasL3c9jP7jPPj81xo+Ezn1hU/uFQ3H/znvMvfjHcBt
JqfnBbfZnDQz0T78ujkxmQ+fy2m+CzlpOFs5/Eo5vZvtwm+bE8/k0gs+SuGL
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
8tp5j+ybGbwy7Iq8+Jzkmh6+dnle/EwPm5bX2TAlbHJe58tUa+byvLBz8+J5
mmOdfG1mXizOcC/4PCfs7Lw4nGnNjM9yL2b/fGvYujTskryYvzDsgrw4nG3d
wfs6Ky+GLnA9vF7kPJi82BomL3Pf7r5XdDevQ9427sc74Cy4ys8Lhq+2ZiYe
DHsgr5meGzYnrxmfZw0ni8Ou9bt5OeylvBie416wsiBsfl6szHd9f9ddkxfH
C50Hf9e5L6wuCbs+Lx5uC7s1L/5vDLshL25vsh7gXOoHOk49vN3sPPi7xRrO
bndf+LvDeqjXIa+f97gorzNlkfcKu3e6Bj7vsobJe8LuzovJe62ZzcfCHs2L
yfvD7suL3fucN9zPmxgMPxz2UF4cPmI92j3QcPi4+/KtYO6YRRh9wjH4eSHs
+bz4fDrsqbzOEfa4NK8zZqnv4UTHn8zrPHjSveDzGdfD24vuC8/PhT2bF8fP
Om+C1yT2edh2heCsIF5fcv1neV3rUNCMLwt7Iy9eXwt7Na8Zfd2a+3sv7N28
5vcNx2b42jt5cfume8Hr22Fv5cXnO9Yw+b57wegH1rO9V/YFqx+FfZgXqx9b
w9XXYV/ldQZ86HqY/MR5MPqpNUx+4b6w96X1hV6HvKneI/tm7tLxPFIF8fqV
a5hFriUL4urHsB/yOs++C/s2L4a/t2ZGfw/7LS+ef3Bsga/9mhejP7kXTP4S
9nNejP5qzbz/4V5w8Kc1vPE/pfkvL1b/ClueF3t/W1/ufX2TF+vLXQ+j/zgP
Pv+1hs9EQX3hk3tFw/F/zrvM/XgHcJsp6HnBbbYgzUysF759QUzmw+cKmu9C
QRrOVg6/UkHfBmbtlbx4Jpde8FEKXyyIDzz18EndigWxvUJBebBaDr9KQXxW
w1cKYmbV8G0KYrUevlYQn42CNGyTSz18E6ce9poF5cFi64I0jK1WUF+YW70g
DbusQx7nCntsVdD5gmevMLlGQTUwumZBGi7bhl+7oLO8XUGa2dwo/IYFPad1
w69T0PPCkwefPG9icLl+Qe8ADjcoSDPf9EDD4cYF9T3dz541YXSTgmLws034
rQvic/PwmxV0drDHtQo6g/DcAzwT37Sg8wBPL/jcoqB6eOO8oS88bxV+y4I4
xpMHw6xJDFa3L+j8gsMdCtLH8b7DHixoFncKv2NBs9mxIA1Lu4bfxe/+6LCj
CmKaXHrBaqfwOxfECp56uKSua0Hcdi4oDyZ3K6gvHO8RfveC+Nkn/N4F8bln
+G4F8bZXQRqmyaUenolTD5fdC8qD2x4FaXjrWVBf+Nu3IA23rEMeZwd77BJ2
e1i2GAwWdd5wjX3D8P5h+xXEap+w3gWx2tea2RwUNrCgmR1sDYv9w/oVxO0B
1llfox72DgobUNB8D7SG0YPdC36OCDu8IH6OtIa5Q8MOKeh8ZV+9Cjp7ennf
ZceHFsQ2fkhBfB7m+tZ+t/Ste51hBXE8zHktfgY8R7g9xjMBh8PDjvW7Pyfs
7IJmmjkbUdCMj7SGqxPDxhbE/LHutYZz6QW3o8NGFcTKKNe3d92Ygrg93nnw
eZL7wuj4sHEF8XB62GkFMTkh7OSCuDrFegPnUr+R49TD36nOg8uJ1nB2hvvC
2CTrzb0Oeet6jycUdMac4L3C5ZmugeGzrOFzatiUgvicZs0Mzgo7ryDmZoRN
L4i96c7byc+bGPzN9DuAt3OtO7sHmnk/3335JjB3BxbE6wWOwc/lYZcVxNxF
YbML+nmHPU4u+Oce38Nujl9YENsXuhd8Xux6eLvCfeH50rBLCuL4Euft5TWJ
FbwvmIHXK10Pz1dZM49zw+YUNOvzrKm7Lmyx7+96a/hYEDa/IG4XWvfyNerh
89qwa7z2YmuYXOJeMMN5cVtBbNxhDas3hd1YEJ9Lw+4qaC5eDnupoHOB+A0F
sX6D+8LkLWE3F8Tcne57iNe5tSB2b3VeP+9xUUHnyCLfz+Fek3p4vtv7gNV7
w+4piLf7rJnLx8IeLYi9B8LuL4jL+50Hlw86BocPF/T9gMtHrEe7B5p5f9x9
4eQV3z9MPOEYXL0Q9nxB7D0d9lRB59A93vdEP7MXC2Kb+JMFnQFPuhfsPuP6
U51LXzh+LuzZgnh+1nkTvCaxuf6Zke8VDL/qvTILv4b9UtB8vxH2ekGcvRf2
bkHnIHN3dUG8ve/Ymc59rSA+lrl+kq+xBmy/FfZmQTy96Tz4/DDsg4KY+SLs
84LY+NIaPj8J+7ggtj/w2j29F9iY5fhHBXH/kfvC5Keuh7mv3He21/msIHY/
c94M3+s7BZ03+LcLOnfe9j3A6tfuxdo/hH1f0Dz+EfZ7QXP6p/WVjn/n5/dT
2I/e+4+uh8nf/A4Wugcatn92DUwud995flfE4CcZ3/BEUaykw6eKOjtY89uC
ziD8NwWdN9/4HmD7n7C/Czov8H8VdAb85fVgl//55H8FsYv/tyCG/3U9fLIm
+4BdfqZgH/CcK+rnjH1K8bzCrixp3leIa6Wi2C2EzxfFbbEoDW/l8KsUxQa5
xOCSaysXxXOronrB7krhVyyKW+JoWK0U1QtWq0Vp+Fk1fJuiuK2HrxXFaqMo
DTdrhl+jKNaJUw+HzaLy4LJ1URreViuqL/ytXpSGY9Yhj/OFPbJvZnC78NsW
xSfrUMM8cq1DUfysG36dos6GtuHXLup8aVeUZi43Cr9hUTyTSwzOuLZBUSy2
L6oXfK4ffr2iOCSOZsY3LqoXs79JURq2tg6/VVHMbxZ+06I43LwozTnEvtYq
iiHi1MPrFkXlweSWRWmY3KaovrDHvaJhl3XI41yjH++As2D7op4XDO9QlGYm
BoQdWNRM7xR+x6JmvGNRGk52Db+L380xYUcXxTC59IKVTuF3LooVPPWwR13X
ojjuXFQe/O1WVF9Y3SP87kXxsE/4vYvif8/w3Yridq+iNJyTSz2sE6ce3roX
lQd/PYrScNazqL7wt29RGl5ZhzzOEvbYpagzBc9eORf2D9uvKD57WcNo37A+
RfHZz5rZHBw2qCgmDwjrXxTH/Z1X8PMmBpcH+R3A4UDrVu6BhsOD3ZdvBXPH
LMLoEMfg58iwI4ri89CwQ4o6R9hj76LOmN6+h7LjQ4s6D4a6F3we5np4O8p9
4fnwsGFFcTzMeQ2vSayN54IauD3WszIx7KWwF4ua8VFhI4vidUTY8KJm9Dhr
7u/EsLFFze9Ix9r72piiuB3tXvB6QtjxRfE5xhomT3IvGB1nDUuneV+wenLY
+KJYnWANV2eGTSrqDBjvepg8xXkweqo1TJ7uvrB3hvVmXoe8dt4j+97KvcmD
27O8HrN4RdjlRXE1PWxaUefZlLDJRTE81Xp7x9GwOMM1MHZu2MyiGD7bMZg8
x3pnx9HM+nmugYkrvQ84mOUY7F0adklR3F4YdkFRHM627uA9cj+7OH5+Ubxe
5DxYvdgaVi9z3+6+b3Q3r0NeV/eY5ef7clHzBM9Xea/Mx0NhDxbF57ywuUXN
+nxrmLsubHFR3wnmjhndz7lzimJlYdiColhZ4PoDXHdtUZwvch7cXu++sHpD
2JKi+Lk97LaiuL0p7MaiWL3Z+iDnUj/Icerh8BbnweWt1vB2h/vC353Wh3gd
8vp7j9cUddZc473C512ugdel1vB6b9g9RbF6nzVz+ljYo35OD4Td7+d1v/NG
+HkTg9GH/Q5g8hHr0e6BhsnH3Zfz92q/P3h9wjFYeiHs+aJYfTrsqaLOFPZ4
d1Hn0d2+hxMdf7Kos+FJ94LVZ1wPey+6L2w/F/ZsUUw/67wJXpNYz/gZ62r/
vAXDrxQ1c8XQA8IOLInV18NeK2rW37CGq/fC3vU7yURuuiTWyX21KG7fDFtW
FCvLXD/Dde8UxfNbzoPP990XPj8M+6Aofr4I+7woNj4O+6goVj6xnulc6s9z
nHq4/NR5cPuZNbx96b7w95X1bK9D3nTv8e2ift/Id47v2zRfY98w/E3Y10Xx
+X3Yd37fP1gzm3+G/VHUzC63hsWfw34qittfrOf42o9Fsfd72G9Fzfcf1jD6
l3vBTzKefaIkflIlaZj7N+yfos449vVtUWfPt9739Y7/XRTbf7svfP7nenjj
3dIXnlmH/6E8HOPJu9TPgOcIt9mSZgIO8+FzJb379cOvV9JMM2eFkma8VJKG
q3L4VUpinjp6wTC59ILbVuFXKIkVPPUwSt3KJXG7Ykl58FkpqS+M1sJXS+Jh
tfCrlsRkI3y9JK6aJWl4Jpd6eCZOPfy1LikPLtuUpOFs9ZL6wtgaJWn4ZB3y
OEfY40olnTF49gqXa5ZUA8NrlaRhsl34tiUxuk5JmhncOPxGJTHXPvy6JbGH
Jw9Wed7E4G+Dkt4BvG1YkmaO6YFm3jcpqe8Cz92vRfG6aUkx+OkQfpuSmNsi
/OYlfavY49ol/wxU0j3AJPHNSmIbTy/43LKkenjbtqS+8Lx1+K1K4hhPHgyz
JrH53tcv5nW7kurhefuSNPO4U/gdS5r1jiVp6nYPv1tJ97dHSRo+OoXfuSRu
O5ekYYVr1MPnruF3KWlteqBhsltJvWCGs3Ufs7FvSRpWu4ffqyQ+e4Xt7/k7
Juzoks4F4nuWxDqevjDZo6R6mNuvpL6wyzp7l8QunjzOD/bYtaRzBN+lJHb3
dz089/Y+YLVvWJ+SeOtnzVwODhtUEnsHhPUvicv+zoPLAx2Dw4NK+n7A5UDr
Vu6BZt4Pdl84Odb3DxNDHIOrI8OOKIm9Q8MOKekc6uN9t/EzO6oktokPLekM
GOpesHuY61s7l75wfHjYsJJ4Hua8htckxs+ssPSKmR7uvTILM8POKWm+R4Yd
VxJnJ4aNLekcZO52KIm3kxxb07kjSuJjlOvX8DXWgO3jw0aXxNNo58Hn+LBx
JTFzethpJbFxhjV8nhI2oSS2x3ltvm3sBTY2dvzkkrg/2X1h8lTXw9wk993c
60wsid2Jzmvvex1T0nmDP6Gkc+cE3wOsnulerD0tbGpJ83h+2KyS5vQC6+0c
n1LS85sRNt3PcbrrYfJcv4Mu7nFeSWyf7RqYvNB9O/pdEYOfy8MuK4kV/jnT
FSWdHaw5uaQzCH9WSefNWb4H2L447KKSzgv87JLOgNleby/3vrQkdvGXlMTw
Ja7v4TXZB393Bv/tLv+NLzzPKelnslGt4tsT9nAr8Tk/bF5Jc7/AGsauD7vO
7+flsJdK4pvcuSUxvChsYUncLHT9ga5bXBLD1zgPVpe4L7zeGHZDSWzcEXZ7
SXzeHHZTSYzdYj3QudQPdpx6WLzVeTB6mzXM3em+8HaX9aH/a+q947+e/v//
FtHrucfrOV5WJKlssiI7RKKkQckqRYOGoqG9EFFRsvdORtlbNtkKKSujZI/4
3a/f2+19+fz+uF/uj/vjnHM/53HO/Xoe5zGej6frIV93t/GOkLpEzBMhAxKa
e+5wu+F5aciSGs0jT4Q8XiNWn7RNPL4Y8kKN4vQl2zD3dMhTNeLyGdsDvY/y
8Pd8yHM1iukXbBP7L9sXzLwZ8kaN2HjLNvy9GvJKjeYq2vVYjeahx9zukU5f
VqM5Ypn9wuRrLj/OY4vf0a7n9Rqx+7rz9XMf0I/MBctrFBOw917Iux7730J+
rVFcfxDyfo3i/UPbsPJZyKc14v9d+5rkvPiC0Y9DPqoRNx+5/CUut7JGrH7i
fLD6uf3C6+qQL2rExNqQb2vE6pcha2rE0le2L3feVTWaI9a4PMx97Xyw+I1t
mPvOfmHxe9vzXA/5ZrqNK2o0r6xwW2HyB5eB0R9tw+RPIetrxOgG28TgXyF/
1oi5X0J+rhF7Pzvfze5v0uDvd48BvP1h+3b7wCbe/7Zf5n3i7tka8fqP0+Cn
UXDQMCHm/gv5t0bXcrRxXY3mtnU+hnucvrFGbG+0L/isl1B5eNskIb/w3CB0
/YQ4RpMPhqmTNN4j57033ncb4jbCDzw3jvRNE4rHJqE3TyjWaxKyyZsPnUvo
+AoJ2fCRDJ1IiNtUQjassI/y8JkNnUmoPnxgw2QxIV8ws0VCcwZsbJmQDavl
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
kdT8MsLHAMdT7AsWZ4bMSCrurgyZnVRsXmV7P6dPT4rVS0MuCWlrTXk4vMJj
cIh9YB/o8aEMHM6xX84NxN3JSTFzbciCpPi4LmRhUvMFdU5Lal5BT01qfpnq
Y4Dnq0PmJTVHoOcmxf1c19fBvucnxSv6mqS4vcblj3WdtKPG7YIZ2L3ebYLn
G5OKIeLx5pCbkuLzFtuUuyfkbh/fvbbh47aQW5Pi9nbbJ3of5eHzrpA7Xffd
tmHyPvuCGeLmoaTYeMQ2rC4KeSApPpeGLEkqRt4NWZ7UvED6/Umxfr/9wuSD
Lg9zj9rvGa5ncVLsLna+7m7jHUnNI3f4ePq5TsrD82NuB/PBEyGPJzXHPWmb
WHwp5MWkGHs65Kmk2H7K+WCS5yTPJMXk80k9O4G9F2wPsw9sYvxl+4W993z8
cLDMabD0dshbSXH4WsirSc1Dj7vd491n7yQ1R5D+SlJsvWJfcPy6y1/svPiF
3TdD3kiK4Tecb6zrfNP92zgl/uH5fbeVWPgt5NekYvyjkA+TYuizkE+TmgeJ
O2KR+e5zp01x3g9Cvi6rLMxM9j7quC/2Tw45KaRYiXk8pGtZrH4RsiopHr4N
+SYpPtbahtsvQ9Ykxfkq102MMIc1Smm+IH11UnPAavuFw69cHv6+s995rufr
pHj92vku9bGuZFyijSuSmmvWRls/SWrOgenv7QsmfwpZn1Q8/hnyR1Jx+pft
652+zv33c8gG9+MGl4fJ3z0Gt9sHNmz/4jIw+bf93uKxIg1+GkQf1E+JFfqj
YUpzB3X+mNQcg/4hqbnmBx8DbP8bsjGp+QL9T1JzwD+uD3bxXS8ldtH/JcXw
fy4Pn9RJO473swqeacDkZinF3GEhs0IuSynWa0I3SYmrfOhcSm3aN/Q+KTFW
SCkNnsm7eUqsJFIqD/fsow64TYVOpsQ5mnwwWhu6mBIPW4beIiU+tkrJhqtK
6HJKPJOXurmu49zDOQeGSS+lxDkav3BZTak8jG2dkl/4pJ66lDhGk495hWPN
pjQO+6V0zMw17MukxOs2KfmCz+1DN0sp7ncK3TolDnZOySbWd0nJZt4h73Yp
sdc8pfKwuENKNtzio1VIt7L2wzC8tYntvVLiZO+UbGKdMcFmfsL3tinNPeim
Kc1BaNoNb7uH3i0lLtG7psQlmrbCH/XsmRJ/6D1S4hBNeebjdErjSiy3Db2/
++iUkJPdj71sw1O70AemxN4RoQ9PKfYpR1/DT/uU0mCPvAekxNhBKZWHV/ZR
H5wdEvrglHhDkw8+jgp9ZEqx3ynkuJT4O942fBwTukNKLJGXurnXQEztb35I
Pzol/tD4hbNjUyrPPHeC/TZwPR1T4rKj8zFncKxwxtyBPjSlOQXNMTDvd7Yv
+OkWclJKsd4n5NSUYv80202c3jUlnnqEdE+Jq+4uTyz39hjk7aO3x6yny8DJ
6fbL/ErctUyJvf4hZ6cU6+eEDEiJaeo8MSW20V1Smke6+Bjg7ayQM1PiEn1G
Slye4fq2sO9+KfGH7psSh31dfivXSTuY92nXjiHLg4t3QlqkFNPnun2wdF7I
kJR4GxUyMqWYvtA2MX6R7WbOOzjkiIrKwuCRsd0+pHtZDOPjAtc9LGRoSrxN
CBmfEn8TbTNfTLJNXE8Jmey+uT7kOvfZDbbhaWzImJS4Qo9OicvRbmsb13Nx
Slyix6XE5TiXb+02jkhpDNHDPZbD3e793BbaB0szQqanFPezQ65IiYMrbR/o
9GkpsXVJyMyUGJvp8sT15SmdP46wD2xi+lKXgZmr7JfYudHHD4cLQuanFPcL
Q65NiW/q5H/zOrvPSGvrffQp7M0LmZsSo+g5KTE6x/UdZ9/XpMQi+uqUmLza
5Y93nbQDFi9zu+nL50OeSyluXgx5ISX27gm5O6W5ltgZlBI/9zqNGL8/5L6U
WLwl5OaUeL3Jx9/N+7CZK28PuS0lJm91GWL/kZCHU4rvR20T70tsn+56qHtb
t2VgSvP9QOeFpwdDFqXEFfqBlLh8wG3t73oeSolL9OKUuFzs8szjd7itp7oP
7kppTkHfmdJcc6fzEbsvh7yUUiwvs02Mv2J7YnD2VEpM/Ri8PZESh8TssyHP
pMTqSx6DER4T0oY5/emUYvrtkLdS4vUFjx/x/o7TJjr9TY/b4yGPuc/QS91n
S92/zA1POB/MvR7yWkrMoV9NiXn8vZESo28431inc5zE63K3g7h+L6X/g4St
923D0ge2YetD2/DzkW3i8mPbxPeqkM9TitlPnAZ7K0NWpMTkCqfB82chn6bE
4ee2N0SfnxZyclncfGG/sLEmZHVKrHxpG4a+sg1bX9uGn29sw9O3tuF2rW04
/s42c9/3tpkLfrB9hdvIMcx1/bQJZn50PrhZH7IupVj7LeTXlPj5mWNKKUZ/
sU18/xPyd0px+avT7vO+v1KK39/tC4b/DPkjJa7+sg0rG+0Lhv61vXPEcKO0
YgZW6sX2fykxVD8tG55/crth6T+Xh7kGaeWD7YZp2b1iPDZJKxZ/ju2ZIb3L
Yp66yHeT+4B+ORk75MaQi6I9F4Y0TouPJqE3T4uZmrRsGEqkZcNJMi2bmC2E
zqfFUCqtNPjLhE6nxSGaNBjOhc6mFeuUw4ZJ6twsLVaKafmFj1Lo2rS4Kadl
w2UlLRtWq2nZMFOXlg1DW6Rlw8+Wadnws1VaNvxsnZYNP9ukZTPv0EaOAZaa
ppUGS9umZcPPdmnZsNEi9A5pMbR96GZpxWXztGzilHRseNoxrTJwslPo1mmx
1DKtNOK4VVo2cU06NiztnFaZux13v5urXdJKY4z3Dt0mLZZ2D71bWiztkZYN
57SRY4A90ndNi7E908oHY3ulZRM7+6Tll7jcNy0bxqiHfPCMD9rBvMa4MZYw
tn/o/dJi6YDQbdPi5JDQB6fFUrvQB6Z1PAelZRP7R4Zun9axkpc0eGDfEWkx
d2havuDt8NCHpcUb6dhwdVRavuDnaNvEXeeQE+ij4KBDWrwcHdtHhZxeVkyf
FNI1Ld46uPx7kfZuyHFp8XN8SKe0mOlivzBzou3NXA/5mEto46GOicEhg9Li
qqvLbO99A9Ni5ZS02CUue4R0TytOe9qGgdNDTkuLq5OdVva+Pmlx1cu+GJ9T
Q3qnxVUf2/Bzhn3Bz5m2ifVzQgakxU/fkLPS4qef7bTb1S0t3s5yebg62/lg
qb9t4u9c+23mY8Vu6nrIl7I/xgCGhri/4Oc824zl7JAr0mJmaMj5aTEzzDZx
f1HIhWnN68Qasbij8+ILrkaEDE+LueEuv5vLjUqLsQucD05G2y8MjA0ZY79T
QianxczFIePSYma87T2dl/JtnE55OJkYMiEtbibZpr1T7Rc2ptlu63rIt6vb
ODItDke6rTAz3WVgaIZtYvDSkEvS4uQy2wMj9uekFc9wdnnIrLR4muV8R7q/
SYOHKz0GZ5a1DSd7hp/fwr4qrbifFzI3rXNtWx8fTFztNOL4hpDr02JgQcj8
tDihjTPT4nymj6GL069Ji7dr7AuGrnV5GLjRfomj60IWphVPC52vu+sk7dVs
cJULznLi5Oa0zpdwcmvILWlxcpttuLndNpzdYZv4vj/kvrRYutNp8HB3yF1p
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
7t9xTcU1Fmx85rYyBg1ycW7MiYcvQlZlFZffhnyT1fxO3N2VVcyuddoC5/08
KwZWu/x876MOWPkyZE1WrKxxPuL7h5Dvs4rHX0J+zipGf7VNfetD1mXF0neu
u6/T7rSQ/mNWnPxov7T3J5cnVn6z33tdz4as+NngfDf5WL/Oik/0V1nx/JWP
gbj73b5g45+Qv7OK2U2i/xrlxMamOdkPO/2vrGL/35CNWTGw0eWJ74Y5jQHx
jg/sYWXlX5oVG41z8rsy9q8IqZdTvKZCJ3OKV577pXPimDr/zIpn9B9ZMfSH
jwFOmkTezXNiCL1ZTiyhqQ9m8J3IKU7RNTnFK5rycEOdtGNjIebNYsyXRTGT
y+l5JJwUQudz4qaYkw0ztTnZcFLKySZetwq9ZU5xX84pDSaqoSs5MYEmjVjf
InRdTrFPOewR0U+Hhf4vKw62zskv3DQNvU1OzG2bkw232+Vkw0aznGziePuc
bOK6eU42sb9DTjZx3yInm/jeMSebeG+Zkw23tJFjgFvqp03EVquc8hF3O4Vu
nVMc7xF695x42yX0zjkxsGtONrG8b+h9cmKJvLvlFNfs2zsnJvbMyRc8tAm9
V05xTzo2vO2Xky842T8nmxg9JPTBOcXNAaHb5hRHB+Zkww3tot2wQTrlibt2
OeUjHg/KySb2D83JLzHOGGHDCvWQD+boA/plLv3OOBA/MaY3how0A0eGtM9p
/jrKNiwdbRuWOtgmXk8IOT4nzo5xGlx1DDk2J26PdRocdAo5Lic+jrc9Kuq+
IOSInDjobL+wcmJIl5x46GobPk6yDaPdbMNGd9uw0sM2nPS0DScn24aTU2zD
SS/bjd1GjgFOejsNNk61DSt9bMPAWSFn5hSPp4eclhMzZ9je0unYxGhfl4GH
ASH9c4rffk6Dn7Ntb+t0bJg5x2WYp4k7YhF+znUacTMsZGhOzAwOGZQTM0Ns
V91GjmEHpw/MiZnznI9YOd828TjcfuFkhO3Wrod8ze2DdiQ8bowl/IwMuSAn
Zi5kzHPiaVzI2JyOY3TIRTnxM8Y2sT45ZFJObI112gHeNzEnxi62LziZEDI+
J24m2oaTKfYFD1NtE9+zQi7LiZ/pIdNy4meGbWL3ypDZOfE0zeU3rygPvBG7
l4ZckhMnl9svnFxhu73rId9+biPtJi7uCbk7J35mu8wZ3ndXTjxcE3J1TrEJ
w3Ny4meebeL++pDrcmLraqed5H0LPR7z7QuWrg1ZkBNLC23DzA32BTM32iZW
7gi5PSdmbg65KSdmbrHd0e26KifGbnJ5+LnV+eDnNtvE4J32e7qPFftU10O+
Y+2PMYCZe91fcHKfbcbjrZA3c+LkgZD7c+JmkW1ieknIozkxQ6wRi/2cF1/w
szjkwZwYe9DlB7vcIznF90POBxtL7RcOHg95zL6fD3kuJ06eDHkiJwaeDnkq
J2Yec/lhTqc8rDzjfHDyrG14eMF+YeBF2xe6HvINchsfzonFh91WuHnJZeDk
Zduw8WrIKzmx8prtEyO2L4o5eXlOzLwR8npOzL3ufFPc36TBxNseA5h5x3aX
irbhZGz4G827kjmdV0f5WGHm/ZD3PM6fhqzMiZ+PQj7MiRXauCwnZpb5GC5z
+gc5cfWBfcHbxy5PPH5mv7C1IuSTnBj7xPmudJ2kcU3COYNzCPysyul8CTOr
Q77IiaE1tuHnS9vw85VtePgh5Puc2PraaXD1bcg3OXH5jdPg5LuQtTlx871t
xqOQjzblxc+P9gsb60PW5cTKT7ZhaYNtWPrZNmz9Ypt55VfbsPSbbVj63TY8
/GEbPv60fYPbyDHc6vppE4z95Xxw80/I3zlxUz/aXi+vWPw3ZGNOsfmfbXjY
LNIb5xW/5CUNJjaN7U3yYqxBXr7gplHohnkxQzo2zGyely+YaZKXTaxkQ2fy
YiURuiYvlpJ52YvdLtoNS6RTHsZSeeWDn3ReNjGYy8svscn4YMMV9ZBvkfuA
frnasUM8wU8xr3GFn1Lo2rx4Kudlw1IlLxuWqnnZxHfz0NvnxVZdXmm3BVsT
eMcltseUtR9+2wWDB4ZslxdjlGuWF8fUSTvgZoe8/MLMjqFb5MVGy7xsWGmV
lw0nrfOy4WanvGwY2zkvG+Z2ycuGn13zsjn+3fKy6Y/d87InRpvHhWybF1d7
5JUGV3vmZcPVXnnZxOB+offNi5+9Q7fJi6d98rKJUdKxYWn/vMoQs+1CH5gX
Z23zSoOrA/KyiWnSseHqoLzKMF8Td8QijB2cVxpxf1ToI/Pi6rDQh+bF1eF5
2fBPGzkGOCT9kLx4OyKvfPDWPi+buDk6L7/EUYe8bDikHvLBNj5oB7F7TF75
iOVj87JhrGNeNm3vHHJCXpx1CjkuL66Ot03c9wjp7uM8wWmbe1+3vHjrYl9w
e1JI17zY62YbhnraF4ydbBtWTg85LS+WeoWckhczvW3DQN+Qs/Ji7xSXh61T
nQ/2+tiGpTPsl5g+03bO9ZCPeeJEt7vWvskHY/1cH/E6NmRMSPPg5uKIyXPy
Yqx/yNl5sTXA9mdlbW8RMim2x/PsnzZF2S9jewhjE9ureM7PscX2SSGDYnt4
6NWxf3BsnxfbQ3g2lBcn49wOuB0acn5evF0UcmFerI7AR17sXmC74jZyPNs7
fVhePI90PngeZRtuR9vvTj5u7Jauh3zN7IN2sK7nnDffTF/sthIfN4bckBer
E0Mm5MXqJNswNjNkRl7zO3FHXO7uvOPz4mNKyOS8OJns8vu53PS82J7qfLB6
if3C62Uhl+bF0pyQq/Li8/KQWXlxcoXtA5yX8u2cTnl4mu18MHqlbZica7+w
N8/2Ya6HfPu6jdPymnemua3werXLwPM1tuHz2pAFefG50DYs3RZya179dH3I
de6v65yvk/ubNBi9yWMAkzfbJtZvsQ2Tt9vvbu5vxg9e73AaLD0Qcn9erN4d
cldecwptnJ/XHDTfx9DD6XfmNTfcaV+weo/Lw94i+4Xt+0LuzYvpe52vt+sk
DV4fdBl4Xmwbnh+yTYwvDVmSF8ePhDycF8OP2oaxp0OeyouHJU4b6H1P5sXw
Y/Y1Jvh7PC/ep8b2lJAn8uLzGfuC52dtw9KykJfz4vP5kOfy4uQF23D1eshr
ebH9nMvD04vOB6Mv2YbJV+wX9l61PcL1kI/55nG3m7j7KuTLvHh9zWWu9L41
HuflIe/kNae8FfJmXty+bZsY/Sjkw7xi4h2nTfG+D/Ji9F37gsn3Q97Li9EP
bBPvH9sXHHxiG96+CFmVF6srQ1bkxd6ntse4XW/kxfoKl4fRz5wPPj+3DZ+r
7Xe2jxV7lush32j7Ywzg9mv3F9x+Y5uY2LwQ566CmFwb8m1e8f2dbTjbEPKT
x6YaeSsF8fytfcHHDyHf58XH9y5/vcutz4vtH50PVn+2X/j8NeSXvJjZGPJP
Xqz+EfJ7Xnz+afsm56X8rU7/LS/2/nI+WPzbNoz9a78w95/tu1wP+a5zG9fl
Nb+sc1thsl5BZWC0fkE2TDYK3bAgJjcpyCY2k6ETBTHZOPSmBbGLJh980t+k
wWWTgsYADmsKsolvfGDDYaogv5xLiDtiEYbTBaXBTyl0bUF85kJnC5pHaGOD
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
Ot8p5hvFt5QU38T1bSXFLjF7b0l8whbPe84POa+oZ1boIUU9u0IPLupZF3pQ
yOkhi30/bivvGxhyZsjDIQ+FnGFNvluKupfNvXCek50bck5Rzw4HhPQv6tnU
2JAxRT2jQo8u6pkW+qKinlkNDxlW1DMr9NCinr8NtN86+8bvdk7n2FrZx4Ve
N3HfnHvttxV1//1337fjnu93vn+HXut7fNxH/sH3/NbZZr213vYCp1P+hqLu
R3P/+8ai7olv8FrtT9d3U1HPA0i72X3zi6///nb7uL/5j23uXW60zf3Qel63
cp8UzXXGWSGPeAxu9THR7/c4faPXiT+53S3dH6OKesY5wv3Ls17umXKflWex
3GPlXmzKmnu0SWvu3fLMto/zLSvqOpDrQp7dEivcu81ak6/othIvPPvkvvW4
kM7uC/qmo/uX/j7e/Ui/drLmOE5wXtK6eiw5bp5Zct+Xe+Jdioo//J7odOwd
fdwji3qGTFuI2YSPiePnOflJ9s2z5b5uN8+h+9nmufTZtnmm3d82z9S7uTzP
cS9w/7Zwndh510kf8Ry+u8s0cltpexOPA/fLd3E/wcnm3keZBu47+qO+NX22
iduOr4b2R756Tu/k9t3uvuMeen1fv3IfvaGvn3hmwHU119Pc619tm+cAPB/i
WdOV1jwjmm1Nvlkux/U69865fubal3vqK21P9z6u0bnv/qnTLnM5rtfh+6mQ
J4viHP1EUayjHy+Kb+6580yD+YN7rNxzvdQ+PnXfveU0no187WNgDnvadRCP
PBvjWRlxxPMwnnfdUdL1858ht1szn94V8k9J1813l7TOwL7H8yv2nU6n/H0l
rWOYf+8v6XyJPc510r5bPU8zd3M//duQb2oV08vdPp5vvOf2TXP/cf9gqjX3
M6ZYc4/5aq9t8TXX/rgnN9npPAPk2UkDXysPcL8+VlRco5e679O+xqXvU75+
Zb7f1NfNzPub+DqbOYlreO5h0L8ZXys/WtS9DNKYsxr7+ps6k77mfrGo+0Fc
B79c1LzC/SfOPY18rf9sUdfSXFs/U5TmmpvxRFPfc0Vdq5PvpaJ84PeFonxz
zf18UZp8Z/tYl/i4E77ux27iezDMH9zT4bnZSGvmP86f1Ee7hljTrsHWtOtC
xynlmUfoC/qpn+t81PXX+N7GBfZNHzBHcwz0Dc8POUfxbHOeNc8251oT36PN
AWwMczmOe4T94Ytz5PNu91CnY/8RdR9V0v3fmdxDrWot+GfsP7qkNNaM/Icj
/6l4Lt/Utc0294P5f99DvTbj/3jeL+u/efhfnsH83q6i/1HAJp3/NHmwrDUr
69U3Qp4r67u9PGN4tqx7p/O9lmINxD30e8v63gNrp/u8fmINvMjr4GdcnrIv
uh3USd6ny/rvZHzf7zy0mXZy/5b6eS7BvWK+y8L3WQ7P6bf43Pfi97w7cA/e
v0vMV/S7WX4ze5J9sx6knttt7+jnPPwu+NvQU70GfKGsZz6TnI/8rCNfLesa
ieujSkXreNbCi91H9M9LZR0b68Any/I1yf33svP0dR6OHX+veC3JNQE++f+4
c1wX+6d6ncralP8uY13OWpxrtAedl/8pY/3N2ptvxI6s/N83ikf6O8XoC7yf
Mnx/mes74mK0/+OMa8RhFX3XGSEPbRjq/eQfW9HvwfgtGOUucll+p3l+RX3O
71zG+DdiX5W1n998Tg49qaL/VON7tqP8TdvJ9sN1EL5I5/+gRjoP7e/mtTrX
QfxOlN+I8vuzbqFH+LejxMLjZf3Oe5LHkd+dEheMB7FBXHDvk99U84ydaw+u
K/gOw2NlfYuB8reW9dtVGFjssRvgPv1/33wu674t92yvC3m0rGuW4W7PNnn9
hnW4t1uGbhXSNLa/cPwRe3wnZYTjmeudR8q65uE+7JKy0rh24bvYXNtwvch1
2lBfexETXH9VK4oNbL4DxnfxuG7iG6r/lvXdYL6r/U9Z10p/hf67rOv3PbP6
7iTfnOxb0TdX23hfPY4nq+/rYbM9wv6HWzdyXTWhm1R0LHxDrHFF7zCQvqnz
kMY3YjjuGd6ead3E29vyrMn1NqvIL+VITzgP88BmFX+jKXQD57857CQxVtZv
kJs7Vum/rSrqg0tD6irqP/4TkL6j3/hv94KfzTGfUHbLvPYVvf8rzy/Eef2K
6qb/yLuD5x/mp2ZuM3GUqiiWmG8yFX2PgFjIOR5o+7ZuP/NB04rmV+Jx+4qO
iTjdrqLrZK5nt6koLuAK9vgN5SYeC/wwt/MfOfxP1YSKuKVt4yqKfX4/ze+1
xzjOmVO43ucZ3xYV9Q/9dIt5YI7lup9ng/+7l0A69wAYW2KX8T27Iob4pgLn
A/jgGz/jK7rfAeO0Bz75PfhZFTE8wexxrHz7ZHpF7PKb1Me8n3TOM7CHb/Zd
6Pw9I38Pxy48008X+F7CdWaT63auz7k2/3/X6GXdn4Grq80FnPMcmHn+rbLm
WOZa5m2eaTO3t/E5k/9p4R4Y99Sa+n4A9xa4L8F5jOfYnMsYq4fM8aNmm/bQ
Nzz34RtjjHOy8n/HdJOPEf5v9PxweEX3cmhDd48/cyMxQ7wwV9P//St6BtTO
23zn4tKI3QGhL0mq7RwDz/37e3uFj2tv79/PczTzRg/P03xHea+K/reM5+/c
G9mjon5lnh7pfPxXIGncM+H/zcjP+W4P7+f5O/PDKRV9Z5B7O6d4rvifzX2e
od5mP/83eLTL4o92MCZryppb4Yh6j3Ie5r2ejgf+g5r/oj4/pfUS99p4Xk98
8I1cvgP6eeQ7rPJ/c8ZhZp81CGuRdz3+jAH936+iuZLynJP432v+85p7buQ5
o6xj3c3toS/pU+5B7VrRvTxY434bbWL99o63adtS/x/qEt/329n5d3ZZ7gGO
8hgRA+zD7//uD1Iv/9XY3cdPG+mLHh5HYqe728O5nXM/53fKH2X/3C9mP//v
wBqOe3r8Twr/AdHB+zlnHO858IyK8vC+CrqD86OPdf6uFX1HiTkc7jlvcx6E
GfzwXXG+Bd7ZPrnPh/2/9BO8n/J8R4lzCP7wy3qwi/0zX73jPGxz3D0dzx3d
HtrJ8R3ntrHvjP9f+0/3NuN5mtnjOxW93Wba3svb3Gc9zeMOAz1c1yqX4Tf3
3CukLjglbvtUtEZgPYBP8tIG2kffD3IdrHOYH7u5LtYXbLOuYPy7Owb4tkYf
s4BfbH6X/6W32d/V5zjuixKz7c3FL45z1tuXxXXG6xXN8byzwjMYnnHNiv1v
VHQe+Jd3earqE96z4Tkizx5fivQHY/9PZb3bxPNCnh/ubE2+cT4PcQ7d3r55
nnZVlHvPfbhNbK9yfG5Z0vNRnp1+Hfveq+qcyTsfg5xWV9IzV57BNrM/nnNm
I++Hniu2sA/y8Y7IYJefVtH5kfPRxRWdT2kb8yXXU1xDwTrM7+U5A5s1Euck
5lzm27bOQzosU3ZlUnqAt5mLyc/5kfMx9bI+Ic+5ros20D9894TrM/5vkv+4
4z8i2eYajWu7c13PQOfjXM/cPsj5Of+zDmAf6wP88T0G0gc7/3meu4iB7tFX
1arOd7xfw/M2ngMfYy46eJ4403MFMXiW45B1Pet4zu+s/flOBOt/xprzEOuN
GRWd1//3/Qj0k94/1f3P+aqd+5PzP9+IYQ2APqSi969WeT/b9HdbjwvPE9hm
Xu/vfj7Q/g6yT9rBPr7dQt4DXHY7xwvHTFumuT20d4a3WbOwdmHcOF7+c53/
Z+b/09lmTc54TnD+qS7LcbL2YQ3ENVpT9yvP8LexJhbHul76j+uh8e5PYuFi
x+QU9yF9Qv9Md10Xuf8vtExy25jz+/oYhziu6IPz7HOIj2OS6ypVtNZlnoBh
rnW5zuUauVzR9Si/nchEe9Mhm9bFeYn3SPAXsfNzVdex9erEMywzT+zvuYLf
YVAuVdJ7gvXrdF4dH9v/VTWP8m7gSX4/8Jfwe3NVczvvD/5e0TuE/BZi8/Cx
Wcjq2L+mqvUT78I3pl0l/XaBdGzeLd0kdKOSfsNB/Unmkyj3TVXrct4fpxz5
+G0H6YmSmJhkLnjfvRL7ytx/rGquZJ78PfRvVa2d+V1HtqQ+4nceuZJs3rnP
l2Tznt2fftfufdpQUfzOj+0FVZ33eB+fekolvRf5l9+N5L38YuwrhDSM/mtU
p2ubVFXzMv28sar323i3jff0qyW1e9PY93BV8cjvAPBBm3jvn3pqQzZE+qsV
3YvgvVr6rCHHy5xX1bloPXN8VTGxZVXvxfJMmHtSPOPnWWiL2L9Xnda4vGvI
+yW8W3G49VW+t0Ve3gU4zPt4F4N3M9vUaR18cEnvavDuRqKq90Tph+9hok7X
8QeU9J4H74bcxnjWaU33dOTJ1mktVy/Sjg/pFHJgSe+IUKa966d921f1zhbX
Mwe5Tt4r+S/8/FjV/a3WkX5FVf1zGzzV+RqjVr55D3It41XRNd63jDXtCNlY
q3ckjy3pNz1NSorjRpHnyKqu7fktEXFXU9Jvg9Dk26Gq97S4fji9pHdKeMek
ndvI8fwadTSv0/2MDbG9fZ2ulw4p6V0W+vHv2N+qTvdC9qzqvWeuTTcP3aRO
15/3hrSo0/XroR4TyvMuKe868G4OvwXhvEts8R53/ZL6mN/kcM7mfMtvcjhP
Y/9Qq35nrH6sVbux19Wqr7H57Q7l8Pt9rfK2DVlfqzgg3z288wYzzAmcA6u6
x7FVnd7l5fqN98L/Dvkr5JPYt66iewWnVhWvxCrvtXOPlXdsi1W9e826i3fT
G5R0PHfYB/dcb7emDO+e/+M6KnV6z5XrZ95hob37l1SuQ0n3akdH+oVV3SPk
fe1OVd0PpfwxJeW7vKrYIq5+rhUP9D31EC/kWxx5llV0H4jnCdSzX8g7Fb0v
y/r9p1qNN/11RFWxS9z+EPrjqu7L7FzV3Mq8unPUOcFz71dVcQ7jG2pVP754
bkE9+5b07ALN+8S8c8/cQH/NoV+rurauDZ+lOl2b8R4/4834817/OtvLIu+K
iq6h+X0A403/jYz9I6q6b8rvDNa7zAL7IN+nnCeruq/Kb11475n3o2+ypv8+
izyvV3Wfi3nilormiht577uqeIDd5lXxy+8WfnJ902LfuKru+14T+uqq1lM3
2jd9c4M1ZfhdwkbHBMzdWRF3l4Y+vKp3CQ6pik/Y5Jx2i89rcLZrVazB7t3O
w28XmFN4t/rB2LdPVfej+X0DnJEGxw9UxPIqzr8V3T/4J/QPYddyXqtqfmFu
4Tcwv7m/1sW+elWd03mH/aGKrj1vNRPkm1XRO+7sZ/7717F0j9vFMR9V1XmF
cwrP5Xi/lXd09vI8wXt/vHc+1XPHI5H3qZANkWd26Oerus5+hrWD10hPx/az
9Bfnqare4+fahHNC66rOCx9UFHPEG9cNO9VpvfEiccFaIbZTzHNV3ZP7AT7L
WmNzr4/5g3v+7Fvr/dwfYXumNWmMHevjH8taL3NO27Gq8xrp3zvPcteBH3x/
a//8JoFrI97HbGXN+5hLw8eSqu5BvlTVbxu4r8LvN3i3cpzP2bz3yXugKyti
Bl6Ycwc47duK1hCsH2qibYk63Su8KuSFqu558T4+74nyHiXn9st9/nqT9V1V
zx9aul3ke6Kq6z2u9Xi/n3cfuQ5sYR/Yj1Y1lozjKxXNTcxLi0K/GPb6stY1
27ltT7gPWU+Stq6sfuW8yPUw1xH/u149z88O2Oa6tY/z/O/+OdcArP8H+1qX
ctxn5ZzP/czDvM15n+t+7gdt8HX3atfFOvIL+4Grkte9rH/hhvu93C/nXjn3
Bv/0dj/fP//T+wf6moTr9d72yXU6zz04BtbtP/p4OfZPymoPa3Lue3GPa4XT
f3IerseJfVjo5Pto3EMjptme4+u7P7xNXsps6rzkI5b+8DZ5uM9IPfyPwbvO
39j/Nc2xcA/z07LuzZGX7+lxP4zrU/ryM/ctcf+p89B+8nOPjpiHK/ptuhmb
ltQa6CuP3Z6eD3j/96OIi7UV3bdm3X1SSFdrnvHzzlS3kp79Y0+O/PMrui/b
vaTn+qSdWtK7s/d77cV7q7yveprXR7yT28eafL2dl3cBOjov78A+V9FzVu6Z
cT4c73NiV7eF9wKui30LqxpD1unbeq3O+SRZp3MKa0zeo+X93E7WtOmEkt7T
Je1E++MdsUei3l+ruufey+261+sG3tO9xud43rGe7rXFTNusNS6xva/TeT+X
32OxHmIttI/3Mf+yFj6nKi54ntzAx8v6Y4Hru7yiNQ3rmVPcFt6nYA11o8+b
n4VeX9GzmR4lvYfBePQs6T0MbNYr19rvse5j7JPtj3xcc/B+PL8t43y7uqJz
7sDYPreq53asLTq7/66P9Lerus++pqLrJfqfe0VvVHW/qInbQbveYu6v6pnJ
T8wJVT1DqnE7yHc+Y1fVM+r6rocx5Hd+r3qt2NixSGyuiH0rq3r+xPVld6dt
7jqx3430ryp6RtTI492lpLVSFx/PJo73/6URC7y7zdr/FLeP31rxWymefacd
68Qv14Vnu+/4rRrv2XPO4LdrE2wzzrt5rFMu18t13+xY5PeBE12G60B++8e1
RdJ5acf/+71UVc8yuF480/lqPW78RpC17dsVrW9z9gF/WWv4m8l1RVXPcfl9
W08fV8bpHBvv7vCOML+B+f8AU9WnHw==
          "]], PolygonBox[CompressedData["
1:eJwtl3f011Mcxj/tpPrVr+He+5NK0iCSElnJOEQZOWYdmoqD6Jxs2UpJm0pb
Q5uG0tQ2KikiUkRpoCENiddznu8fz7nPc+/93u/nc9/zU73do7c9UjjLsi2g
KLikIMtCyrJO5bKsY8yys+DfgWLwM8H78MrsqQv/JWTZafDGzJ0TPRfQ/Rhr
l82yeowJ/RVje/bWZyxAf8PYEX0hYxX0MMbv8ziHMR/dgPNqw2uBSfBKzNWB
/8xvToeXZ+4BeCPmKqArgjz4GRV4PsYfWC/JOJY9cxh7ozcGP9MK+HJQnP/7
mrkp8GXs2Q3/DUxFT0vmW8pkWTnOXqrn5OztzC2ED2P92+Bn/hF+gLnSoBR4
G/0OGMR6J9AGXgDWwWeDMezphf4cPp077glfxNwD8A3MPYl+PZkvB0/rLPAN
fBUYD58AxsOfBaV5vs3oEfAauiNwCnPVGT9jbj1rJdDV0P+iS8FLguHBe+rA
Z+TurhnjZPbvBRXgO9mzD34CXhlUAr+jr0m+G83NBLvQ5Rgnsv8A/E/QEx6Y
uxj+L+NpsiVztfi/afBN+VnWlLEe+jywlrUO4Hx4IX7TDVtdz3pjrSe/6x3o
MuiyYD36KfAKa3XBWdFzHeCnFvgu5qI7o/PQNdEL0F8n+7R8uTCoqrtBd2Wt
CboBuhK6C7qlnh+dj66GfdqjG+pu0Q3LZ1krdH30Keib8IXm6GrocYyNWL9c
98vaGPCjbA8OwQ+C1vAvQI9km8lWn4Jl6E9AG/hhsAa+Ggzm/CPoAfB5OiP4
jJnwvoof7LFPZ8DnMPcG/F7wgX7P3AH4n2Co4hl9NNiH1+pedAb8frAOvRD9
Fryt/CX5HZvnYvi47AmqoPuh+8I/Bofg94G58M+i/7s3uB69Bn1P8DMVTrax
bHt3sG/IxyrlfORz+FbGh1h7G/ygu9H7B8/dCf+euQeD5/5QnmBuNHwe2BAd
M4qV1cGxsZu5bsExshdek7mR8OLKack2lS0f150k79FaUTAa/TtjCbCV9a36
/2TfU465Gv4YWIqeoZiEP5f83y2x2ROyPfvW5OJ5CrwLcwuDY/h5+OXg4eA9
U6N9Vr7aQ++s+wIvwBeBrvALwUvwJeBD9j+azFfK3rqb5L2vgMnKLbKRcoly
HHwneDk4Zh9OPkO/XQxuQXdXTtRZ4Cv4WNYP4v8n0RvRu3Kxk4EtykfyofK+
oy/Q2xj/ka/ozuFPJb+7clwx7no7cyfQVRlHsPZr9NlbwD3od9Er4LN0p+gV
0b69Vz6EXqk8FJzT16JH6c7K+T8Ve6Nko+AY3A6vB/rkO0cfUo5Ej2P9meDa
tQfkR9cw2XJWLlfJprLNFcrpwTZqJH8C5RXr5MwMPlt1MTjn/YWeqzwKT4x3
oe8GQ4Jr6vDod9S7fakcgL4hOVYU89fCr1MNCI7pkzkfk29pbgm6WbJvKIdW
hS9mbmpwTpevKMcqt8pnVEsfSbatauox+NHkWFeMy5dUA5T75VO6+9bJtUo2
KJJc0+vlYljv1h+8GfyO57J+FZgefKfjo3Owcm/34NxyBJwenWNWReck5aL9
oBBnZwXO/QOVQ/RsybEvm7ZQLVBORLfIc+xM54wJwTF0QXLPUCtXo2Vr1QzV
Ctlcvl87OfcqBjrCJ8pH4B8F+7ZqQJOcj8uXm7JnWrBPK9dvAoWic77uejR4
N/jOOyX3HOo15gfXom3g1Oia1A7eNrnWy4cuVSxG54b+6NvRFUBnxbJyHmut
krl6iG/RtybfjXqeisk1SrVJNUm1vT1zc4Jr/Kvw15J9Sz7XBD4/+u6Ur/9D
l03+b9XcBawNBgOUm0AZ1m5Ojn3d+ZDonku9lmrQwOieTr1csTz3JgOTeyn1
KIuVe5JrRztwJXxftC/oTvdE51jlVvWUI5NzgGJfMataqZyrXKuauU7vkty7
qEbfCG+e/N/ywZjcs6pXVc1W7moJZgbnMN2tarhqt+54Z3QOU+6STd+L9gn5
gmrC2ck1RbVEPjIp2sayrWqMesX9yb2Nesb68L/hZXM+qV5jB3NlonuOWXpW
EHM1uHJyz9s4V8NkuyLoM6JteCLZZrKVauzh5Bqr2lqAnp+cY5RbVHP/1rNH
rynGinJWYTA0+Ezx4gXOtZrbH92zqleVjyp2D0bXBsXwkeieW722euqNoHTu
eXSnK+Gbo3tb+YzefWJyb6w7UG+xKrlXUY9xPLqnVC+pHDtdtSC69vdSPkOv
j/YV9TRfwpcm9z7q0ZXrVQOU+5Xzj0V/g+jbQzn4F/hPyblcd75Ba9G1XDG6
I7rHUm+lnlu2eDG595JN1Gt+mJyL1HMql/eJfjbldH17NEzubfUNUiO5x1Nv
p55CvfI/0bVWPfOg6G8cfduoJ9yeq4mqhap5+hZQj696qG8CfQtdlhx7+ia6
SPbn952ia7S4ao5qjeb+B7pNEsc=
          "]]}]}, {}, {}, {}, {}}, 
     {Thickness[Large], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwl1EtUzAEUB+CbRx6pZlAehZno4ZUZVMprkkIeTXlsWODIkiw8luGwzoJz
WNWCLGvBklpw2NWCJbVgw6Kcw9oXi29mzpy5s7i/3/2nL1/vuVYQEfu9zPM+
97mbIWZp9cUjpsn6wV0mSc+PuME4yQURlxilYKF5hpiltdA802QXmWeS9GLz
jJNcYp5RCpaaZ4hZWovMM012mXkmSRebZ5xEScQFhvlFS2nEfT5Skog4zTO+
UpWM6OUlP8kuj7jDWxatiDjHC/7QsTLiCd9pLIt4yGdqyiNu8Z7yVRFXeU3h
av/BYpawlCKWUUwJpSRIspwVrKSMclaxmjWspYJK1rGeDaRIU8VGNlFNDbXU
sZktbGUb26lnBxmy7GQXu2mgkSb20EwLe9nHfg5wkBytHKKNw7TTwRGOcoxO
jnOCk5yiizzd9HCaM5xlIa/ssZcy3tnvTar5ZO8PaOCbPB7Tzm85PecshbyR
420y/JDvMFdI80X+T+mhmA/6cY9mZvXmBecpZUyv+kgxoW/9ZJjSwwFyzOjn
IHmCEf29SIIxve4jxYS+95Nhyh0MkGPGfQySJxhxPxdJMOau+kgx4d76yTDl
DgfIMWNskDxdnOIkJzhOJ8c4yhE6aOcwbRyau29yHOTA3HOAfeylhWb20EQj
DexmFzvJkmEH9WxnG1vZwmbqqKWGajaxkSrSpNjAetZRSQVrWYNahDqEGoT4
Q+wh6hBxiDVEGSIMsYW4QkxR9D+SEEWIIKw+Cv+vOaw3rPXf8+4vy/F3lw==

       "]], LineBox[CompressedData["
1:eJwl1Xf0T3Ucx/H7s0eUze9n/ZQVIltJ0ZT+oYGijKJSxjk5iAaFhpWV7IyM
bJIoM3srI2QmFLKbxuN9+uPp+Xq9P5977v3e+zk/6W06NemYkiTJOP9cK5Ik
Z1KT5D8+yw9hoDyLZ+NLrNbP8wX8gQSLzAZgjrwmclyHDKicliQpvADrrM3n
9byQM6M3LuEiNpt/whVdM5SX4GuswHZry/k7DME2/VvOhr/xFwZjq/ky/hNX
43r9Cg/CUnyDy1gc90IR98qqN8LjGGaWaraL6+g5UEXPzk9guHmavofr6st4
BNbKe3kkf4pRYf1Jfgr5UNt1efkZ5EdVvQDvj+fgOnphbobmSEVf9MMYe57l
sdyCWyIN3dEfH8S7sfYGP4eueB7jzHpwNxyS3+b7UA/j9eLuWVxug9b43OxD
fhfH5Xf4GGe3LweyoYTZcrOJ2Cn/wmPi2VAK1e1J5x/xq7Uf+CTv5jvwE37T
9/HvXJrTXTNFfkmexrfrZeRzctm4Tp8ut5Nn8EH+GQfiHOqTeDJy2Zcb78t3
4jDOWz8UZ5aPcCXUsueuOAtmU3gqvogzrr/Cc7icPVXiHMnT+DZ9pZyHX9Pv
Rl65KnfE63HOrXfizqiG8tbnmq1CPjk/TsT51KdzAb16PCvPMzspn4r3Fmda
r8n3WKvBp+Osm83ggmaFUCveJf4xnxnvE//KFazN51f1DqiMsmazzVaggX6F
y5jN4pf1W+Xj8T1xFJfMj3EF1LRWkevjYnwzfSa318uhhl4+zg8m4qy1/fFO
+QG+H2fkUvZN5Rf1nPIt2Bu/zWxP/Pb49lzSfLI8Ic5pnGOc0HfxJC5hvWQ8
p7yNd2A7spq35YycCRmQBZlxxN4tcSZ4K0/gF7gVisX3sqcob46zZW0jH+RN
XAhN47zpBWO/vaPlp+XP4m8RRkeO8y2v4w1Yj1F6Ex7JRV2XR94nN44zhRSz
BCPk3eaV4mziPb0PbiA3rsc3wr1Yal8vfgs9sVN/k4djGL7HGgw1X4IdWKmv
xips0RtyFizGJn0Rb+SvOBMei9+gZ+TCnmeI/Kg8OPbgY/kjrJXnxj15Hg/i
h/mReHb5XDw7P8hdsFCunfr//zc3AZSeA1M=
       "]], 
      LineBox[{6906, 6909, 6907, 6908, 6714, 6585, 6770, 6733, 6771, 6669, 
       6735, 6612, 6736, 6774, 6734, 6611, 6668, 6961, 6667, 6906}]}}], {}, 
   InsetBox[
    StyleBox["\<\"mfpt :  50.00\"\>",
     StripOnInput->False,
     FontFamily->"Gill Sans",
     FontSize->32], Scaled[{0.95, 0.95}], {1, 1}]},
  AspectRatio->1,
  BaseStyle->{},
  Frame->True,
  FrameLabel->{None, None},
  FrameStyle->{},
  FrameTicksStyle->{},
  ImageSize->640,
  Method->{},
  PlotRange->{{-1.25, 0}, {0, 1.25}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.614398428247842*^9, 3.614398462932376*^9}, 
   3.614399013252268*^9, {3.6144042961790657`*^9, 
   3.614404299814053*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvQdYnuX1P/6EvckAQiDsEUjCm70n2VOMe1DrxNGq1FkcVXHiqjipCxfV
itpGa+PCgUZxEJWosRZTqtJBW2yxFlv6/d7/8zn3Oc/7kLyQvG96/a5v+89z
XZDwjPs+5x5nn3NvPO6cU046/bhzTj3huNzVZx1XfcqpJ5ydu+rMs+hW+AjH
CbuUfs7PdfB/4zj6y3/V4pf3zlA3ivmfcDMwMMC3B/oHnG/zvQj8JfcHTH//
QKS82tfba/ptI84RAe5FyD0z0Gd6e/sGvYement66bdxIr3v9fUPem+gr9f0
2gadYwP0UTlMe95vw7xYxpgdW+owUqauuc0wYAOdppL+bnzzBVNBQ8rDGE6/
q02nHQ/nUP6dQL96zZa6SnpWaZrbuuxgdTXR3xVmx0CvaayqMHVNjaaqosbs
6DeH8WeJ/Nkuj/hqrnBMeeMO091ab8orak1zU52prGo0PfSV+21fu6kurzKN
9KyiutkirxB39pve9kZTUVlnGuurTVVDGw/CYQJuRyPdq2s0dZUVpkk67Wyu
ME55kw6iMf1tpqK8HiNhP4vdA7hbTX25HR/8bup0G3I26SjtAeRdwBo0PZjN
PlPnqzBt/Tpz0aa3u5tb6etoNJW1W4Ck6etsMVt29DmH8zvxjEi5r96PGP2v
u7vXdG+pMk7VFr7T21pjfNUt7uAGeGa/7O02Pf19pt7nM5u7bWuN5Y5p2NEv
ayGJV92WKsdUbbEvtNb4TI3838ILjH2mhdcY4eSUm9Zec6jOa/dmXmL8QV+L
8Tm19v/9BHLPl6a7s9Ps2EE/7U2mnN5r6+rdS7DxH5qAijrTxeO0w2zessM5
aG/BDgzXCDtJOfxPnOnv3GKqq6pNTU2N/FSb6rotdj/R8qkvrzCtfUZ3Y9fm
GlPd1OlZJXGmc0u9qaqu8TdRXWXqNnfawe6jRemro4ZMOL8eRXCWm5rWHvu0
o55g4ccVumr6O019NQNEqwa/o011db156NyAn8nKijQtQJ+eYxs5NFs0Q86B
sqICI/mIudBXblp6LaAd9T7j1LZJe1FEDZqN46uXgeg3DT7H1Lf3uWDSrS11
NBgumMncRdMjFxpfTaus23aacZ9p65N1PNBBfzu08GtNbXUl066q+hYsdCdU
9MPlu4GuzabSblHnYEHBEP2p3R1FxbC3tTYQqIMWSLhdxrSc6IcAwu9IWtbS
on+BcHd4v6WmwjS083MZ/3Bqome3NnqEqNsVUu+Zy2jeZfUg7O0ycr2tTBF6
vQNFqPYMajOafu801w/xnW0b3KzT1FgWa+pauzcNiWaU6d75HO2acuNvrdaU
+8ePVwjxjzbaqT3tDfR/erXfKNK9Pd27tfjSlT7jq2uXweth8kiDp2u4p6Xe
1Leitw4m5f2eMQwWX+XbPS21prKBuxTSEcVjPgxi7XUBoZSF4SXvOvm6twf6
+82AfNePVVrRjL8PdwfZpQbuJ211tLBbevyf2IV96PCPdcQ6m6uYyIFpVta1
MNPUT7E667D8e3T5l/uXPxG0gR3MyBxijHW0Izd39AhdjqLxqaOt0bLr1nA/
pX42Ex1p7Ww1leV2vJWkDwGwvQb6Tb+OzwCarYJk4p+X4SAeEiqZlyJ3gZMQ
1d1uqmir0FN3aohA1DbaSe3aUq207TD9ikDrJqbss8snXMe3qcJlUD2WWQmm
gZ8pqFitls8yqpZn9plDPY+bKsC7LKaWj3UpMevaDPjsOjlcPunvbOSZ5g96
LGvrUkAjWCyppQ6d8gZ8tncwdpq6miaenQFmlrwjDhoexrDh4dltMvrNjpZG
mirPZNgF1FpvOQB+6lu7BVFg0mNaSLByygfNhCvLNTexLNfRb9yZCPRMv+tp
ayDGUG+aG2pMRY1lEO53LN8R02q28l2fSzcimKuXk+zX1NLhXScs8tU3mfqq
ShL5+lQu4NHweXfCHqAiQdknyFfWt/K+PXgYqMIDdy8SpwXaeNSHQNpDvt4j
eVB24SBtRDbmIC1I7w3WggZrN5hj1YyiPPe6u7oZdqV+/QRL3zD9+vvoN30W
QKFlg/uIDNCeDkTQMrtxr/OkicRQpEqPKnqutBMZSPZw9iB8hMtYQLelX9/B
r2i3wQA8y9kD01KS4lGondQA99L24b393/7f/9ZuGiyiAAzW2QOH3b+I9n9r
Bi2iAIKBswfJYG8X0bEB7n17L9/bl2/9yAXBgCMCNPR/ESnhK5aLulzay0ED
YWLc6+Sh2x65/8P9H+7/cP+HIX446IkxJ7n3ov8z8dn/4f4P93+4/8P/lx/u
p6H7P9z/4f4P93+4n/ju//C//0PrYkox//M//2M++OAD09zcbB544AHzwx/+
0Nx///38znvvvWeWL19upk6darKyssy4ceNMTk6OOeww/tr86U9/MnfccYfZ
smWL+eijj8zXX3/9rxBAOUje+t///V/z/PPPm9raWrNmzRozcuRIJwKv00ez
Zs3id99++216094DaLhefvll2yz9HjFihCkqKjLnnHOO888QYKmQt4DaPffc
Y/7xj3/w/bFjx0ofGSYzM9OsXr3aVFZWmjPPPNNcNDXT7Dh4qnmnoszcs7DA
PL682LSsnWheWTfJPL+m1DyzupSfv//+++bEE080K1asYBijo6MZgMMPP1zx
MEuWLDE33XST+c1vfvN1COBv5P/GmRdffNEccsghJioqil965pln+DlCd773
ve+ZH87JNS+vmzgacFGj2zdNMU8Q1B0dHfzaGWec4Y7ojBkzzJVXXmk+/fRT
py8EkNbzf6PNL37xCzN9+nR+AT/h4eFm7dq15qElhQ6PH8312weUmYcfftgc
euihJiEhQcMPGxoauKm+vj7nLyGAsIb/G2P+9re/mQ8//JDvNTY28os0seb0
iemYrFyGIsa8d6DPPPnkk+a4444zv/vd7/j12bNnm1WrVpn2dgnMCQ6C1TII
jzzyiBk/frwpLCw033zzDS+vq2Zmm/cP9DnF3H2U+eSTT0xycjI3guWM3Ub3
/hRCtyv5v1Fm+/btZunSpe7Yz5w5Eyt0ovT4xsbJ5txzzzWxsbH8GAuzvr7+
jyH0uEJ6vPrqq3mG8UJqaqqpnZ5lPjxoSpn0SGuPhxePb731Vv6Utv8fQuhx
mfSoAbs/+9nPuOejC1LMmxsnT1Mc33iDCQxGfO7cuUzn6O/fhdBjubx15513
mpKSEtPbaz20z60udWbJjnrsscfc0V68eLHp7Ox0fjt0X7u73xOG6n2JfPfP
f/7TVFVVub1cOm28M1d6x+pNT0/n+2PGjDFvvvmm0z1M77HD+7xtMHDAaOCw
ocBcLB18+eWXPAB4Aevr2lnZznwBE+tu/fr1/Cw+Ph48xPliGDD34Fc3gYNi
A3mN+PciaRxkwefz8QvYnI8tK3YWCkUCZTz22GPNMcccg+UyHHSBvfXqFPGG
ffK9SLeRhfIK8SxeTy+tnegskf7/9S/mqMxnaMnudL8c3qWvAQ7eUMIhx2GB
oIF1fMUVV7BIAH5F1JiatnDQCmJihI8vvvji3ww7DsP5h4eIbxsSuPkyYkT7
mQjjhaoJaSsErgcffNBERLCUAFGka1i4hnM5DhHcNSRc86Rt0BMlrfn5+eAj
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
xx2VqqYdoqnu/qyysWPYZ2GeZ42eZw3tfa4BxTMDDlevB3A4Qry1i9/Q7DrT
12kaqiv0DfvbV2HqNnfwLo9x3+429RX+virqWvE8RZrp7Wo3TXU1ptznuI74
ypoG09Fjo0f9J38PmI7mOuPzduf4uDudK9tdr2mq8nfnVDYihTJiL5vZ2+7y
93FGG7wjUt8+aNaCeRY2xLP69t6AMxojuJRXNxtJTXbfgzGvRt6LdGe03n1P
wzH6dzR69qjs036jwT/W1DS4u9rNO9yx8E9Fv9lSUz5ooZXXtpgBec9Niu1r
MxWDuqvwmrH21Mzedpe7jzPaOMysBfMsbIhnQ81omDtT5aayqspU+GA+k3tV
UibAHc5w09lctcu3kcZX7vMPb3kDZtzdvwOdTbvMdhXy772zXSnNxUq31Zu7
3HFSkNsbKt1uo2USiCSZQVdfO2baxcjy90HQ795MuLeZYbob/F7Of8xs78pj
y03zjl53PECnOlsbPXQqEt8OGtV2Ir9h7khUmtZuWRP9vaZjS72pqrH53TEu
LERCq8vdPqubOhxLrmN0ivh+eVWNadrcYtpJvmtv22Lqqyvchcese/DUDXQ2
77Zoa5raiHV3m9bGalm0kaa5a8AD/IBpbahyF2pVfasZ9LSz2V3se25rT++H
e993sv9jl0gFyLG0GWv6adx93g1c0Wj63BFhtuHOh696s0sQkwRJxFL3Sxq9
cm3iAaauus60dfc56mfq7Wh26b7O1647vKXG5y5TEmQGPetorHJZreu28CzL
lhoPkRJBSPGnbwc9o+/dZ8F+95/DCAKL85Eyaq11FZ5n7n7U9nTKKxr8VNEn
zfa01g8aFj84tkZFlXc5ldf7a1TYwiZ1vt3YRczefB071Nf2sp/62UO5XzQJ
G773nP+SKe3fXdsKOKX17S4uPvl0t4GvaHCpQG9bvW683Vl3pFdi4J+61h53
U9Kng57R9wJtdKDvtDsn2P7+W2YwwLN/xwwSi/dLTT5iY5p6ZyHaVYYrJ0x0
BulTzzP+1p3BAN9pd06w/f23zODgFR/EHtx9s3jB6fALrLt0GemVse13DR3u
9A39XXSg7xgg+sYzfe4i9A9bgP7+rdPXMMwUNXQM+az83zB9WwZJA1Wmo3+P
06chyb07dhVwIkjA8QsxrXXlXt4kVan8lgnav9Xe/VvZBOVMbUr0tf+R/dw/
kYE/xTdOCF3uSbL1PxlqBklx9nfS71cJbCfNkCF1Mkxvq44a/9S2dA8ziX1D
TGLlIJG2c3PNoI2k4+GZSI98459JFWk5JKrX1rlIEzT6utpNS2s7m/p6errN
jvYWU19ToZoESxJuH72modwjifgpsccONRg1Uauj3MfcxK7E3J3wgF+H3Ot4
d1b35A3Rs+U8DfmF+foWj+LQb1rqKlxFq6K22fS4ulOPaazyC/oNHfar/t5e
09fbaerK/W3Wbuk0fTDO2tnArMuzKOYsTe2dpqur03R27jBtW5pNbVW5dtnU
iemwlR3RbK3PcT/11WwxvWLz5R9qfkCTV4hoNlW7Q+SrauS9liqYt9e7+1As
B5EkgXQb/zVYZcIQ73Ea7FRFeR437DJLw00+fx1yr6HrsYOXgd8MWm6qa2pM
VbnHQExTBeNTufseZqnGsHBn6YP/VctwMNPxcq9S9mh/Z5NrRPJaf2IUHL8I
5I5Eo39XuvmHHqbot2QSiA1iw/arC6gQ6Nt1xCLdx91YrEPv4WG+jh7ia/5k
D3s4YK/7Oo2y4NzxbaSd1WJVRJmbCP8679ttytpkyrzT09DS6RnOcNPVUucO
+67f7nEaO1zSEnAavauvpn6z6fLIRx2NXhmIefog2cnLncrr2vyy05DfRQf6
joGjbzyykys/DJKddu0vJ+Sps8SgiReZXWg1RDB7O7fw7gt3R7rCNHf4jX6d
LY2AIdylYRVER3vcxxj+GijJPk8TPp/xseJczWxObPwRSJq0W4hfqYDJb0u7
6R1QDMJNt2fWeWTC+KNwac8Oq1LetnrPkFfUc+huqqA6WJStNZ19/ZzMM2DU
90DaSoNXWyk3rb2eqe5pGSRpVHi1nCG/iw70HQ8TfTPIFt3au8tUB+gvlKlu
llb74Ofstv7MfnVZ4WPE3Fr3Z1dXDx75Ud6Fk9Rs6RIbXYTp9hhxCDTtvq+n
l5PkBlzZZxclwpIkiZCNNF27yFq1pI1r9z2tdYOekTTsjvjQ30UH+o5Hgr5x
N3ptq7tiXZkwUH+hjHiLZ/h21Q9VDuhps/InlI7SQONU7h2nqN3kXMeaUv12
sQGzpdqre3Dh2pi9+Tp2qK/tZT/1L1WPDTds+N73bewGS7Awnabp2NHSq7Hm
Xadkj2vM8ifxVbuSYZOfr/MF073LBCxLlNUUShuR3jb0W/fZ3vYdCk9+Ud5q
qS0fNB3w6iwNNFbij4uTpbDrHrAeHZnw3g7oey6sWkfbuMw3mO8jvd/zRd/6
x28v+w19jMK9nmZX466orjE1VRWmomYzSOHCQENmuZVwr3AhFVoASH/3uiKR
gl1eUa6ekoBqdew+fBu2D9/m7MMQekI9/G5hzxJeIO91BHCYeo0g7rj1d6hJ
wSPjVZo2YY7xe/lexF6+F4o35iVte6DL1FfuIj96AhoU991VPhJeRN4bBGtf
h6kp32UsScCRbSCVZfb8XtRevpcXAu4v839BFOEY3mzqamtNLf3U1TeY5pYd
zPYXysf9PTtMa2sbalwRTPgdbtpaW01HV58HTrTVbzpamkwtaX31DQ30b61p
2NzGUuDIvXgndi/eKQgBV77+M+Ih93/4b81tTAi5KV6LQ+cxvvkCNCeP2F9t
OiU9LCxAq8GAP1RCIx50NJrK2i0stvV1tpgtO/zxeKF356YeqqYGkby6yers
/FLwWYxKulpqKkyDjTP5N0C6W+riQH+/G+fR30F6TIXHphxqTwFTF3GoRW2j
5XNdW6qZP/T9W1MXXUM4Ylk86m99a+DjKPaqGxVFBvr7TP/+/MX9H+7/8P/l
h6kB7h0b4N639/K9ffn2vxPMtH14b/+3//e/3b8c9n87xHIw9gn94gMJVRYd
8f8BX4ATDA==\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"StripedShape", "[", 
      RowBox[{
       RowBox[{"CutFunction", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", 
          RowBox[{"Inside", "[", 
           RowBox[{"int", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ",", 
       RowBox[{"Direction", "\[Rule]", "1"}], ",", 
       RowBox[{"PlotPoints", "\[Rule]", "100"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "Medium", "]"}], ",", "Black"}], 
         "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"StripedShape", "[", 
      RowBox[{
       RowBox[{"CutFunction", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", 
          RowBox[{"Inside", "[", 
           RowBox[{"int", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ",", 
       RowBox[{"Direction", "\[Rule]", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"PlotPoints", "\[Rule]", "100"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "Medium", "]"}], ",", "Black"}], 
         "]"}]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.25"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.25"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.614354237442787*^9, 3.614354254330908*^9}, {
  3.614354300915378*^9, 3.6143543038669558`*^9}, {3.6143559175295553`*^9, 
  3.614355981890131*^9}, {3.614399083407721*^9, 3.6143991086390038`*^9}, {
  3.614399223819037*^9, 3.61439925076597*^9}, {3.6144033469772997`*^9, 
  3.614403350951592*^9}, {3.614403393688224*^9, 3.614403399867467*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"pic2", "[", 
     RowBox[{"50", ",", "1"}], "]"}], ",", 
    RowBox[{"pic2", "[", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.614399747366405*^9, 3.614399799265032*^9}, {
   3.614399837698944*^9, 3.61439983963588*^9}, {3.61439993698204*^9, 
   3.614399963055463*^9}, 3.614400148920167*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pic2", "[", 
   RowBox[{"level_", ",", "dir_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"DrawIn", "[", 
        RowBox[{
         RowBox[{"SetInner", "[", 
          RowBox[{"int", ",", 
           RowBox[{"levelFunc", "[", "level", "]"}]}], "]"}], ",", 
         RowBox[{"PlotPoints", "\[Rule]", "100"}], ",", 
         RowBox[{"BoundaryStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Dashed", ",", "Thick"}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "White"}]}], "]"}], "]"}], ",", 
      RowBox[{"StripedShape", "[", 
       RowBox[{
        RowBox[{"CutFunction", "\[Rule]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", 
           RowBox[{"Inside", "[", 
            RowBox[{
             RowBox[{"SetInner", "[", 
              RowBox[{"int", ",", 
               RowBox[{"levelFunc", "[", "level", "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", "200"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Thickness", "[", "Medium", "]"}], ",", "Black"}], "]"}]}],
         ",", 
        RowBox[{"Direction", "\[Rule]", "dir"}]}], "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"ImageSize", "\[Rule]", "640"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.25"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1.25"}], "}"}]}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.61423228246493*^9, 3.61423241013223*^9}, {
  3.6142324485742283`*^9, 3.6142325778012857`*^9}, {3.614399274161398*^9, 
  3.614399283288788*^9}, {3.614399313730384*^9, 3.6143993380112543`*^9}, {
  3.614399368320693*^9, 3.614399396459091*^9}, {3.61439972430538*^9, 
  3.614399725105891*^9}, {3.614399822128109*^9, 3.6143998314206944`*^9}, {
  3.61439987830901*^9, 3.614399882655575*^9}, {3.614399959291066*^9, 
  3.614399959474454*^9}, {3.614399993642379*^9, 3.614400014779107*^9}, {
  3.614400054590703*^9, 3.614400115920411*^9}}],

Cell[BoxData[
 RowBox[{"pic2", "[", "40", "]"}]], "Input",
 CellChangeTimes->{{3.614232292247301*^9, 3.614232297006399*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lev", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"pic", "[", "lev", "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.001", "]"}], ",", 
      RowBox[{"Map", "[", 
       RowBox[{"Point", ",", 
        RowBox[{"SelectOut", "[", 
         RowBox[{
          RowBox[{"SetInner", "[", 
           RowBox[{"int", ",", 
            RowBox[{"levelFunc", "[", "lev", "]"}]}], "]"}], ",", "frames"}], 
         "]"}]}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.614086514795003*^9, 3.614086516373611*^9}, {
   3.614091283839974*^9, 3.614091478625793*^9}, {3.614091946313651*^9, 
   3.614091946445972*^9}, {3.614231594862236*^9, 3.6142315952471113`*^9}, {
   3.614231635830464*^9, 3.6142317242999573`*^9}, {3.614231847858369*^9, 
   3.614231847976302*^9}, {3.6142322492459497`*^9, 3.614232254428624*^9}, {
   3.614400477470499*^9, 3.61440052994461*^9}, 3.614403323643585*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centers2", "=", 
  RowBox[{"KMeansClustering", "[", 
   RowBox[{
    RowBox[{"SelectOut", "[", 
     RowBox[{
      RowBox[{"SetInner", "[", 
       RowBox[{"int", ",", 
        RowBox[{"levelFunc", "[", "lev", "]"}]}], "]"}], ",", "frames"}], 
     "]"}], ",", "25"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.614091964480324*^9, 3.61409197648577*^9}, {
   3.614231996671665*^9, 3.614231999672229*^9}, 3.6144005783032293`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.38264707960199035`"}], ",", "0.4164064577114427`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8387534933333332`"}], ",", "0.7334181022222223`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8397151379310345`"}], ",", "0.30461562068965525`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.387492067085954`"}], ",", "0.4775365199161427`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.42360930254777057`"}], ",", "0.32934406050955417`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8790847352941176`"}], ",", "0.4475958823529413`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8386247737556565`"}], ",", "0.6090740407239824`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6505535723270438`"}], ",", "0.264612534591195`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8469883271028038`"}], ",", "0.5352491214953273`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.36167676497695844`"}], ",", "0.3295586635944699`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.584256697959184`"}], ",", "0.3706329673469389`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.41360968297456013`"}], ",", "0.37268913111545987`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3443651130536125`"}], ",", "0.7692416888111879`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5408465140186914`"}], ",", "0.38114574299065407`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.41974647368421064`"}], ",", "0.4192687006578949`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7640846289424857`"}], ",", "0.5534812059369207`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7765099674556217`"}], ",", "0.8270814289940823`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.40439011811023623`"}], ",", "0.2584510944881889`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3568005464135023`"}], ",", "0.5324638322784808`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4257775975103738`"}], ",", "0.8938289066390048`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.49329615037593993`"}], ",", "0.38290079448621533`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.45656032605304203`"}], ",", "0.3838843728549142`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3419370069124426`"}], ",", "0.4680165622119815`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.33747172222222244`"}], ",", "0.3948100213675214`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.745667958549223`"}], ",", "0.26834211917098466`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.614091969488826*^9, 3.614091977902285*^9}, 
   3.614232030171749*^9, 3.614400589614562*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Doesn\[CloseCurlyQuote]t work yet. Apparently for ListContourPlot one cannot \
set higher region function resolution. BUG?\
\>", "Subsubsection",
 CellChangeTimes->{{3.6144036642205*^9, 3.614403686620219*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"int2", "=", 
   RowBox[{"Interface", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Centers\>\"", "\[Rule]", "centers2"}], ",", 
      RowBox[{"\"\<Inner\>\"", "\[Rule]", 
       RowBox[{"Range", "[", "5", "]"}]}], ",", 
      RowBox[{"\"\<NearFunction\>\"", "\[Rule]", 
       RowBox[{"Nearest", "[", 
        RowBox[{"centers2", "\[Rule]", "Automatic"}], "]"}]}], ",", 
      RowBox[{"\"\<Cutoff\>\"", "\[Rule]", "0.15"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.614400611817354*^9, 3.6144006269800663`*^9}, 
   3.61440073133218*^9, {3.6144015799754267`*^9, 3.614401621239332*^9}, {
   3.614403335835693*^9, 3.6144033359256277`*^9}}],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PositionContourPlot", "[", 
       RowBox[{"centers2", ",", 
        RowBox[{"Range", "[", "25", "]"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"ContourStyle", "\[Rule]", "Black"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.25"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1.30"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"MaxPlotPoints", "\[Rule]", "200"}], ",", 
        RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"DrawOut", "[", 
        RowBox[{"int2", ",", 
         RowBox[{"PlotPoints", "\[Rule]", "80"}], ",", 
         RowBox[{"BoundaryStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Dotted", ",", "Thick"}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "White"}]}], "]"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PositionContourPlot", "[", 
       RowBox[{"centers", ",", "mfpt", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"ContourStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.25"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1.30"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"MaxPlotPoints", "\[Rule]", "100"}], ",", 
        RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"RegionFunction", "\[Rule]", 
         RowBox[{"InFunc3", "[", "int", "]"}]}], ",", 
        RowBox[{"Mesh", "\[Rule]", "Full"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"DrawIn", "[", 
        RowBox[{"int", ",", 
         RowBox[{"PlotPoints", "\[Rule]", "80"}], ",", 
         RowBox[{"BoundaryStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Dashed", ",", "Thick"}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "None"}]}], "]"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6144006647604837`*^9, 3.614400712279252*^9}, {
   3.614400742900482*^9, 3.6144007457964783`*^9}, {3.614400788189024*^9, 
   3.614400850321712*^9}, 3.614400913918613*^9, {3.614400968011476*^9, 
   3.614401031196599*^9}, {3.6144010619224453`*^9, 3.614401197185567*^9}, {
   3.614401255659081*^9, 3.614401259163862*^9}, 3.61440130021801*^9, {
   3.61440133345634*^9, 3.6144013335900793`*^9}, {3.614401470348021*^9, 
   3.614401533909747*^9}, {3.6144016667056026`*^9, 3.614401680979539*^9}, {
   3.6144017150808697`*^9, 3.614401728415286*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[
 CounterBox["Section"],
  FontSize->24],
 StyleBox[".",
  FontSize->24],
 "RESULTS"
}], "Section"],

Cell["[ Summary, Conclusions & Outlook ]", "Text"],

Cell[BoxData[""], "Code"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[
 CounterBox["Section"],
  FontSize->24],
 StyleBox[".",
  FontSize->24],
 "APPENDIX"
}], "Section"],

Cell["[ Additional Material ]", "Text"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{1697, 1156},
WindowMargins->{{-12, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
DefaultNewCellStyle->"Input",
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Book"}, "Compilation.nb", CharacterEncoding -> 
       "UTF-8"]], Background -> None], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Title"], CellMargins -> {{32, Inherited}, {6, 12}}, 
       MenuSortingValue -> 10000, FontFamily -> "Gill Sans Light", FontSize -> 
       36, FontWeight -> "Plain", FontSlant -> "Plain"], 
      Cell[
       StyleData["Title", "Printout"], 
       CellMargins -> {{32, Inherited}, {6, 12}}, MenuSortingValue -> 10000, 
       FontFamily -> "Gill Sans Light", FontSize -> 36, FontWeight -> "Plain",
        FontSlant -> "Plain"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subtitle"], CellMargins -> {{32, 12}, {20, 2}}, 
       MenuSortingValue -> 10000, FontFamily -> "Gill Sans Light", FontSize -> 
       18, FontWeight -> "Plain", FontSlant -> "Plain", Background -> None], 
      Cell[
       StyleData["Subtitle", "Printout"], CellMargins -> {{32, 12}, {20, 2}}, 
       MenuSortingValue -> 10000, FontFamily -> "Gill Sans", Background -> 
       None]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Date"], CellFrame -> None, 
       CellMargins -> {{12, 12}, {12, 12}}, TextAlignment -> Right, 
       MenuSortingValue -> 10000, FontFamily -> "Gill Sans Light", FontSize -> 
       9, FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
       GrayLevel[0.3], Background -> None], 
      Cell[
       StyleData["Date", "Printout"], CellFrame -> None, 
       CellMargins -> {{12, 12}, {12, 12}}, TextAlignment -> Right, 
       MenuSortingValue -> 10000, FontFamily -> "Gill Sans Light", FontSize -> 
       9, FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
       GrayLevel[0.3], Background -> None]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Section"], CellFrame -> {{0, 0}, {0.5, 0}}, CellDingbat -> 
       None, CellMargins -> {{41, 12}, {8, 24}}, CellFrameMargins -> -4, 
       CellFrameLabels -> {{None, None}, {None, None}}, FontFamily -> 
       "Gill Sans Light", FontSize -> 15, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontTracking -> 8, Background -> None, 
       CounterBoxOptions -> {CounterFunction :> Identity}], 
      Cell[
       StyleData["Section", "Printout"], CellMargins -> {{21, 2}, {6, 21}}, 
       FontSize -> 13]}, Open]], 
   Cell[
    StyleData["Subsubsection"], FontFamily -> "Gill Sans", FontSize -> 11, 
    FontWeight -> "Bold", FontSlant -> "Plain", Background -> None], 
   Cell[
    StyleData["Subsubsubsection"], CellMargins -> {{65, 12}, {3, 3}}, 
    FontFamily -> "Gill Sans", FontSize -> 11, FontWeight -> "Bold", 
    FontSlant -> "Italic", Background -> None], 
   Cell[
    StyleData["Input"], CellMargins -> {{66, 10}, {5, 5}}, Background -> 
    None], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Author"], CellFrame -> {{0, 0}, {0.5, 0}}, 
       CellMargins -> {{64, 24}, {0, 6}}, MenuSortingValue -> 10000, 
       FontFamily -> "Gill Sans", FontSize -> 12, FontWeight -> "Bold", 
       FontSlant -> "Italic", FontColor -> GrayLevel[0], Background -> None], 
      
      Cell[
       StyleData["Author", "Printout"], CellFrame -> {{0, 0}, {0.5, 0}}, 
       CellMargins -> {{64, 24}, {0, 6}}, MenuSortingValue -> 10000, 
       FontFamily -> "Gill Sans", FontSize -> 12, FontWeight -> "Bold", 
       FontSlant -> "Italic", FontColor -> GrayLevel[0], Background -> None]},
      Open]], 
   Cell[
    StyleData[All], FontColor -> Automatic, Background -> None], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["AuthorEmail"], CellMargins -> {{80, 24}, {0, 6}}, 
       MenuSortingValue -> 10000, FontFamily -> "Courier", FontSize -> 11, 
       FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> Automatic, 
       Background -> None], 
      Cell[
       StyleData["AuthorEmail", "Printout"], 
       CellMargins -> {{80, 24}, {0, 6}}, MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 11, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> Automatic, Background -> None]}, 
     Open]], 
   Cell[
    StyleData["AuthorAffiliation"], CellMargins -> {{80, 24}, {0, 6}}, 
    MenuSortingValue -> 10000, FontFamily -> "Gill Sans Light", FontSize -> 
    12, FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> Automatic, 
    Background -> None], 
   Cell[
    StyleData["AuthorThanks"], CellMargins -> {{80, 24}, {0, 6}}, 
    MenuSortingValue -> 10000, FontFamily -> "Gill Sans Light", FontSize -> 
    12, FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> Automatic, 
    Background -> None], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Abstract"], CellFrame -> False, 
       CellMargins -> {{96, 96}, {36, 36}}, MenuSortingValue -> 10000, 
       Background -> None], 
      Cell[
       StyleData["Abstract", "Printout"], CellFrame -> False, 
       CellMargins -> {{96, 96}, {36, 36}}, MenuSortingValue -> 10000, 
       Background -> None]}, Open]], 
   Cell[
    StyleData["Subsection"], CellDingbat -> Cell[
      TextData[{
        CounterBox["Section"], ".", 
        CounterBox["Subsection"]}], "SubsectionLabel", TextAlignment -> 
      Right], FontFamily -> "Gill Sans", FontSize -> 13, FontWeight -> 
    "Plain", FontSlant -> "Plain", Background -> None]}, Visible -> False, 
  FrontEndVersion -> 
  "9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, 2012)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 83, 3, 37, "Date"],
Cell[CellGroupData[{
Cell[508, 20, 214, 4, 60, "Title"],
Cell[725, 26, 217, 5, 44, "Subtitle"],
Cell[945, 33, 160, 4, 25, "Author"],
Cell[1108, 39, 115, 1, 20, "AuthorAffiliation"],
Cell[1226, 42, 113, 1, 18, "AuthorEmail"],
Cell[1342, 45, 207, 5, 25, "Author"],
Cell[1552, 52, 165, 3, 20, "AuthorAffiliation"],
Cell[1720, 57, 139, 2, 18, "AuthorEmail"],
Cell[1862, 61, 202, 5, 25, "Author"],
Cell[2067, 68, 165, 3, 20, "AuthorAffiliation"],
Cell[2235, 73, 128, 2, 18, "AuthorEmail"],
Cell[2366, 77, 209, 5, 25, "Author"],
Cell[2578, 84, 165, 3, 20, "AuthorAffiliation"],
Cell[2746, 89, 133, 2, 18, "AuthorEmail"],
Cell[2882, 93, 207, 5, 25, "Author"],
Cell[3092, 100, 90, 1, 20, "AuthorAffiliation"],
Cell[3185, 103, 115, 1, 18, "AuthorEmail"],
Cell[3303, 106, 32, 0, 84, "Abstract"],
Cell[CellGroupData[{
Cell[3360, 110, 529, 13, 56, "Section"],
Cell[CellGroupData[{
Cell[3914, 127, 36, 0, 43, "Subsection"],
Cell[3953, 129, 64, 0, 17, "Text"],
Cell[4020, 131, 3109, 76, 176, "Input",
 InitializationCell->True],
Cell[7132, 209, 180, 5, 70, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[7349, 219, 39, 0, 43, "Subsection"],
Cell[7391, 221, 135, 3, 17, "Text"],
Cell[7529, 226, 110, 3, 22, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[7676, 234, 41, 0, 43, "Subsection"],
Cell[7720, 236, 75, 0, 17, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[7832, 241, 35, 0, 43, "Subsection"],
Cell[7870, 243, 55, 0, 17, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[7962, 248, 29, 0, 43, "Subsection"],
Cell[7994, 250, 52, 0, 17, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[8083, 255, 31, 0, 43, "Subsection"],
Cell[8117, 257, 58, 0, 17, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[8224, 263, 524, 14, 37, "Section",
 InitializationGroup->True],
Cell[8751, 279, 63, 1, 17, "Text",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[8839, 284, 145, 2, 43, "Subsection",
 InitializationGroup->True],
Cell[8987, 288, 1943, 55, 101, "Input",
 InitializationGroup->True],
Cell[10933, 345, 909, 23, 22, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[11879, 373, 133, 2, 43, "Subsection",
 InitializationGroup->True],
Cell[12015, 377, 254, 6, 22, "Input",
 InitializationGroup->True],
Cell[12272, 385, 2373, 58, 100, "Input",
 InitializationGroup->True],
Cell[14648, 445, 2810, 64, 346, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[17495, 514, 137, 2, 43, "Subsection",
 InitializationGroup->True],
Cell[17635, 518, 186, 3, 17, "Text",
 InitializationGroup->True],
Cell[17824, 523, 4279, 109, 197, "Input",
 InitializationGroup->True],
Cell[22106, 634, 2043, 57, 161, "Input",
 InitializationGroup->True],
Cell[24152, 693, 2135, 58, 161, "Input",
 InitializationGroup->True],
Cell[26290, 753, 2802, 66, 161, "Input",
 InitializationGroup->True],
Cell[29095, 821, 2684, 65, 161, "Input",
 InitializationGroup->True],
Cell[31782, 888, 1076, 32, 100, "Input",
 InitializationGroup->True],
Cell[32861, 922, 867, 24, 54, "Input",
 InitializationGroup->True],
Cell[33731, 948, 875, 24, 54, "Input",
 InitializationGroup->True],
Cell[34609, 974, 947, 26, 54, "Input",
 InitializationGroup->True],
Cell[35559, 1002, 953, 26, 54, "Input",
 InitializationGroup->True],
Cell[36515, 1030, 763, 22, 54, "Input",
 InitializationGroup->True],
Cell[37281, 1054, 875, 25, 54, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[38193, 1084, 129, 2, 43, "Subsection",
 InitializationGroup->True],
Cell[38325, 1088, 1205, 33, 84, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[39567, 1126, 143, 2, 43, "Subsection",
 InitializationGroup->True],
Cell[39713, 1130, 953, 26, 69, "Input",
 InitializationGroup->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[40715, 1162, 130, 7, 36, "Section"],
Cell[CellGroupData[{
Cell[40870, 1173, 134, 3, 43, "Subsection"],
Cell[41007, 1178, 509, 11, 24, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41553, 1194, 117, 1, 43, "Subsection"],
Cell[41673, 1197, 155, 3, 17, "Text"],
Cell[41831, 1202, 146, 4, 24, "Input"],
Cell[41980, 1208, 985, 29, 102, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43002, 1242, 131, 3, 43, "Subsection"],
Cell[43136, 1247, 1231, 35, 102, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44404, 1287, 131, 3, 43, "Subsection"],
Cell[CellGroupData[{
Cell[44560, 1294, 473, 11, 24, "Input"],
Cell[45036, 1307, 2606, 49, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47679, 1361, 262, 6, 23, "Input"],
Cell[47944, 1369, 2530, 47, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50511, 1421, 204, 5, 23, "Input"],
Cell[50718, 1428, 375, 9, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51130, 1442, 301, 7, 23, "Input"],
Cell[51434, 1451, 294, 5, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51777, 1462, 108, 1, 43, "Subsection"],
Cell[51888, 1465, 468, 11, 40, "Input"],
Cell[52359, 1478, 606, 16, 40, "Input"],
Cell[52968, 1496, 263, 5, 17, "Text"],
Cell[53234, 1503, 1901, 50, 120, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55172, 1558, 98, 1, 43, "Subsection"],
Cell[CellGroupData[{
Cell[55295, 1563, 111, 1, 37, "Subsubsection"],
Cell[CellGroupData[{
Cell[55431, 1568, 1432, 29, 40, "Input"],
Cell[56866, 1599, 7095, 124, 366, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64010, 1729, 104, 1, 37, "Subsubsection"],
Cell[CellGroupData[{
Cell[64139, 1734, 1206, 26, 40, "Input"],
Cell[65348, 1762, 7174, 120, 366, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72571, 1888, 116, 1, 37, "Subsubsection"],
Cell[72690, 1891, 1517, 38, 88, "Input"],
Cell[74210, 1931, 4112, 92, 136, "Input"],
Cell[78325, 2025, 4109, 96, 151, "Input"],
Cell[82437, 2123, 573, 10, 24, "Input"],
Cell[83013, 2135, 3354, 80, 168, "Input"],
Cell[CellGroupData[{
Cell[86392, 2219, 172, 3, 24, "Input"],
Cell[86567, 2224, 162111, 2675, 646, 125847, 2079, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[248693, 4902, 2112, 54, 40, "Input"],
Cell[250808, 4958, 431, 11, 24, "Input"],
Cell[251242, 4971, 2522, 59, 104, "Input"],
Cell[253767, 5032, 124, 2, 24, "Input"],
Cell[253894, 5036, 1088, 24, 40, "Input"],
Cell[CellGroupData[{
Cell[255007, 5064, 451, 11, 24, "Input"],
Cell[255461, 5077, 3200, 104, 59, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[258710, 5187, 219, 4, 37, "Subsubsection"],
Cell[258932, 5193, 700, 16, 24, "Input"],
Cell[259635, 5211, 3579, 77, 182, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[263275, 5295, 125, 7, 56, "Section"],
Cell[263403, 5304, 50, 0, 17, "Text"],
Cell[263456, 5306, 25, 0, 33, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263518, 5311, 126, 7, 56, "Section"],
Cell[263647, 5320, 39, 0, 17, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

